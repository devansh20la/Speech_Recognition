[Kspeech_job.sh 
learning_rate: 0.01, decay:30, checkpoint:
....Initializing data sampler.....
....Loading Model.....
....Model loaded....
New Best Model Found
Epoch = 0, TrainingLoss = 0.6244958127830543, Train_corrects = 15.143790849673202,val Loss = 0.5865435882618553, val_corrects18.710526315789473
New Best Model Found
Epoch = 1, TrainingLoss = 0.3266146754712061, Train_corrects = 20.980392156862745,val Loss = 0.33661422368727234, val_corrects20.289473684210527
New Best Model Found
Epoch = 2, TrainingLoss = 0.18517359426194466, Train_corrects = 22.666666666666668,val Loss = 0.1670512874659739, val_corrects23.394736842105264
New Best Model Found
Epoch = 3, TrainingLoss = 0.13883932682326416, Train_corrects = 23.254901960784313,val Loss = 0.15701726922079137, val_corrects23.68421052631579
New Best Model Found
Epoch = 4, TrainingLoss = 0.1101399357790987, Train_corrects = 23.58169934640523,val Loss = 0.1330491731825628, val_corrects23.236842105263158
New Best Model Found
Epoch = 5, TrainingLoss = 0.09897735626649817, Train_corrects = 23.77124183006536,val Loss = 0.12102449379898117, val_corrects23.394736842105264
New Best Model Found
Epoch = 6, TrainingLoss = 0.07724400643134502, Train_corrects = 23.934640522875817,val Loss = 0.11630326617313058, val_corrects23.63157894736842
Epoch = 7, TrainingLoss = 0.07247858685464141, Train_corrects = 23.96078431372549,val Loss = 0.1693699090300422, val_corrects23.526315789473685
Epoch = 8, TrainingLoss = 0.08448234137095925, Train_corrects = 23.908496732026144,val Loss = 0.1701021747001888, val_corrects23.236842105263158
Epoch = 9, TrainingLoss = 0.07047966715351495, Train_corrects = 23.986928104575163,val Loss = 0.14958485593333057, val_corrects23.342105263157894
Epoch = 10, TrainingLoss = 0.06569995134087353, Train_corrects = 24.11111111111111,val Loss = 0.16002786965911678, val_corrects24.05263157894737
Epoch = 11, TrainingLoss = 0.07193257479591363, Train_corrects = 24.0,val Loss = 0.1697974679991603, val_corrects23.57894736842105
Epoch = 12, TrainingLoss = 0.06245640663276396, Train_corrects = 24.084967320261438,val Loss = 0.18595806357303732, val_corrects23.526315789473685
Epoch = 13, TrainingLoss = 0.05811049700808807, Train_corrects = 24.209150326797385,val Loss = 0.21040270139622552, val_corrects23.36842105263158
Epoch = 14, TrainingLoss = 0.06872437610762692, Train_corrects = 24.11111111111111,val Loss = 0.24045877569379195, val_corrects23.394736842105264
Epoch = 15, TrainingLoss = 0.054926315724919204, Train_corrects = 24.18954248366013,val Loss = 0.1455143704201634, val_corrects23.63157894736842
Epoch = 16, TrainingLoss = 0.03984994223597111, Train_corrects = 24.352941176470587,val Loss = 0.7289642486721277, val_corrects22.473684210526315
Epoch = 17, TrainingLoss = nan, Train_corrects = 1.522875816993464,val Loss = nan, val_corrects0.0
Epoch = 18, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 19, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 20, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 21, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 22, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 23, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 24, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 25, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 26, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 27, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 28, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 29, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 30, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 31, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 32, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 33, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 34, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 35, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 36, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 37, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 38, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 39, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 40, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 41, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 42, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 43, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 44, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 45, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 46, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 47, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 48, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 49, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 50, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 51, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 52, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 53, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 54, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 55, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 56, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 57, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 58, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 59, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 60, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 61, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 62, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 63, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 64, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 65, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 66, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 67, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 68, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 69, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 70, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 71, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 72, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 73, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 74, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 75, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 76, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 77, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 78, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 79, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 80, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 81, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 82, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 83, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 84, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 85, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 86, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 87, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 88, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 89, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 90, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 91, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 92, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 93, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 94, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 95, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 96, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 97, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 98, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 99, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 100, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 101, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 102, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 103, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 104, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 105, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 106, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 107, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 108, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 109, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 110, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 111, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 112, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 113, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 114, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 115, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 116, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 117, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 118, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 119, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 120, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 121, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 122, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 123, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 124, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 125, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 126, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 127, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 128, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 129, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 130, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 131, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 132, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 133, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 134, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 135, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 136, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 137, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 138, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 139, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 140, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 141, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 142, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 143, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 144, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 145, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 146, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 147, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 148, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 149, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 150, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 151, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 152, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 153, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 154, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 155, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 156, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 157, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 158, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 159, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 160, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 161, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 162, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 163, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 164, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 165, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 166, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 167, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 168, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 169, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 170, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 171, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 172, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 173, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 174, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 175, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 176, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 177, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 178, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 179, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 180, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 181, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 182, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 183, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 184, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 185, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 186, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 187, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 188, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 189, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 190, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 191, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 192, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 193, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 194, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 195, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 196, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 197, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 198, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 199, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 200, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 201, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 202, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 203, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 204, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 205, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 206, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 207, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 208, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 209, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 210, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 211, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 212, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 213, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 214, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 215, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 216, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 217, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 218, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 219, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 220, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 221, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 222, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 223, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 224, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 225, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 226, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 227, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 228, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 229, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 230, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 231, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 232, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 233, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 234, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 235, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 236, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 237, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 238, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 239, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 240, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 241, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 242, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 243, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 244, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 245, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 246, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 247, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 248, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 249, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 250, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 251, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 252, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 253, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 254, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 255, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 256, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 257, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 258, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 259, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 260, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 261, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 262, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 263, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 264, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 265, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 266, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 267, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 268, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 269, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 270, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 271, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 272, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 273, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 274, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 275, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 276, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 277, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 278, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 279, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 280, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 281, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 282, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 283, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 284, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 285, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 286, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 287, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 288, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 289, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 290, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 291, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 292, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 293, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 294, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 295, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 296, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 297, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 298, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 299, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 300, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 301, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 302, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 303, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 304, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 305, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 306, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 307, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 308, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 309, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 310, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 311, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 312, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 313, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 314, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 315, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 316, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 317, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 318, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 319, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 320, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 321, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 322, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 323, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 324, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 325, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 326, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 327, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 328, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 329, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 330, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 331, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 332, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 333, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 334, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 335, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 336, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 337, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 338, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 339, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 340, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 341, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 342, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 343, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 344, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 345, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 346, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 347, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 348, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 349, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 350, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 351, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 352, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 353, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 354, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 355, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 356, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 357, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 358, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 359, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 360, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 361, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 362, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 363, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 364, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 365, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 366, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 367, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 368, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 369, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 370, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 371, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 372, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 373, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 374, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 375, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 376, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 377, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 378, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 379, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 380, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 381, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 382, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 383, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 384, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 385, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 386, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 387, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 388, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 389, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 390, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 391, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 392, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 393, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 394, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 395, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 396, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 397, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 398, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 399, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 400, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 401, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 402, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 403, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 404, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 405, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 406, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 407, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 408, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 409, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 410, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 411, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 412, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 413, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 414, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 415, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 416, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 417, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 418, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 419, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 420, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 421, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 422, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 423, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 424, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 425, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 426, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 427, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 428, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 429, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 430, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 431, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 432, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 433, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 434, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 435, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 436, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 437, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 438, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 439, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 440, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 441, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 442, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 443, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 444, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 445, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 446, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 447, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 448, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 449, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 450, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 451, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 452, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 453, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 454, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 455, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 456, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 457, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 458, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 459, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 460, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 461, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 462, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 463, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 464, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 465, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 466, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 467, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 468, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 469, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 470, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 471, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 472, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 473, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 474, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 475, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 476, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 477, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 478, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 479, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 480, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 481, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 482, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 483, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 484, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 485, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 486, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 487, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 488, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 489, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 490, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 491, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 492, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 493, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 494, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 495, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 496, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 497, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 498, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
Epoch = 499, TrainingLoss = nan, Train_corrects = 0.0,val Loss = nan, val_corrects0.0
[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m [K[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m ls
[0m[01;31mcheckpoint_ep0.pth.tar[0m    [01;31mcheckpoint_ep251.pth.tar[0m  [01;31mcheckpoint_ep402.pth.tar[0m  [01;31mmodel_best.pth.tar[0m    traincorrects246.pkl  traincorrects398.pkl  traincorrects99.pkl  trainloss24.pkl   trainloss400.pkl    valcorrects101.pkl  valcorrects253.pkl  valcorrects404.pkl  valloss105.pkl  valloss257.pkl  valloss408.pkl
[01;31mcheckpoint_ep100.pth.tar[0m  [01;31mcheckpoint_ep252.pth.tar[0m  [01;31mcheckpoint_ep403.pth.tar[0m  model.py              traincorrects247.pkl  traincorrects399.pkl  traincorrects9.pkl   trainloss250.pkl  trainloss401.pkl    valcorrects102.pkl  valcorrects254.pkl  valcorrects405.pkl  valloss106.pkl  valloss258.pkl  valloss409.pkl
[01;31mcheckpoint_ep101.pth.tar[0m  [01;31mcheckpoint_ep253.pth.tar[0m  [01;31mcheckpoint_ep404.pth.tar[0m  [01;34m__pycache__[0m           traincorrects248.pkl  traincorrects39.pkl   trainloss0.pkl       trainloss251.pkl  trainloss402.pkl    valcorrects103.pkl  valcorrects255.pkl  valcorrects406.pkl  valloss107.pkl  valloss259.pkl  valloss40.pkl
[01;31mcheckpoint_ep102.pth.tar[0m  [01;31mcheckpoint_ep254.pth.tar[0m  [01;31mcheckpoint_ep405.pth.tar[0m  README.md             traincorrects249.pkl  traincorrects3.pkl    trainloss100.pkl     trainloss252.pkl  trainloss403.pkl    valcorrects104.pkl  valcorrects256.pkl  valcorrects407.pkl  valloss108.pkl  valloss25.pkl   valloss410.pkl
[01;31mcheckpoint_ep103.pth.tar[0m  [01;31mcheckpoint_ep255.pth.tar[0m  [01;31mcheckpoint_ep406.pth.tar[0m  screenlog.0           traincorrects24.pkl   traincorrects400.pkl  trainloss101.pkl     trainloss253.pkl  trainloss404.pkl    valcorrects105.pkl  valcorrects257.pkl  valcorrects408.pkl  valloss109.pkl  valloss260.pkl  valloss411.pkl
[01;31mcheckpoint_ep104.pth.tar[0m  [01;31mcheckpoint_ep256.pth.tar[0m  [01;31mcheckpoint_ep407.pth.tar[0m  [01;32mspeech_job.sh[0m         traincorrects250.pkl  traincorrects401.pkl  trainloss102.pkl     trainloss254.pkl  trainloss405.pkl    valcorrects106.pkl  valcorrects258.pkl  valcorrects409.pkl  valloss10.pkl   valloss261.pkl  valloss412.pkl
[01;31mcheckpoint_ep105.pth.tar[0m  [01;31mcheckpoint_ep257.pth.tar[0m  [01;31mcheckpoint_ep408.pth.tar[0m  traincorrects0.pkl    traincorrects251.pkl  traincorrects402.pkl  trainloss103.pkl     trainloss255.pkl  trainloss406.pkl    valcorrects107.pkl  valcorrects259.pkl  valcorrects40.pkl   valloss110.pkl  valloss262.pkl  valloss413.pkl
[01;31mcheckpoint_ep106.pth.tar[0m  [01;31mcheckpoint_ep258.pth.tar[0m  [01;31mcheckpoint_ep409.pth.tar[0m  traincorrects100.pkl  traincorrects252.pkl  traincorrects403.pkl  trainloss104.pkl     trainloss256.pkl  trainloss407.pkl    valcorrects108.pkl  valcorrects25.pkl   valcorrects410.pkl  valloss111.pkl  valloss263.pkl  valloss414.pkl
[01;31mcheckpoint_ep107.pth.tar[0m  [01;31mcheckpoint_ep259.pth.tar[0m  [01;31mcheckpoint_ep40.pth.tar[0m   traincorrects101.pkl  traincorrects253.pkl  traincorrects404.pkl  trainloss105.pkl     trainloss257.pkl  trainloss408.pkl    valcorrects109.pkl  valcorrects260.pkl  valcorrects411.pkl  valloss112.pkl  valloss264.pkl  valloss415.pkl
[01;31mcheckpoint_ep108.pth.tar[0m  [01;31mcheckpoint_ep25.pth.tar[0m   [01;31mcheckpoint_ep410.pth.tar[0m  traincorrects102.pkl  traincorrects254.pkl  traincorrects405.pkl  trainloss106.pkl     trainloss258.pkl  trainloss409.pkl    valcorrects10.pkl   valcorrects261.pkl  valcorrects412.pkl  valloss113.pkl  valloss265.pkl  valloss416.pkl
[01;31mcheckpoint_ep109.pth.tar[0m  [01;31mcheckpoint_ep260.pth.tar[0m  [01;31mcheckpoint_ep411.pth.tar[0m  traincorrects103.pkl  traincorrects255.pkl  traincorrects406.pkl  trainloss107.pkl     trainloss259.pkl  trainloss40.pkl     valcorrects110.pkl  valcorrects262.pkl  valcorrects413.pkl  valloss114.pkl  valloss266.pkl  valloss417.pkl
[01;31mcheckpoint_ep10.pth.tar[0m   [01;31mcheckpoint_ep261.pth.tar[0m  [01;31mcheckpoint_ep412.pth.tar[0m  traincorrects104.pkl  traincorrects256.pkl  traincorrects407.pkl  trainloss108.pkl     trainloss25.pkl   trainloss410.pkl    valcorrects111.pkl  valcorrects263.pkl  valcorrects414.pkl  valloss115.pkl  valloss267.pkl  valloss418.pkl
[01;31mcheckpoint_ep110.pth.tar[0m  [01;31mcheckpoint_ep262.pth.tar[0m  [01;31mcheckpoint_ep413.pth.tar[0m  traincorrects105.pkl  traincorrects257.pkl  traincorrects408.pkl  trainloss109.pkl     trainloss260.pkl  trainloss411.pkl    valcorrects112.pkl  valcorrects264.pkl  valcorrects415.pkl  valloss116.pkl  valloss268.pkl  valloss419.pkl
[01;31mcheckpoint_ep111.pth.tar[0m  [01;31mcheckpoint_ep263.pth.tar[0m  [01;31mcheckpoint_ep414.pth.tar[0m  traincorrects106.pkl  traincorrects258.pkl  traincorrects409.pkl  trainloss10.pkl      trainloss261.pkl  trainloss412.pkl    valcorrects113.pkl  valcorrects265.pkl  valcorrects416.pkl  valloss117.pkl  valloss269.pkl  valloss41.pkl
[01;31mcheckpoint_ep112.pth.tar[0m  [01;31mcheckpoint_ep264.pth.tar[0m  [01;31mcheckpoint_ep415.pth.tar[0m  traincorrects107.pkl  traincorrects259.pkl  traincorrects40.pkl   trainloss110.pkl     trainloss262.pkl  trainloss413.pkl    valcorrects114.pkl  valcorrects266.pkl  valcorrects417.pkl  valloss118.pkl  valloss26.pkl   valloss420.pkl
[01;31mcheckpoint_ep113.pth.tar[0m  [01;31mcheckpoint_ep265.pth.tar[0m  [01;31mcheckpoint_ep416.pth.tar[0m  traincorrects108.pkl  traincorrects25.pkl   traincorrects410.pkl  trainloss111.pkl     trainloss263.pkl  trainloss414.pkl    valcorrects115.pkl  valcorrects267.pkl  valcorrects418.pkl  valloss119.pkl  valloss270.pkl  valloss421.pkl
[01;31mcheckpoint_ep114.pth.tar[0m  [01;31mcheckpoint_ep266.pth.tar[0m  [01;31mcheckpoint_ep417.pth.tar[0m  traincorrects109.pkl  traincorrects260.pkl  traincorrects411.pkl  trainloss112.pkl     trainloss264.pkl  trainloss415.pkl    valcorrects116.pkl  valcorrects268.pkl  valcorrects419.pkl  valloss11.pkl   valloss271.pkl  valloss422.pkl
[01;31mcheckpoint_ep115.pth.tar[0m  [01;31mcheckpoint_ep267.pth.tar[0m  [01;31mcheckpoint_ep418.pth.tar[0m  traincorrects10.pkl   traincorrects261.pkl  traincorrects412.pkl  trainloss113.pkl     trainloss265.pkl  trainloss416.pkl    valcorrects117.pkl  valcorrects269.pkl  valcorrects41.pkl   valloss120.pkl  valloss272.pkl  valloss423.pkl
[01;31mcheckpoint_ep116.pth.tar[0m  [01;31mcheckpoint_ep268.pth.tar[0m  [01;31mcheckpoint_ep419.pth.tar[0m  traincorrects110.pkl  traincorrects262.pkl  traincorrects413.pkl  trainloss114.pkl     trainloss266.pkl  trainloss417.pkl    valcorrects118.pkl  valcorrects26.pkl   valcorrects420.pkl  valloss121.pkl  valloss273.pkl  valloss424.pkl
[01;31mcheckpoint_ep117.pth.tar[0m  [01;31mcheckpoint_ep269.pth.tar[0m  [01;31mcheckpoint_ep41.pth.tar[0m   traincorrects111.pkl  traincorrects263.pkl  traincorrects414.pkl  trainloss115.pkl     trainloss267.pkl  trainloss418.pkl    valcorrects119.pkl  valcorrects270.pkl  valcorrects421.pkl  valloss122.pkl  valloss274.pkl  valloss425.pkl
[01;31mcheckpoint_ep118.pth.tar[0m  [01;31mcheckpoint_ep26.pth.tar[0m   [01;31mcheckpoint_ep420.pth.tar[0m  traincorrects112.pkl  traincorrects264.pkl  traincorrects415.pkl  trainloss116.pkl     trainloss268.pkl  trainloss419.pkl    valcorrects11.pkl   valcorrects271.pkl  valcorrects422.pkl  valloss123.pkl  valloss275.pkl  valloss426.pkl
[01;31mcheckpoint_ep119.pth.tar[0m  [01;31mcheckpoint_ep270.pth.tar[0m  [01;31mcheckpoint_ep421.pth.tar[0m  traincorrects113.pkl  traincorrects265.pkl  traincorrects416.pkl  trainloss117.pkl     trainloss269.pkl  trainloss41.pkl     valcorrects120.pkl  valcorrects272.pkl  valcorrects423.pkl  valloss124.pkl  valloss276.pkl  valloss427.pkl
[01;31mcheckpoint_ep11.pth.tar[0m   [01;31mcheckpoint_ep271.pth.tar[0m  [01;31mcheckpoint_ep422.pth.tar[0m  traincorrects114.pkl  traincorrects266.pkl  traincorrects417.pkl  trainloss118.pkl     trainloss26.pkl   trainloss420.pkl    valcorrects121.pkl  valcorrects273.pkl  valcorrects424.pkl  valloss125.pkl  valloss277.pkl  valloss428.pkl
[01;31mcheckpoint_ep120.pth.tar[0m  [01;31mcheckpoint_ep272.pth.tar[0m  [01;31mcheckpoint_ep423.pth.tar[0m  traincorrects115.pkl  traincorrects267.pkl  traincorrects418.pkl  trainloss119.pkl     trainloss270.pkl  trainloss421.pkl    valcorrects122.pkl  valcorrects274.pkl  valcorrects425.pkl  valloss126.pkl  valloss278.pkl  valloss429.pkl
[01;31mcheckpoint_ep121.pth.tar[0m  [01;31mcheckpoint_ep273.pth.tar[0m  [01;31mcheckpoint_ep424.pth.tar[0m  traincorrects116.pkl  traincorrects268.pkl  traincorrects419.pkl  trainloss11.pkl      trainloss271.pkl  trainloss422.pkl    valcorrects123.pkl  valcorrects275.pkl  valcorrects426.pkl  valloss127.pkl  valloss279.pkl  valloss42.pkl
[01;31mcheckpoint_ep122.pth.tar[0m  [01;31mcheckpoint_ep274.pth.tar[0m  [01;31mcheckpoint_ep425.pth.tar[0m  traincorrects117.pkl  traincorrects269.pkl  traincorrects41.pkl   trainloss120.pkl     trainloss272.pkl  trainloss423.pkl    valcorrects124.pkl  valcorrects276.pkl  valcorrects427.pkl  valloss128.pkl  valloss27.pkl   valloss430.pkl
[01;31mcheckpoint_ep123.pth.tar[0m  [01;31mcheckpoint_ep275.pth.tar[0m  [01;31mcheckpoint_ep426.pth.tar[0m  traincorrects118.pkl  traincorrects26.pkl   traincorrects420.pkl  trainloss121.pkl     trainloss273.pkl  trainloss424.pkl    valcorrects125.pkl  valcorrects277.pkl  valcorrects428.pkl  valloss129.pkl  valloss280.pkl  valloss431.pkl
[01;31mcheckpoint_ep124.pth.tar[0m  [01;31mcheckpoint_ep276.pth.tar[0m  [01;31mcheckpoint_ep427.pth.tar[0m  traincorrects119.pkl  traincorrects270.pkl  traincorrects421.pkl  trainloss122.pkl     trainloss274.pkl  trainloss425.pkl    valcorrects126.pkl  valcorrects278.pkl  valcorrects429.pkl  valloss12.pkl   valloss281.pkl  valloss432.pkl
[01;31mcheckpoint_ep125.pth.tar[0m  [01;31mcheckpoint_ep277.pth.tar[0m  [01;31mcheckpoint_ep428.pth.tar[0m  traincorrects11.pkl   traincorrects271.pkl  traincorrects422.pkl  trainloss123.pkl     trainloss275.pkl  trainloss426.pkl    valcorrects127.pkl  valcorrects279.pkl  valcorrects42.pkl   valloss130.pkl  valloss282.pkl  valloss433.pkl
[01;31mcheckpoint_ep126.pth.tar[0m  [01;31mcheckpoint_ep278.pth.tar[0m  [01;31mcheckpoint_ep429.pth.tar[0m  traincorrects120.pkl  traincorrects272.pkl  traincorrects423.pkl  trainloss124.pkl     trainloss276.pkl  trainloss427.pkl    valcorrects128.pkl  valcorrects27.pkl   valcorrects430.pkl  valloss131.pkl  valloss283.pkl  valloss434.pkl
[01;31mcheckpoint_ep127.pth.tar[0m  [01;31mcheckpoint_ep279.pth.tar[0m  [01;31mcheckpoint_ep42.pth.tar[0m   traincorrects121.pkl  traincorrects273.pkl  traincorrects424.pkl  trainloss125.pkl     trainloss277.pkl  trainloss428.pkl    valcorrects129.pkl  valcorrects280.pkl  valcorrects431.pkl  valloss132.pkl  valloss284.pkl  valloss435.pkl
[01;31mcheckpoint_ep128.pth.tar[0m  [01;31mcheckpoint_ep27.pth.tar[0m   [01;31mcheckpoint_ep430.pth.tar[0m  traincorrects122.pkl  traincorrects274.pkl  traincorrects425.pkl  trainloss126.pkl     trainloss278.pkl  trainloss429.pkl    valcorrects12.pkl   valcorrects281.pkl  valcorrects432.pkl  valloss133.pkl  valloss285.pkl  valloss436.pkl
[01;31mcheckpoint_ep129.pth.tar[0m  [01;31mcheckpoint_ep280.pth.tar[0m  [01;31mcheckpoint_ep431.pth.tar[0m  traincorrects123.pkl  traincorrects275.pkl  traincorrects426.pkl  trainloss127.pkl     trainloss279.pkl  trainloss42.pkl     valcorrects130.pkl  valcorrects282.pkl  valcorrects433.pkl  valloss134.pkl  valloss286.pkl  valloss437.pkl
[01;31mcheckpoint_ep12.pth.tar[0m   [01;31mcheckpoint_ep281.pth.tar[0m  [01;31mcheckpoint_ep432.pth.tar[0m  traincorrects124.pkl  traincorrects276.pkl  traincorrects427.pkl  trainloss128.pkl     trainloss27.pkl   trainloss430.pkl    valcorrects131.pkl  valcorrects283.pkl  valcorrects434.pkl  valloss135.pkl  valloss287.pkl  valloss438.pkl
[01;31mcheckpoint_ep130.pth.tar[0m  [01;31mcheckpoint_ep282.pth.tar[0m  [01;31mcheckpoint_ep433.pth.tar[0m  traincorrects125.pkl  traincorrects277.pkl  traincorrects428.pkl  trainloss129.pkl     trainloss280.pkl  trainloss431.pkl    valcorrects132.pkl  valcorrects284.pkl  valcorrects435.pkl  valloss136.pkl  valloss288.pkl  valloss439.pkl
[01;31mcheckpoint_ep131.pth.tar[0m  [01;31mcheckpoint_ep283.pth.tar[0m  [01;31mcheckpoint_ep434.pth.tar[0m  traincorrects126.pkl  traincorrects278.pkl  traincorrects429.pkl  trainloss12.pkl      trainloss281.pkl  trainloss432.pkl    valcorrects133.pkl  valcorrects285.pkl  valcorrects436.pkl  valloss137.pkl  valloss289.pkl  valloss43.pkl
[01;31mcheckpoint_ep132.pth.tar[0m  [01;31mcheckpoint_ep284.pth.tar[0m  [01;31mcheckpoint_ep435.pth.tar[0m  traincorrects127.pkl  traincorrects279.pkl  traincorrects42.pkl   trainloss130.pkl     trainloss282.pkl  trainloss433.pkl    valcorrects134.pkl  valcorrects286.pkl  valcorrects437.pkl  valloss138.pkl  valloss28.pkl   valloss440.pkl
[01;31mcheckpoint_ep133.pth.tar[0m  [01;31mcheckpoint_ep285.pth.tar[0m  [01;31mcheckpoint_ep436.pth.tar[0m  traincorrects128.pkl  traincorrects27.pkl   traincorrects430.pkl  trainloss131.pkl     trainloss283.pkl  trainloss434.pkl    valcorrects135.pkl  valcorrects287.pkl  valcorrects438.pkl  valloss139.pkl  valloss290.pkl  valloss441.pkl
[01;31mcheckpoint_ep134.pth.tar[0m  [01;31mcheckpoint_ep286.pth.tar[0m  [01;31mcheckpoint_ep437.pth.tar[0m  traincorrects129.pkl  traincorrects280.pkl  traincorrects431.pkl  trainloss132.pkl     trainloss284.pkl  trainloss435.pkl    valcorrects136.pkl  valcorrects288.pkl  valcorrects439.pkl  valloss13.pkl   valloss291.pkl  valloss442.pkl
[01;31mcheckpoint_ep135.pth.tar[0m  [01;31mcheckpoint_ep287.pth.tar[0m  [01;31mcheckpoint_ep438.pth.tar[0m  traincorrects12.pkl   traincorrects281.pkl  traincorrects432.pkl  trainloss133.pkl     trainloss285.pkl  trainloss436.pkl    valcorrects137.pkl  valcorrects289.pkl  valcorrects43.pkl   valloss140.pkl  valloss292.pkl  valloss443.pkl
[01;31mcheckpoint_ep136.pth.tar[0m  [01;31mcheckpoint_ep288.pth.tar[0m  [01;31mcheckpoint_ep439.pth.tar[0m  traincorrects130.pkl  traincorrects282.pkl  traincorrects433.pkl  trainloss134.pkl     trainloss286.pkl  trainloss437.pkl    valcorrects138.pkl  valcorrects28.pkl   valcorrects440.pkl  valloss141.pkl  valloss293.pkl  valloss444.pkl
[01;31mcheckpoint_ep137.pth.tar[0m  [01;31mcheckpoint_ep289.pth.tar[0m  [01;31mcheckpoint_ep43.pth.tar[0m   traincorrects131.pkl  traincorrects283.pkl  traincorrects434.pkl  trainloss135.pkl     trainloss287.pkl  trainloss438.pkl    valcorrects139.pkl  valcorrects290.pkl  valcorrects441.pkl  valloss142.pkl  valloss294.pkl  valloss445.pkl
[01;31mcheckpoint_ep138.pth.tar[0m  [01;31mcheckpoint_ep28.pth.tar[0m   [01;31mcheckpoint_ep440.pth.tar[0m  traincorrects132.pkl  traincorrects284.pkl  traincorrects435.pkl  trainloss136.pkl     trainloss288.pkl  trainloss439.pkl    valcorrects13.pkl   valcorrects291.pkl  valcorrects442.pkl  valloss143.pkl  valloss295.pkl  valloss446.pkl
[01;31mcheckpoint_ep139.pth.tar[0m  [01;31mcheckpoint_ep290.pth.tar[0m  [01;31mcheckpoint_ep441.pth.tar[0m  traincorrects133.pkl  traincorrects285.pkl  traincorrects436.pkl  trainloss137.pkl     trainloss289.pkl  trainloss43.pkl     valcorrects140.pkl  valcorrects292.pkl  valcorrects443.pkl  valloss144.pkl  valloss296.pkl  valloss447.pkl
[01;31mcheckpoint_ep13.pth.tar[0m   [01;31mcheckpoint_ep291.pth.tar[0m  [01;31mcheckpoint_ep442.pth.tar[0m  traincorrects134.pkl  traincorrects286.pkl  traincorrects437.pkl  trainloss138.pkl     trainloss28.pkl   trainloss440.pkl    valcorrects141.pkl  valcorrects293.pkl  valcorrects444.pkl  valloss145.pkl  valloss297.pkl  valloss448.pkl
[01;31mcheckpoint_ep140.pth.tar[0m  [01;31mcheckpoint_ep292.pth.tar[0m  [01;31mcheckpoint_ep443.pth.tar[0m  traincorrects135.pkl  traincorrects287.pkl  traincorrects438.pkl  trainloss139.pkl     trainloss290.pkl  trainloss441.pkl    valcorrects142.pkl  valcorrects294.pkl  valcorrects445.pkl  valloss146.pkl  valloss298.pkl  valloss449.pkl
[01;31mcheckpoint_ep141.pth.tar[0m  [01;31mcheckpoint_ep293.pth.tar[0m  [01;31mcheckpoint_ep444.pth.tar[0m  traincorrects136.pkl  traincorrects288.pkl  traincorrects439.pkl  trainloss13.pkl      trainloss291.pkl  trainloss442.pkl    valcorrects143.pkl  valcorrects295.pkl  valcorrects446.pkl  valloss147.pkl  valloss299.pkl  valloss44.pkl
[01;31mcheckpoint_ep142.pth.tar[0m  [01;31mcheckpoint_ep294.pth.tar[0m  [01;31mcheckpoint_ep445.pth.tar[0m  traincorrects137.pkl  traincorrects289.pkl  traincorrects43.pkl   trainloss140.pkl     trainloss292.pkl  trainloss443.pkl    valcorrects144.pkl  valcorrects296.pkl  valcorrects447.pkl  valloss148.pkl  valloss29.pkl   valloss450.pkl
[01;31mcheckpoint_ep143.pth.tar[0m  [01;31mcheckpoint_ep295.pth.tar[0m  [01;31mcheckpoint_ep446.pth.tar[0m  traincorrects138.pkl  traincorrects28.pkl   traincorrects440.pkl  trainloss141.pkl     trainloss293.pkl  trainloss444.pkl    valcorrects145.pkl  valcorrects297.pkl  valcorrects448.pkl  valloss149.pkl  valloss2.pkl    valloss451.pkl
[01;31mcheckpoint_ep144.pth.tar[0m  [01;31mcheckpoint_ep296.pth.tar[0m  [01;31mcheckpoint_ep447.pth.tar[0m  traincorrects139.pkl  traincorrects290.pkl  traincorrects441.pkl  trainloss142.pkl     trainloss294.pkl  trainloss445.pkl    valcorrects146.pkl  valcorrects298.pkl  valcorrects449.pkl  valloss14.pkl   valloss300.pkl  valloss452.pkl
[01;31mcheckpoint_ep145.pth.tar[0m  [01;31mcheckpoint_ep297.pth.tar[0m  [01;31mcheckpoint_ep448.pth.tar[0m  traincorrects13.pkl   traincorrects291.pkl  traincorrects442.pkl  trainloss143.pkl     trainloss295.pkl  trainloss446.pkl    valcorrects147.pkl  valcorrects299.pkl  valcorrects44.pkl   valloss150.pkl  valloss301.pkl  valloss453.pkl
[01;31mcheckpoint_ep146.pth.tar[0m  [01;31mcheckpoint_ep298.pth.tar[0m  [01;31mcheckpoint_ep449.pth.tar[0m  traincorrects140.pkl  traincorrects292.pkl  traincorrects443.pkl  trainloss144.pkl     trainloss296.pkl  trainloss447.pkl    valcorrects148.pkl  valcorrects29.pkl   valcorrects450.pkl  valloss151.pkl  valloss302.pkl  valloss454.pkl
[01;31mcheckpoint_ep147.pth.tar[0m  [01;31mcheckpoint_ep299.pth.tar[0m  [01;31mcheckpoint_ep44.pth.tar[0m   traincorrects141.pkl  traincorrects293.pkl  traincorrects444.pkl  trainloss145.pkl     trainloss297.pkl  trainloss448.pkl    valcorrects149.pkl  valcorrects2.pkl    valcorrects451.pkl  valloss152.pkl  valloss303.pkl  valloss455.pkl
[01;31mcheckpoint_ep148.pth.tar[0m  [01;31mcheckpoint_ep29.pth.tar[0m   [01;31mcheckpoint_ep450.pth.tar[0m  traincorrects142.pkl  traincorrects294.pkl  traincorrects445.pkl  trainloss146.pkl     trainloss298.pkl  trainloss449.pkl    valcorrects14.pkl   valcorrects300.pkl  valcorrects452.pkl  valloss153.pkl  valloss304.pkl  valloss456.pkl
[01;31mcheckpoint_ep149.pth.tar[0m  [01;31mcheckpoint_ep2.pth.tar[0m    [01;31mcheckpoint_ep451.pth.tar[0m  traincorrects143.pkl  traincorrects295.pkl  traincorrects446.pkl  trainloss147.pkl     trainloss299.pkl  trainloss44.pkl     valcorrects150.pkl  valcorrects301.pkl  valcorrects453.pkl  valloss154.pkl  valloss305.pkl  valloss457.pkl
[01;31mcheckpoint_ep14.pth.tar[0m   [01;31mcheckpoint_ep300.pth.tar[0m  [01;31mcheckpoint_ep452.pth.tar[0m  traincorrects144.pkl  traincorrects296.pkl  traincorrects447.pkl  trainloss148.pkl     trainloss29.pkl   trainloss450.pkl    valcorrects151.pkl  valcorrects302.pkl  valcorrects454.pkl  valloss155.pkl  valloss306.pkl  valloss458.pkl
[01;31mcheckpoint_ep150.pth.tar[0m  [01;31mcheckpoint_ep301.pth.tar[0m  [01;31mcheckpoint_ep453.pth.tar[0m  traincorrects145.pkl  traincorrects297.pkl  traincorrects448.pkl  trainloss149.pkl     trainloss2.pkl    trainloss451.pkl    valcorrects152.pkl  valcorrects303.pkl  valcorrects455.pkl  valloss156.pkl  valloss307.pkl  valloss459.pkl
[01;31mcheckpoint_ep151.pth.tar[0m  [01;31mcheckpoint_ep302.pth.tar[0m  [01;31mcheckpoint_ep454.pth.tar[0m  traincorrects146.pkl  traincorrects298.pkl  traincorrects449.pkl  trainloss14.pkl      trainloss300.pkl  trainloss452.pkl    valcorrects153.pkl  valcorrects304.pkl  valcorrects456.pkl  valloss157.pkl  valloss308.pkl  valloss45.pkl
[01;31mcheckpoint_ep152.pth.tar[0m  [01;31mcheckpoint_ep303.pth.tar[0m  [01;31mcheckpoint_ep455.pth.tar[0m  traincorrects147.pkl  traincorrects299.pkl  traincorrects44.pkl   trainloss150.pkl     trainloss301.pkl  trainloss453.pkl    valcorrects154.pkl  valcorrects305.pkl  valcorrects457.pkl  valloss158.pkl  valloss309.pkl  valloss460.pkl
[01;31mcheckpoint_ep153.pth.tar[0m  [01;31mcheckpoint_ep304.pth.tar[0m  [01;31mcheckpoint_ep456.pth.tar[0m  traincorrects148.pkl  traincorrects29.pkl   traincorrects450.pkl  trainloss151.pkl     trainloss302.pkl  trainloss454.pkl    valcorrects155.pkl  valcorrects306.pkl  valcorrects458.pkl  valloss159.pkl  valloss30.pkl   valloss461.pkl
[01;31mcheckpoint_ep154.pth.tar[0m  [01;31mcheckpoint_ep305.pth.tar[0m  [01;31mcheckpoint_ep457.pth.tar[0m  traincorrects149.pkl  traincorrects2.pkl    traincorrects451.pkl  trainloss152.pkl     trainloss303.pkl  trainloss455.pkl    valcorrects156.pkl  valcorrects307.pkl  valcorrects459.pkl  valloss15.pkl   valloss310.pkl  valloss462.pkl
[01;31mcheckpoint_ep155.pth.tar[0m  [01;31mcheckpoint_ep306.pth.tar[0m  [01;31mcheckpoint_ep458.pth.tar[0m  traincorrects14.pkl   traincorrects300.pkl  traincorrects452.pkl  trainloss153.pkl     trainloss304.pkl  trainloss456.pkl    valcorrects157.pkl  valcorrects308.pkl  valcorrects45.pkl   valloss160.pkl  valloss311.pkl  valloss463.pkl
[01;31mcheckpoint_ep156.pth.tar[0m  [01;31mcheckpoint_ep307.pth.tar[0m  [01;31mcheckpoint_ep459.pth.tar[0m  traincorrects150.pkl  traincorrects301.pkl  traincorrects453.pkl  trainloss154.pkl     trainloss305.pkl  trainloss457.pkl    valcorrects158.pkl  valcorrects309.pkl  valcorrects460.pkl  valloss161.pkl  valloss312.pkl  valloss464.pkl
[01;31mcheckpoint_ep157.pth.tar[0m  [01;31mcheckpoint_ep308.pth.tar[0m  [01;31mcheckpoint_ep45.pth.tar[0m   traincorrects151.pkl  traincorrects302.pkl  traincorrects454.pkl  trainloss155.pkl     trainloss306.pkl  trainloss458.pkl    valcorrects159.pkl  valcorrects30.pkl   valcorrects461.pkl  valloss162.pkl  valloss313.pkl  valloss465.pkl
[01;31mcheckpoint_ep158.pth.tar[0m  [01;31mcheckpoint_ep309.pth.tar[0m  [01;31mcheckpoint_ep460.pth.tar[0m  traincorrects152.pkl  traincorrects303.pkl  traincorrects455.pkl  trainloss156.pkl     trainloss307.pkl  trainloss459.pkl    valcorrects15.pkl   valcorrects310.pkl  valcorrects462.pkl  valloss163.pkl  valloss314.pkl  valloss466.pkl
[01;31mcheckpoint_ep159.pth.tar[0m  [01;31mcheckpoint_ep30.pth.tar[0m   [01;31mcheckpoint_ep461.pth.tar[0m  traincorrects153.pkl  traincorrects304.pkl  traincorrects456.pkl  trainloss157.pkl     trainloss308.pkl  trainloss45.pkl     valcorrects160.pkl  valcorrects311.pkl  valcorrects463.pkl  valloss164.pkl  valloss315.pkl  valloss467.pkl
[01;31mcheckpoint_ep15.pth.tar[0m   [01;31mcheckpoint_ep310.pth.tar[0m  [01;31mcheckpoint_ep462.pth.tar[0m  traincorrects154.pkl  traincorrects305.pkl  traincorrects457.pkl  trainloss158.pkl     trainloss309.pkl  trainloss460.pkl    valcorrects161.pkl  valcorrects312.pkl  valcorrects464.pkl  valloss165.pkl  valloss316.pkl  valloss468.pkl
[01;31mcheckpoint_ep160.pth.tar[0m  [01;31mcheckpoint_ep311.pth.tar[0m  [01;31mcheckpoint_ep463.pth.tar[0m  traincorrects155.pkl  traincorrects306.pkl  traincorrects458.pkl  trainloss159.pkl     trainloss30.pkl   trainloss461.pkl    valcorrects162.pkl  valcorrects313.pkl  valcorrects465.pkl  valloss166.pkl  valloss317.pkl  valloss469.pkl
[01;31mcheckpoint_ep161.pth.tar[0m  [01;31mcheckpoint_ep312.pth.tar[0m  [01;31mcheckpoint_ep464.pth.tar[0m  traincorrects156.pkl  traincorrects307.pkl  traincorrects459.pkl  trainloss15.pkl      trainloss310.pkl  trainloss462.pkl    valcorrects163.pkl  valcorrects314.pkl  valcorrects466.pkl  valloss167.pkl  valloss318.pkl  valloss46.pkl
[01;31mcheckpoint_ep162.pth.tar[0m  [01;31mcheckpoint_ep313.pth.tar[0m  [01;31mcheckpoint_ep465.pth.tar[0m  traincorrects157.pkl  traincorrects308.pkl  traincorrects45.pkl   trainloss160.pkl     trainloss311.pkl  trainloss463.pkl    valcorrects164.pkl  valcorrects315.pkl  valcorrects467.pkl  valloss168.pkl  valloss319.pkl  valloss470.pkl
[01;31mcheckpoint_ep163.pth.tar[0m  [01;31mcheckpoint_ep314.pth.tar[0m  [01;31mcheckpoint_ep466.pth.tar[0m  traincorrects158.pkl  traincorrects309.pkl  traincorrects460.pkl  trainloss161.pkl     trainloss312.pkl  trainloss464.pkl    valcorrects165.pkl  valcorrects316.pkl  valcorrects468.pkl  valloss169.pkl  valloss31.pkl   valloss471.pkl
[01;31mcheckpoint_ep164.pth.tar[0m  [01;31mcheckpoint_ep315.pth.tar[0m  [01;31mcheckpoint_ep467.pth.tar[0m  traincorrects159.pkl  traincorrects30.pkl   traincorrects461.pkl  trainloss162.pkl     trainloss313.pkl  trainloss465.pkl    valcorrects166.pkl  valcorrects317.pkl  valcorrects469.pkl  valloss16.pkl   valloss320.pkl  valloss472.pkl
[01;31mcheckpoint_ep165.pth.tar[0m  [01;31mcheckpoint_ep316.pth.tar[0m  [01;31mcheckpoint_ep468.pth.tar[0m  traincorrects15.pkl   traincorrects310.pkl  traincorrects462.pkl  trainloss163.pkl     trainloss314.pkl  trainloss466.pkl    valcorrects167.pkl  valcorrects318.pkl  valcorrects46.pkl   valloss170.pkl  valloss321.pkl  valloss473.pkl
[01;31mcheckpoint_ep166.pth.tar[0m  [01;31mcheckpoint_ep317.pth.tar[0m  [01;31mcheckpoint_ep469.pth.tar[0m  traincorrects160.pkl  traincorrects311.pkl  traincorrects463.pkl  trainloss164.pkl     trainloss315.pkl  trainloss467.pkl    valcorrects168.pkl  valcorrects319.pkl  valcorrects470.pkl  valloss171.pkl  valloss322.pkl  valloss474.pkl
[01;31mcheckpoint_ep167.pth.tar[0m  [01;31mcheckpoint_ep318.pth.tar[0m  [01;31mcheckpoint_ep46.pth.tar[0m   traincorrects161.pkl  traincorrects312.pkl  traincorrects464.pkl  trainloss165.pkl     trainloss316.pkl  trainloss468.pkl    valcorrects169.pkl  valcorrects31.pkl   valcorrects471.pkl  valloss172.pkl  valloss323.pkl  valloss475.pkl
[01;31mcheckpoint_ep168.pth.tar[0m  [01;31mcheckpoint_ep319.pth.tar[0m  [01;31mcheckpoint_ep470.pth.tar[0m  traincorrects162.pkl  traincorrects313.pkl  traincorrects465.pkl  trainloss166.pkl     trainloss317.pkl  trainloss469.pkl    valcorrects16.pkl   valcorrects320.pkl  valcorrects472.pkl  valloss173.pkl  valloss324.pkl  valloss476.pkl
[01;31mcheckpoint_ep169.pth.tar[0m  [01;31mcheckpoint_ep31.pth.tar[0m   [01;31mcheckpoint_ep471.pth.tar[0m  traincorrects163.pkl  traincorrects314.pkl  traincorrects466.pkl  trainloss167.pkl     trainloss318.pkl  trainloss46.pkl     valcorrects170.pkl  valcorrects321.pkl  valcorrects473.pkl  valloss174.pkl  valloss325.pkl  valloss477.pkl
[01;31mcheckpoint_ep16.pth.tar[0m   [01;31mcheckpoint_ep320.pth.tar[0m  [01;31mcheckpoint_ep472.pth.tar[0m  traincorrects164.pkl  traincorrects315.pkl  traincorrects467.pkl  trainloss168.pkl     trainloss319.pkl  trainloss470.pkl    valcorrects171.pkl  valcorrects322.pkl  valcorrects474.pkl  valloss175.pkl  valloss326.pkl  valloss478.pkl
[01;31mcheckpoint_ep170.pth.tar[0m  [01;31mcheckpoint_ep321.pth.tar[0m  [01;31mcheckpoint_ep473.pth.tar[0m  traincorrects165.pkl  traincorrects316.pkl  traincorrects468.pkl  trainloss169.pkl     trainloss31.pkl   trainloss471.pkl    valcorrects172.pkl  valcorrects323.pkl  valcorrects475.pkl  valloss176.pkl  valloss327.pkl  valloss479.pkl
[01;31mcheckpoint_ep171.pth.tar[0m  [01;31mcheckpoint_ep322.pth.tar[0m  [01;31mcheckpoint_ep474.pth.tar[0m  traincorrects166.pkl  traincorrects317.pkl  traincorrects469.pkl  trainloss16.pkl      trainloss320.pkl  trainloss472.pkl    valcorrects173.pkl  valcorrects324.pkl  valcorrects476.pkl  valloss177.pkl  valloss328.pkl  valloss47.pkl
[01;31mcheckpoint_ep172.pth.tar[0m  [01;31mcheckpoint_ep323.pth.tar[0m  [01;31mcheckpoint_ep475.pth.tar[0m  traincorrects167.pkl  traincorrects318.pkl  traincorrects46.pkl   trainloss170.pkl     trainloss321.pkl  trainloss473.pkl    valcorrects174.pkl  valcorrects325.pkl  valcorrects477.pkl  valloss178.pkl  valloss329.pkl  valloss480.pkl
[01;31mcheckpoint_ep173.pth.tar[0m  [01;31mcheckpoint_ep324.pth.tar[0m  [01;31mcheckpoint_ep476.pth.tar[0m  traincorrects168.pkl  traincorrects319.pkl  traincorrects470.pkl  trainloss171.pkl     trainloss322.pkl  trainloss474.pkl    valcorrects175.pkl  valcorrects326.pkl  valcorrects478.pkl  valloss179.pkl  valloss32.pkl   valloss481.pkl
[01;31mcheckpoint_ep174.pth.tar[0m  [01;31mcheckpoint_ep325.pth.tar[0m  [01;31mcheckpoint_ep477.pth.tar[0m  traincorrects169.pkl  traincorrects31.pkl   traincorrects471.pkl  trainloss172.pkl     trainloss323.pkl  trainloss475.pkl    valcorrects176.pkl  valcorrects327.pkl  valcorrects479.pkl  valloss17.pkl   valloss330.pkl  valloss482.pkl
[01;31mcheckpoint_ep175.pth.tar[0m  [01;31mcheckpoint_ep326.pth.tar[0m  [01;31mcheckpoint_ep478.pth.tar[0m  traincorrects16.pkl   traincorrects320.pkl  traincorrects472.pkl  trainloss173.pkl     trainloss324.pkl  trainloss476.pkl    valcorrects177.pkl  valcorrects328.pkl  valcorrects47.pkl   valloss180.pkl  valloss331.pkl  valloss483.pkl
[01;31mcheckpoint_ep176.pth.tar[0m  [01;31mcheckpoint_ep327.pth.tar[0m  [01;31mcheckpoint_ep479.pth.tar[0m  traincorrects170.pkl  traincorrects321.pkl  traincorrects473.pkl  trainloss174.pkl     trainloss325.pkl  trainloss477.pkl    valcorrects178.pkl  valcorrects329.pkl  valcorrects480.pkl  valloss181.pkl  valloss332.pkl  valloss484.pkl
[01;31mcheckpoint_ep177.pth.tar[0m  [01;31mcheckpoint_ep328.pth.tar[0m  [01;31mcheckpoint_ep47.pth.tar[0m   traincorrects171.pkl  traincorrects322.pkl  traincorrects474.pkl  trainloss175.pkl     trainloss326.pkl  trainloss478.pkl    valcorrects179.pkl  valcorrects32.pkl   valcorrects481.pkl  valloss182.pkl  valloss333.pkl  valloss485.pkl
[01;31mcheckpoint_ep178.pth.tar[0m  [01;31mcheckpoint_ep329.pth.tar[0m  [01;31mcheckpoint_ep480.pth.tar[0m  traincorrects172.pkl  traincorrects323.pkl  traincorrects475.pkl  trainloss176.pkl     trainloss327.pkl  trainloss479.pkl    valcorrects17.pkl   valcorrects330.pkl  valcorrects482.pkl  valloss183.pkl  valloss334.pkl  valloss486.pkl
[01;31mcheckpoint_ep179.pth.tar[0m  [01;31mcheckpoint_ep32.pth.tar[0m   [01;31mcheckpoint_ep481.pth.tar[0m  traincorrects173.pkl  traincorrects324.pkl  traincorrects476.pkl  trainloss177.pkl     trainloss328.pkl  trainloss47.pkl     valcorrects180.pkl  valcorrects331.pkl  valcorrects483.pkl  valloss184.pkl  valloss335.pkl  valloss487.pkl
[01;31mcheckpoint_ep17.pth.tar[0m   [01;31mcheckpoint_ep330.pth.tar[0m  [01;31mcheckpoint_ep482.pth.tar[0m  traincorrects174.pkl  traincorrects325.pkl  traincorrects477.pkl  trainloss178.pkl     trainloss329.pkl  trainloss480.pkl    valcorrects181.pkl  valcorrects332.pkl  valcorrects484.pkl  valloss185.pkl  valloss336.pkl  valloss488.pkl
[01;31mcheckpoint_ep180.pth.tar[0m  [01;31mcheckpoint_ep331.pth.tar[0m  [01;31mcheckpoint_ep483.pth.tar[0m  traincorrects175.pkl  traincorrects326.pkl  traincorrects478.pkl  trainloss179.pkl     trainloss32.pkl   trainloss481.pkl    valcorrects182.pkl  valcorrects333.pkl  valcorrects485.pkl  valloss186.pkl  valloss337.pkl  valloss489.pkl
[01;31mcheckpoint_ep181.pth.tar[0m  [01;31mcheckpoint_ep332.pth.tar[0m  [01;31mcheckpoint_ep484.pth.tar[0m  traincorrects176.pkl  traincorrects327.pkl  traincorrects479.pkl  trainloss17.pkl      trainloss330.pkl  trainloss482.pkl    valcorrects183.pkl  valcorrects334.pkl  valcorrects486.pkl  valloss187.pkl  valloss338.pkl  valloss48.pkl
[01;31mcheckpoint_ep182.pth.tar[0m  [01;31mcheckpoint_ep333.pth.tar[0m  [01;31mcheckpoint_ep485.pth.tar[0m  traincorrects177.pkl  traincorrects328.pkl  traincorrects47.pkl   trainloss180.pkl     trainloss331.pkl  trainloss483.pkl    valcorrects184.pkl  valcorrects335.pkl  valcorrects487.pkl  valloss188.pkl  valloss339.pkl  valloss490.pkl
[01;31mcheckpoint_ep183.pth.tar[0m  [01;31mcheckpoint_ep334.pth.tar[0m  [01;31mcheckpoint_ep486.pth.tar[0m  traincorrects178.pkl  traincorrects329.pkl  traincorrects480.pkl  trainloss181.pkl     trainloss332.pkl  trainloss484.pkl    valcorrects185.pkl  valcorrects336.pkl  valcorrects488.pkl  valloss189.pkl  valloss33.pkl   valloss491.pkl
[01;31mcheckpoint_ep184.pth.tar[0m  [01;31mcheckpoint_ep335.pth.tar[0m  [01;31mcheckpoint_ep487.pth.tar[0m  traincorrects179.pkl  traincorrects32.pkl   traincorrects481.pkl  trainloss182.pkl     trainloss333.pkl  trainloss485.pkl    valcorrects186.pkl  valcorrects337.pkl  valcorrects489.pkl  valloss18.pkl   valloss340.pkl  valloss492.pkl
[01;31mcheckpoint_ep185.pth.tar[0m  [01;31mcheckpoint_ep336.pth.tar[0m  [01;31mcheckpoint_ep488.pth.tar[0m  traincorrects17.pkl   traincorrects330.pkl  traincorrects482.pkl  trainloss183.pkl     trainloss334.pkl  trainloss486.pkl    valcorrects187.pkl  valcorrects338.pkl  valcorrects48.pkl   valloss190.pkl  valloss341.pkl  valloss493.pkl
[01;31mcheckpoint_ep186.pth.tar[0m  [01;31mcheckpoint_ep337.pth.tar[0m  [01;31mcheckpoint_ep489.pth.tar[0m  traincorrects180.pkl  traincorrects331.pkl  traincorrects483.pkl  trainloss184.pkl     trainloss335.pkl  trainloss487.pkl    valcorrects188.pkl  valcorrects339.pkl  valcorrects490.pkl  valloss191.pkl  valloss342.pkl  valloss494.pkl
[01;31mcheckpoint_ep187.pth.tar[0m  [01;31mcheckpoint_ep338.pth.tar[0m  [01;31mcheckpoint_ep48.pth.tar[0m   traincorrects181.pkl  traincorrects332.pkl  traincorrects484.pkl  trainloss185.pkl     trainloss336.pkl  trainloss488.pkl    valcorrects189.pkl  valcorrects33.pkl   valcorrects491.pkl  valloss192.pkl  valloss343.pkl  valloss495.pkl
[01;31mcheckpoint_ep188.pth.tar[0m  [01;31mcheckpoint_ep339.pth.tar[0m  [01;31mcheckpoint_ep490.pth.tar[0m  traincorrects182.pkl  traincorrects333.pkl  traincorrects485.pkl  trainloss186.pkl     trainloss337.pkl  trainloss489.pkl    valcorrects18.pkl   valcorrects340.pkl  valcorrects492.pkl  valloss193.pkl  valloss344.pkl  valloss496.pkl
[01;31mcheckpoint_ep189.pth.tar[0m  [01;31mcheckpoint_ep33.pth.tar[0m   [01;31mcheckpoint_ep491.pth.tar[0m  traincorrects183.pkl  traincorrects334.pkl  traincorrects486.pkl  trainloss187.pkl     trainloss338.pkl  trainloss48.pkl     valcorrects190.pkl  valcorrects341.pkl  valcorrects493.pkl  valloss194.pkl  valloss345.pkl  valloss497.pkl
[01;31mcheckpoint_ep18.pth.tar[0m   [01;31mcheckpoint_ep340.pth.tar[0m  [01;31mcheckpoint_ep492.pth.tar[0m  traincorrects184.pkl  traincorrects335.pkl  traincorrects487.pkl  trainloss188.pkl     trainloss339.pkl  trainloss490.pkl    valcorrects191.pkl  valcorrects342.pkl  valcorrects494.pkl  valloss195.pkl  valloss346.pkl  valloss498.pkl
[01;31mcheckpoint_ep190.pth.tar[0m  [01;31mcheckpoint_ep341.pth.tar[0m  [01;31mcheckpoint_ep493.pth.tar[0m  traincorrects185.pkl  traincorrects336.pkl  traincorrects488.pkl  trainloss189.pkl     trainloss33.pkl   trainloss491.pkl    valcorrects192.pkl  valcorrects343.pkl  valcorrects495.pkl  valloss196.pkl  valloss347.pkl  valloss499.pkl
[01;31mcheckpoint_ep191.pth.tar[0m  [01;31mcheckpoint_ep342.pth.tar[0m  [01;31mcheckpoint_ep494.pth.tar[0m  traincorrects186.pkl  traincorrects337.pkl  traincorrects489.pkl  trainloss18.pkl      trainloss340.pkl  trainloss492.pkl    valcorrects193.pkl  valcorrects344.pkl  valcorrects496.pkl  valloss197.pkl  valloss348.pkl  valloss49.pkl
[01;31mcheckpoint_ep192.pth.tar[0m  [01;31mcheckpoint_ep343.pth.tar[0m  [01;31mcheckpoint_ep495.pth.tar[0m  traincorrects187.pkl  traincorrects338.pkl  traincorrects48.pkl   trainloss190.pkl     trainloss341.pkl  trainloss493.pkl    valcorrects194.pkl  valcorrects345.pkl  valcorrects497.pkl  valloss198.pkl  valloss349.pkl  valloss4.pkl
[01;31mcheckpoint_ep193.pth.tar[0m  [01;31mcheckpoint_ep344.pth.tar[0m  [01;31mcheckpoint_ep496.pth.tar[0m  traincorrects188.pkl  traincorrects339.pkl  traincorrects490.pkl  trainloss191.pkl     trainloss342.pkl  trainloss494.pkl    valcorrects195.pkl  valcorrects346.pkl  valcorrects498.pkl  valloss199.pkl  valloss34.pkl   valloss50.pkl
[01;31mcheckpoint_ep194.pth.tar[0m  [01;31mcheckpoint_ep345.pth.tar[0m  [01;31mcheckpoint_ep497.pth.tar[0m  traincorrects189.pkl  traincorrects33.pkl   traincorrects491.pkl  trainloss192.pkl     trainloss343.pkl  trainloss495.pkl    valcorrects196.pkl  valcorrects347.pkl  valcorrects499.pkl  valloss19.pkl   valloss350.pkl  valloss51.pkl
[01;31mcheckpoint_ep195.pth.tar[0m  [01;31mcheckpoint_ep346.pth.tar[0m  [01;31mcheckpoint_ep498.pth.tar[0m  traincorrects18.pkl   traincorrects340.pkl  traincorrects492.pkl  trainloss193.pkl     trainloss344.pkl  trainloss496.pkl    valcorrects197.pkl  valcorrects348.pkl  valcorrects49.pkl   valloss1.pkl    valloss351.pkl  valloss52.pkl
[01;31mcheckpoint_ep196.pth.tar[0m  [01;31mcheckpoint_ep347.pth.tar[0m  [01;31mcheckpoint_ep499.pth.tar[0m  traincorrects190.pkl  traincorrects341.pkl  traincorrects493.pkl  trainloss194.pkl     trainloss345.pkl  trainloss497.pkl    valcorrects198.pkl  valcorrects349.pkl  valcorrects4.pkl    valloss200.pkl  valloss352.pkl  valloss53.pkl
[01;31mcheckpoint_ep197.pth.tar[0m  [01;31mcheckpoint_ep348.pth.tar[0m  [01;31mcheckpoint_ep49.pth.tar[0m   traincorrects191.pkl  traincorrects342.pkl  traincorrects494.pkl  trainloss195.pkl     trainloss346.pkl  trainloss498.pkl    valcorrects199.pkl  valcorrects34.pkl   valcorrects50.pkl   valloss201.pkl  valloss353.pkl  valloss54.pkl
[01;31mcheckpoint_ep198.pth.tar[0m  [01;31mcheckpoint_ep349.pth.tar[0m  [01;31mcheckpoint_ep4.pth.tar[0m    traincorrects192.pkl  traincorrects343.pkl  traincorrects495.pkl  trainloss196.pkl     trainloss347.pkl  trainloss499.pkl    valcorrects19.pkl   valcorrects350.pkl  valcorrects51.pkl   valloss202.pkl  valloss354.pkl  valloss55.pkl
[01;31mcheckpoint_ep199.pth.tar[0m  [01;31mcheckpoint_ep34.pth.tar[0m   [01;31mcheckpoint_ep50.pth.tar[0m   traincorrects193.pkl  traincorrects344.pkl  traincorrects496.pkl  trainloss197.pkl     trainloss348.pkl  trainloss49.pkl     valcorrects1.pkl    valcorrects351.pkl  valcorrects52.pkl   valloss203.pkl  valloss355.pkl  valloss56.pkl
[01;31mcheckpoint_ep19.pth.tar[0m   [01;31mcheckpoint_ep350.pth.tar[0m  [01;31mcheckpoint_ep51.pth.tar[0m   traincorrects194.pkl  traincorrects345.pkl  traincorrects497.pkl  trainloss198.pkl     trainloss349.pkl  trainloss4.pkl      valcorrects200.pkl  valcorrects352.pkl  valcorrects53.pkl   valloss204.pkl  valloss356.pkl  valloss57.pkl
[01;31mcheckpoint_ep1.pth.tar[0m    [01;31mcheckpoint_ep351.pth.tar[0m  [01;31mcheckpoint_ep52.pth.tar[0m   traincorrects195.pkl  traincorrects346.pkl  traincorrects498.pkl  trainloss199.pkl     trainloss34.pkl   trainloss50.pkl     valcorrects201.pkl  valcorrects353.pkl  valcorrects54.pkl   valloss205.pkl  valloss357.pkl  valloss58.pkl
[01;31mcheckpoint_ep200.pth.tar[0m  [01;31mcheckpoint_ep352.pth.tar[0m  [01;31mcheckpoint_ep53.pth.tar[0m   traincorrects196.pkl  traincorrects347.pkl  traincorrects499.pkl  trainloss19.pkl      trainloss350.pkl  trainloss51.pkl     valcorrects202.pkl  valcorrects354.pkl  valcorrects55.pkl   valloss206.pkl  valloss358.pkl  valloss59.pkl
[01;31mcheckpoint_ep201.pth.tar[0m  [01;31mcheckpoint_ep353.pth.tar[0m  [01;31mcheckpoint_ep54.pth.tar[0m   traincorrects197.pkl  traincorrects348.pkl  traincorrects49.pkl   trainloss1.pkl       trainloss351.pkl  trainloss52.pkl     valcorrects203.pkl  valcorrects355.pkl  valcorrects56.pkl   valloss207.pkl  valloss359.pkl  valloss5.pkl
[01;31mcheckpoint_ep202.pth.tar[0m  [01;31mcheckpoint_ep354.pth.tar[0m  [01;31mcheckpoint_ep55.pth.tar[0m   traincorrects198.pkl  traincorrects349.pkl  traincorrects4.pkl    trainloss200.pkl     trainloss352.pkl  trainloss53.pkl     valcorrects204.pkl  valcorrects356.pkl  valcorrects57.pkl   valloss208.pkl  valloss35.pkl   valloss60.pkl
[01;31mcheckpoint_ep203.pth.tar[0m  [01;31mcheckpoint_ep355.pth.tar[0m  [01;31mcheckpoint_ep56.pth.tar[0m   traincorrects199.pkl  traincorrects34.pkl   traincorrects50.pkl   trainloss201.pkl     trainloss353.pkl  trainloss54.pkl     valcorrects205.pkl  valcorrects357.pkl  valcorrects58.pkl   valloss209.pkl  valloss360.pkl  valloss61.pkl
[01;31mcheckpoint_ep204.pth.tar[0m  [01;31mcheckpoint_ep356.pth.tar[0m  [01;31mcheckpoint_ep57.pth.tar[0m   traincorrects19.pkl   traincorrects350.pkl  traincorrects51.pkl   trainloss202.pkl     trainloss354.pkl  trainloss55.pkl     valcorrects206.pkl  valcorrects358.pkl  valcorrects59.pkl   valloss20.pkl   valloss361.pkl  valloss62.pkl
[01;31mcheckpoint_ep205.pth.tar[0m  [01;31mcheckpoint_ep357.pth.tar[0m  [01;31mcheckpoint_ep58.pth.tar[0m   traincorrects1.pkl    traincorrects351.pkl  traincorrects52.pkl   trainloss203.pkl     trainloss355.pkl  trainloss56.pkl     valcorrects207.pkl  valcorrects359.pkl  valcorrects5.pkl    valloss210.pkl  valloss362.pkl  valloss63.pkl
[01;31mcheckpoint_ep206.pth.tar[0m  [01;31mcheckpoint_ep358.pth.tar[0m  [01;31mcheckpoint_ep59.pth.tar[0m   traincorrects200.pkl  traincorrects352.pkl  traincorrects53.pkl   trainloss204.pkl     trainloss356.pkl  trainloss57.pkl     valcorrects208.pkl  valcorrects35.pkl   valcorrects60.pkl   valloss211.pkl  valloss363.pkl  valloss64.pkl
[01;31mcheckpoint_ep207.pth.tar[0m  [01;31mcheckpoint_ep359.pth.tar[0m  [01;31mcheckpoint_ep5.pth.tar[0m    traincorrects201.pkl  traincorrects353.pkl  traincorrects54.pkl   trainloss205.pkl     trainloss357.pkl  trainloss58.pkl     valcorrects209.pkl  valcorrects360.pkl  valcorrects61.pkl   valloss212.pkl  valloss364.pkl  valloss65.pkl
[01;31mcheckpoint_ep208.pth.tar[0m  [01;31mcheckpoint_ep35.pth.tar[0m   [01;31mcheckpoint_ep60.pth.tar[0m   traincorrects202.pkl  traincorrects354.pkl  traincorrects55.pkl   trainloss206.pkl     trainloss358.pkl  trainloss59.pkl     valcorrects20.pkl   valcorrects361.pkl  valcorrects62.pkl   valloss213.pkl  valloss365.pkl  valloss66.pkl
[01;31mcheckpoint_ep209.pth.tar[0m  [01;31mcheckpoint_ep360.pth.tar[0m  [01;31mcheckpoint_ep61.pth.tar[0m   traincorrects203.pkl  traincorrects355.pkl  traincorrects56.pkl   trainloss207.pkl     trainloss359.pkl  trainloss5.pkl      valcorrects210.pkl  valcorrects362.pkl  valcorrects63.pkl   valloss214.pkl  valloss366.pkl  valloss67.pkl
[01;31mcheckpoint_ep20.pth.tar[0m   [01;31mcheckpoint_ep361.pth.tar[0m  [01;31mcheckpoint_ep62.pth.tar[0m   traincorrects204.pkl  traincorrects356.pkl  traincorrects57.pkl   trainloss208.pkl     trainloss35.pkl   trainloss60.pkl     valcorrects211.pkl  valcorrects363.pkl  valcorrects64.pkl   valloss215.pkl  valloss367.pkl  valloss68.pkl
[01;31mcheckpoint_ep210.pth.tar[0m  [01;31mcheckpoint_ep362.pth.tar[0m  [01;31mcheckpoint_ep63.pth.tar[0m   traincorrects205.pkl  traincorrects357.pkl  traincorrects58.pkl   trainloss209.pkl     trainloss360.pkl  trainloss61.pkl     valcorrects212.pkl  valcorrects364.pkl  valcorrects65.pkl   valloss216.pkl  valloss368.pkl  valloss69.pkl
[01;31mcheckpoint_ep211.pth.tar[0m  [01;31mcheckpoint_ep363.pth.tar[0m  [01;31mcheckpoint_ep64.pth.tar[0m   traincorrects206.pkl  traincorrects358.pkl  traincorrects59.pkl   trainloss20.pkl      trainloss361.pkl  trainloss62.pkl     valcorrects213.pkl  valcorrects365.pkl  valcorrects66.pkl   valloss217.pkl  valloss369.pkl  valloss6.pkl
[01;31mcheckpoint_ep212.pth.tar[0m  [01;31mcheckpoint_ep364.pth.tar[0m  [01;31mcheckpoint_ep65.pth.tar[0m   traincorrects207.pkl  traincorrects359.pkl  traincorrects5.pkl    trainloss210.pkl     trainloss362.pkl  trainloss63.pkl     valcorrects214.pkl  valcorrects366.pkl  valcorrects67.pkl   valloss218.pkl  valloss36.pkl   valloss70.pkl
[01;31mcheckpoint_ep213.pth.tar[0m  [01;31mcheckpoint_ep365.pth.tar[0m  [01;31mcheckpoint_ep66.pth.tar[0m   traincorrects208.pkl  traincorrects35.pkl   traincorrects60.pkl   trainloss211.pkl     trainloss363.pkl  trainloss64.pkl     valcorrects215.pkl  valcorrects367.pkl  valcorrects68.pkl   valloss219.pkl  valloss370.pkl  valloss71.pkl
[01;31mcheckpoint_ep214.pth.tar[0m  [01;31mcheckpoint_ep366.pth.tar[0m  [01;31mcheckpoint_ep67.pth.tar[0m   traincorrects209.pkl  traincorrects360.pkl  traincorrects61.pkl   trainloss212.pkl     trainloss364.pkl  trainloss65.pkl     valcorrects216.pkl  valcorrects368.pkl  valcorrects69.pkl   valloss21.pkl   valloss371.pkl  valloss72.pkl
[01;31mcheckpoint_ep215.pth.tar[0m  [01;31mcheckpoint_ep367.pth.tar[0m  [01;31mcheckpoint_ep68.pth.tar[0m   traincorrects20.pkl   traincorrects361.pkl  traincorrects62.pkl   trainloss213.pkl     trainloss365.pkl  trainloss66.pkl     valcorrects217.pkl  valcorrects369.pkl  valcorrects6.pkl    valloss220.pkl  valloss372.pkl  valloss73.pkl
[01;31mcheckpoint_ep216.pth.tar[0m  [01;31mcheckpoint_ep368.pth.tar[0m  [01;31mcheckpoint_ep69.pth.tar[0m   traincorrects210.pkl  traincorrects362.pkl  traincorrects63.pkl   trainloss214.pkl     trainloss366.pkl  trainloss67.pkl     valcorrects218.pkl  valcorrects36.pkl   valcorrects70.pkl   valloss221.pkl  valloss373.pkl  valloss74.pkl
[01;31mcheckpoint_ep217.pth.tar[0m  [01;31mcheckpoint_ep369.pth.tar[0m  [01;31mcheckpoint_ep6.pth.tar[0m    traincorrects211.pkl  traincorrects363.pkl  traincorrects64.pkl   trainloss215.pkl     trainloss367.pkl  trainloss68.pkl     valcorrects219.pkl  valcorrects370.pkl  valcorrects71.pkl   valloss222.pkl  valloss374.pkl  valloss75.pkl
[01;31mcheckpoint_ep218.pth.tar[0m  [01;31mcheckpoint_ep36.pth.tar[0m   [01;31mcheckpoint_ep70.pth.tar[0m   traincorrects212.pkl  traincorrects364.pkl  traincorrects65.pkl   trainloss216.pkl     trainloss368.pkl  trainloss69.pkl     valcorrects21.pkl   valcorrects371.pkl  valcorrects72.pkl   valloss223.pkl  valloss375.pkl  valloss76.pkl
[01;31mcheckpoint_ep219.pth.tar[0m  [01;31mcheckpoint_ep370.pth.tar[0m  [01;31mcheckpoint_ep71.pth.tar[0m   traincorrects213.pkl  traincorrects365.pkl  traincorrects66.pkl   trainloss217.pkl     trainloss369.pkl  trainloss6.pkl      valcorrects220.pkl  valcorrects372.pkl  valcorrects73.pkl   valloss224.pkl  valloss376.pkl  valloss77.pkl
[01;31mcheckpoint_ep21.pth.tar[0m   [01;31mcheckpoint_ep371.pth.tar[0m  [01;31mcheckpoint_ep72.pth.tar[0m   traincorrects214.pkl  traincorrects366.pkl  traincorrects67.pkl   trainloss218.pkl     trainloss36.pkl   trainloss70.pkl     valcorrects221.pkl  valcorrects373.pkl  valcorrects74.pkl   valloss225.pkl  valloss377.pkl  valloss78.pkl
[01;31mcheckpoint_ep220.pth.tar[0m  [01;31mcheckpoint_ep372.pth.tar[0m  [01;31mcheckpoint_ep73.pth.tar[0m   traincorrects215.pkl  traincorrects367.pkl  traincorrects68.pkl   trainloss219.pkl     trainloss370.pkl  trainloss71.pkl     valcorrects222.pkl  valcorrects374.pkl  valcorrects75.pkl   valloss226.pkl  valloss378.pkl  valloss79.pkl
[01;31mcheckpoint_ep221.pth.tar[0m  [01;31mcheckpoint_ep373.pth.tar[0m  [01;31mcheckpoint_ep74.pth.tar[0m   traincorrects216.pkl  traincorrects368.pkl  traincorrects69.pkl   trainloss21.pkl      trainloss371.pkl  trainloss72.pkl     valcorrects223.pkl  valcorrects375.pkl  valcorrects76.pkl   valloss227.pkl  valloss379.pkl  valloss7.pkl
[01;31mcheckpoint_ep222.pth.tar[0m  [01;31mcheckpoint_ep374.pth.tar[0m  [01;31mcheckpoint_ep75.pth.tar[0m   traincorrects217.pkl  traincorrects369.pkl  traincorrects6.pkl    trainloss220.pkl     trainloss372.pkl  trainloss73.pkl     valcorrects224.pkl  valcorrects376.pkl  valcorrects77.pkl   valloss228.pkl  valloss37.pkl   valloss80.pkl
[01;31mcheckpoint_ep223.pth.tar[0m  [01;31mcheckpoint_ep375.pth.tar[0m  [01;31mcheckpoint_ep76.pth.tar[0m   traincorrects218.pkl  traincorrects36.pkl   traincorrects70.pkl   trainloss221.pkl     trainloss373.pkl  trainloss74.pkl     valcorrects225.pkl  valcorrects377.pkl  valcorrects78.pkl   valloss229.pkl  valloss380.pkl  valloss81.pkl
[01;31mcheckpoint_ep224.pth.tar[0m  [01;31mcheckpoint_ep376.pth.tar[0m  [01;31mcheckpoint_ep77.pth.tar[0m   traincorrects219.pkl  traincorrects370.pkl  traincorrects71.pkl   trainloss222.pkl     trainloss374.pkl  trainloss75.pkl     valcorrects226.pkl  valcorrects378.pkl  valcorrects79.pkl   valloss22.pkl   valloss381.pkl  valloss82.pkl
[01;31mcheckpoint_ep225.pth.tar[0m  [01;31mcheckpoint_ep377.pth.tar[0m  [01;31mcheckpoint_ep78.pth.tar[0m   traincorrects21.pkl   traincorrects371.pkl  traincorrects72.pkl   trainloss223.pkl     trainloss375.pkl  trainloss76.pkl     valcorrects227.pkl  valcorrects379.pkl  valcorrects7.pkl    valloss230.pkl  valloss382.pkl  valloss83.pkl
[01;31mcheckpoint_ep226.pth.tar[0m  [01;31mcheckpoint_ep378.pth.tar[0m  [01;31mcheckpoint_ep79.pth.tar[0m   traincorrects220.pkl  traincorrects372.pkl  traincorrects73.pkl   trainloss224.pkl     trainloss376.pkl  trainloss77.pkl     valcorrects228.pkl  valcorrects37.pkl   valcorrects80.pkl   valloss231.pkl  valloss383.pkl  valloss84.pkl
[01;31mcheckpoint_ep227.pth.tar[0m  [01;31mcheckpoint_ep379.pth.tar[0m  [01;31mcheckpoint_ep7.pth.tar[0m    traincorrects221.pkl  traincorrects373.pkl  traincorrects74.pkl   trainloss225.pkl     trainloss377.pkl  trainloss78.pkl     valcorrects229.pkl  valcorrects380.pkl  valcorrects81.pkl   valloss232.pkl  valloss384.pkl  valloss85.pkl
[01;31mcheckpoint_ep228.pth.tar[0m  [01;31mcheckpoint_ep37.pth.tar[0m   [01;31mcheckpoint_ep80.pth.tar[0m   traincorrects222.pkl  traincorrects374.pkl  traincorrects75.pkl   trainloss226.pkl     trainloss378.pkl  trainloss79.pkl     valcorrects22.pkl   valcorrects381.pkl  valcorrects82.pkl   valloss233.pkl  valloss385.pkl  valloss86.pkl
[01;31mcheckpoint_ep229.pth.tar[0m  [01;31mcheckpoint_ep380.pth.tar[0m  [01;31mcheckpoint_ep81.pth.tar[0m   traincorrects223.pkl  traincorrects375.pkl  traincorrects76.pkl   trainloss227.pkl     trainloss379.pkl  trainloss7.pkl      valcorrects230.pkl  valcorrects382.pkl  valcorrects83.pkl   valloss234.pkl  valloss386.pkl  valloss87.pkl
[01;31mcheckpoint_ep22.pth.tar[0m   [01;31mcheckpoint_ep381.pth.tar[0m  [01;31mcheckpoint_ep82.pth.tar[0m   traincorrects224.pkl  traincorrects376.pkl  traincorrects77.pkl   trainloss228.pkl     trainloss37.pkl   trainloss80.pkl     valcorrects231.pkl  valcorrects383.pkl  valcorrects84.pkl   valloss235.pkl  valloss387.pkl  valloss88.pkl
[01;31mcheckpoint_ep230.pth.tar[0m  [01;31mcheckpoint_ep382.pth.tar[0m  [01;31mcheckpoint_ep83.pth.tar[0m   traincorrects225.pkl  traincorrects377.pkl  traincorrects78.pkl   trainloss229.pkl     trainloss380.pkl  trainloss81.pkl     valcorrects232.pkl  valcorrects384.pkl  valcorrects85.pkl   valloss236.pkl  valloss388.pkl  valloss89.pkl
[01;31mcheckpoint_ep231.pth.tar[0m  [01;31mcheckpoint_ep383.pth.tar[0m  [01;31mcheckpoint_ep84.pth.tar[0m   traincorrects226.pkl  traincorrects378.pkl  traincorrects79.pkl   trainloss22.pkl      trainloss381.pkl  trainloss82.pkl     valcorrects233.pkl  valcorrects385.pkl  valcorrects86.pkl   valloss237.pkl  valloss389.pkl  valloss8.pkl
[01;31mcheckpoint_ep232.pth.tar[0m  [01;31mcheckpoint_ep384.pth.tar[0m  [01;31mcheckpoint_ep85.pth.tar[0m   traincorrects227.pkl  traincorrects379.pkl  traincorrects7.pkl    trainloss230.pkl     trainloss382.pkl  trainloss83.pkl     valcorrects234.pkl  valcorrects386.pkl  valcorrects87.pkl   valloss238.pkl  valloss38.pkl   valloss90.pkl
[01;31mcheckpoint_ep233.pth.tar[0m  [01;31mcheckpoint_ep385.pth.tar[0m  [01;31mcheckpoint_ep86.pth.tar[0m   traincorrects228.pkl  traincorrects37.pkl   traincorrects80.pkl   trainloss231.pkl     trainloss383.pkl  trainloss84.pkl     valcorrects235.pkl  valcorrects387.pkl  valcorrects88.pkl   valloss239.pkl  valloss390.pkl  valloss91.pkl
[01;31mcheckpoint_ep234.pth.tar[0m  [01;31mcheckpoint_ep386.pth.tar[0m  [01;31mcheckpoint_ep87.pth.tar[0m   traincorrects229.pkl  traincorrects380.pkl  traincorrects81.pkl   trainloss232.pkl     trainloss384.pkl  trainloss85.pkl     valcorrects236.pkl  valcorrects388.pkl  valcorrects89.pkl   valloss23.pkl   valloss391.pkl  valloss92.pkl
[01;31mcheckpoint_ep235.pth.tar[0m  [01;31mcheckpoint_ep387.pth.tar[0m  [01;31mcheckpoint_ep88.pth.tar[0m   traincorrects22.pkl   traincorrects381.pkl  traincorrects82.pkl   trainloss233.pkl     trainloss385.pkl  trainloss86.pkl     valcorrects237.pkl  valcorrects389.pkl  valcorrects8.pkl    valloss240.pkl  valloss392.pkl  valloss93.pkl
[01;31mcheckpoint_ep236.pth.tar[0m  [01;31mcheckpoint_ep388.pth.tar[0m  [01;31mcheckpoint_ep89.pth.tar[0m   traincorrects230.pkl  traincorrects382.pkl  traincorrects83.pkl   trainloss234.pkl     trainloss386.pkl  trainloss87.pkl     valcorrects238.pkl  valcorrects38.pkl   valcorrects90.pkl   valloss241.pkl  valloss393.pkl  valloss94.pkl
[01;31mcheckpoint_ep237.pth.tar[0m  [01;31mcheckpoint_ep389.pth.tar[0m  [01;31mcheckpoint_ep8.pth.tar[0m    traincorrects231.pkl  traincorrects383.pkl  traincorrects84.pkl   trainloss235.pkl     trainloss387.pkl  trainloss88.pkl     valcorrects239.pkl  valcorrects390.pkl  valcorrects91.pkl   valloss242.pkl  valloss394.pkl  valloss95.pkl
[01;31mcheckpoint_ep238.pth.tar[0m  [01;31mcheckpoint_ep38.pth.tar[0m   [01;31mcheckpoint_ep90.pth.tar[0m   traincorrects232.pkl  traincorrects384.pkl  traincorrects85.pkl   trainloss236.pkl     trainloss388.pkl  trainloss89.pkl     valcorrects23.pkl   valcorrects391.pkl  valcorrects92.pkl   valloss243.pkl  valloss395.pkl  valloss96.pkl
[01;31mcheckpoint_ep239.pth.tar[0m  [01;31mcheckpoint_ep390.pth.tar[0m  [01;31mcheckpoint_ep91.pth.tar[0m   traincorrects233.pkl  traincorrects385.pkl  traincorrects86.pkl   trainloss237.pkl     trainloss389.pkl  trainloss8.pkl      valcorrects240.pkl  valcorrects392.pkl  valcorrects93.pkl   valloss244.pkl  valloss396.pkl  valloss97.pkl
[01;31mcheckpoint_ep23.pth.tar[0m   [01;31mcheckpoint_ep391.pth.tar[0m  [01;31mcheckpoint_ep92.pth.tar[0m   traincorrects234.pkl  traincorrects386.pkl  traincorrects87.pkl   trainloss238.pkl     trainloss38.pkl   trainloss90.pkl     valcorrects241.pkl  valcorrects393.pkl  valcorrects94.pkl   valloss245.pkl  valloss397.pkl  valloss98.pkl
[01;31mcheckpoint_ep240.pth.tar[0m  [01;31mcheckpoint_ep392.pth.tar[0m  [01;31mcheckpoint_ep93.pth.tar[0m   traincorrects235.pkl  traincorrects387.pkl  traincorrects88.pkl   trainloss239.pkl     trainloss390.pkl  trainloss91.pkl     valcorrects242.pkl  valcorrects394.pkl  valcorrects95.pkl   valloss246.pkl  valloss398.pkl  valloss99.pkl
[01;31mcheckpoint_ep241.pth.tar[0m  [01;31mcheckpoint_ep393.pth.tar[0m  [01;31mcheckpoint_ep94.pth.tar[0m   traincorrects236.pkl  traincorrects388.pkl  traincorrects89.pkl   trainloss23.pkl      trainloss391.pkl  trainloss92.pkl     valcorrects243.pkl  valcorrects395.pkl  valcorrects96.pkl   valloss247.pkl  valloss399.pkl  valloss9.pkl
[01;31mcheckpoint_ep242.pth.tar[0m  [01;31mcheckpoint_ep394.pth.tar[0m  [01;31mcheckpoint_ep95.pth.tar[0m   traincorrects237.pkl  traincorrects389.pkl  traincorrects8.pkl    trainloss240.pkl     trainloss392.pkl  trainloss93.pkl     valcorrects244.pkl  valcorrects396.pkl  valcorrects97.pkl   valloss248.pkl  valloss39.pkl
[01;31mcheckpoint_ep243.pth.tar[0m  [01;31mcheckpoint_ep395.pth.tar[0m  [01;31mcheckpoint_ep96.pth.tar[0m   traincorrects238.pkl  traincorrects38.pkl   traincorrects90.pkl   trainloss241.pkl     trainloss393.pkl  trainloss94.pkl     valcorrects245.pkl  valcorrects397.pkl  valcorrects98.pkl   valloss249.pkl  valloss3.pkl
[01;31mcheckpoint_ep244.pth.tar[0m  [01;31mcheckpoint_ep396.pth.tar[0m  [01;31mcheckpoint_ep97.pth.tar[0m   traincorrects239.pkl  traincorrects390.pkl  traincorrects91.pkl   trainloss242.pkl     trainloss394.pkl  trainloss95.pkl     valcorrects246.pkl  valcorrects398.pkl  valcorrects99.pkl   valloss24.pkl   valloss400.pkl
[01;31mcheckpoint_ep245.pth.tar[0m  [01;31mcheckpoint_ep397.pth.tar[0m  [01;31mcheckpoint_ep98.pth.tar[0m   traincorrects23.pkl   traincorrects391.pkl  traincorrects92.pkl   trainloss243.pkl     trainloss395.pkl  trainloss96.pkl     valcorrects247.pkl  valcorrects399.pkl  valcorrects9.pkl    valloss250.pkl  valloss401.pkl
[01;31mcheckpoint_ep246.pth.tar[0m  [01;31mcheckpoint_ep398.pth.tar[0m  [01;31mcheckpoint_ep99.pth.tar[0m   traincorrects240.pkl  traincorrects392.pkl  traincorrects93.pkl   trainloss244.pkl     trainloss396.pkl  trainloss97.pkl     valcorrects248.pkl  valcorrects39.pkl   valloss0.pkl        valloss251.pkl  valloss402.pkl
[01;31mcheckpoint_ep247.pth.tar[0m  [01;31mcheckpoint_ep399.pth.tar[0m  [01;31mcheckpoint_ep9.pth.tar[0m    traincorrects241.pkl  traincorrects393.pkl  traincorrects94.pkl   trainloss245.pkl     trainloss397.pkl  trainloss98.pkl     valcorrects249.pkl  valcorrects3.pkl    valloss100.pkl      valloss252.pkl  valloss403.pkl
[01;31mcheckpoint_ep248.pth.tar[0m  [01;31mcheckpoint_ep39.pth.tar[0m   [01;34mdata[0m                      traincorrects242.pkl  traincorrects394.pkl  traincorrects95.pkl   trainloss246.pkl     trainloss398.pkl  trainloss99.pkl     valcorrects24.pkl   valcorrects400.pkl  valloss101.pkl      valloss253.pkl  valloss404.pkl
[01;31mcheckpoint_ep249.pth.tar[0m  [01;31mcheckpoint_ep3.pth.tar[0m    [01;34mdata_all[0m                  traincorrects243.pkl  traincorrects395.pkl  traincorrects96.pkl   trainloss247.pkl     trainloss399.pkl  trainloss9.pkl      valcorrects250.pkl  valcorrects401.pkl  valloss102.pkl      valloss254.pkl  valloss405.pkl
[01;31mcheckpoint_ep24.pth.tar[0m   [01;31mcheckpoint_ep400.pth.tar[0m  data_loader_spec.py       traincorrects244.pkl  traincorrects396.pkl  traincorrects97.pkl   trainloss248.pkl     trainloss39.pkl   valcorrects0.pkl    valcorrects251.pkl  valcorrects402.pkl  valloss103.pkl      valloss255.pkl  valloss406.pkl
[01;31mcheckpoint_ep250.pth.tar[0m  [01;31mcheckpoint_ep401.pth.tar[0m  main.py                   traincorrects245.pkl  traincorrects397.pkl  traincorrects98.pkl   trainloss249.pkl     trainloss3.pkl    valcorrects100.pkl  valcorrects252.pkl  valcorrects403.pkl  valloss104.pkl      valloss256.pkl  valloss407.pkl
[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m vim j[Kspeech_job.sh 
[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;37r[?12;25h[?12l[?25h[27m[24m[0m[H[2J[?25l[37;1H"speech_job.sh" 2L, 59C[1;1H[34m#!/bin/sh[0m
[36mCUDA_VISIBLE_DEVICES[0m=[31m2[0m python main.py [35m--lr=0.01[0m
[94m~                                                                                                                                                                                                                                                                                                                           [4;1H~                                                                                                                                                                                                                                                                                                                           [5;1H~                                                                                                                                                                                                                                                                                                                           [6;1H~                                                                                                                                                                                                                                                                                                                           [7;1H~                                                                                                                                                                                                                                                                                                                           [8;1H~                                                                                                                                                                                                                                                                                                                           [9;1H~                                                                                                                                                                                                                                                                                                                           [10;1H~                                                                                                                                                                                                                                                                                                                           [11;1H~                                                                                                                                                                                                                                                                                                                           [12;1H~                                                                                                                                                                                                                                                                                                                           [13;1H~                                                                                                                                                                                                                                                                                                                           [14;1H~                                                                                                                                                                                                                                                                                                                           [15;1H~                                                                                                                                                                                                                                                                                                                           [16;1H~                                                                                                                                                                                                                                                                                                                           [17;1H~                                                                                                                                                                                                                                                                                                                           [18;1H~                                                                                                                                                                                                                                                                                                                           [19;1H~                                                                                                                                                                                                                                                                                                                           [20;1H~                                                                                                                                                                                                                                                                                                                           [21;1H~                                                                                                                                                                                                                                                                                                                           [22;1H~                                                                                                                                                                                                                                                                                                                           [23;1H~                                                                                                                                                                                                                                                                                                                           [24;1H~                                                                                                                                                                                                                                                                                                                           [25;1H~                                                                                                                                                                                                                                                                                                                           [26;1H~                                                                                                                                                                                                                                                                                                                           [27;1H~                                                                                                                                                                                                                                                                                                                           [28;1H~                                                                                                                                                                                                                                                                                                                           [29;1H~                                                                                                                                                                                                                                                                                                                           [30;1H~                                                                                                                                                                                                                                                                                                                           [31;1H~                                                                                                                                                                                                                                                                                                                           [32;1H~                                                                                                                                                                                                                                                                                                                           [33;1H~                                                                                                                                                                                                                                                                                                                           [34;1H~                                                                                                                                                                                                                                                                                                                           [35;1H~                                                                                                                                                                                                                                                                                                                           [36;1H~                                                                                                                                                                                                                                                                                                                           [0m[37;299H1,1[11CAll[1;1H[?12l[?25h[?25l[37;299H2[2;1H[?12l[?25h[?25l[37;301H2[2;2H[?12l[?25h[?25l[37;301H3[2;3H[?12l[?25h[?25l[37;301H4[2;4H[?12l[?25h[?25l[37;301H5[2;5H[?12l[?25h[?25l[37;301H6[2;6H[?12l[?25h[?25l[37;301H7[2;7H[?12l[?25h[?25l[37;301H8[2;8H[?12l[?25h[?25l[37;301H9[2;9H[?12l[?25h[?25l[37;301H10[2;10H[?12l[?25h[?25l[37;302H1[2;11H[?12l[?25h[?25l[37;302H2[2;12H[?12l[?25h[?25l[37;302H3[2;13H[?12l[?25h[?25l[37;302H4[2;14H[?12l[?25h[?25l[37;302H5[2;15H[?12l[?25h[?25l[37;302H6[2;16H[?12l[?25h[?25l[37;302H7[2;17H[?12l[?25h[?25l[37;302H8[2;18H[?12l[?25h[?25l[37;302H9[2;19H[?12l[?25h[?25l[37;301H20[2;20H[?12l[?25h[?25l[37;302H1[2;21H[?12l[?25h[?25l[37;302H2[2;22H[?12l[?25h[?25l[37;302H3[2;23H[?12l[?25h[?25l[37;302H4[2;24H[?12l[?25h[?25l[37;302H5[2;25H[?12l[?25h[?25l[37;302H6[2;26H[?12l[?25h[?25l[37;302H7[2;27H[?12l[?25h[?25l[37;302H8[2;28H[?12l[?25h[?25l[37;302H9[2;29H[?12l[?25h[?25l[37;301H30[2;30H[?12l[?25h[?25l[37;302H1[2;31H[?12l[?25h[?25l[37;302H2[2;32H[?12l[?25h[?25l[37;302H3[2;33H[?12l[?25h[?25l[37;302H4[2;34H[?12l[?25h[?25l[37;302H5[2;35H[?12l[?25h[?25l[37;302H6[2;36H[?12l[?25h[?25l[37;302H7[2;37H[?12l[?25h[?25l[37;302H8[2;38H[?12l[?25h[?25l[37;302H9[2;39H[?12l[?25h[?25l[37;301H40[2;40H[?12l[?25h[?25l[37;301H39[2;39H[?12l[?25h[?25l[37;299H1,1 [1;1H[?12l[?25h[?25l[37;299H2[2;1H[?12l[?25h[?25l[37;301H2[2;2H[?12l[?25h[?25l[37;301H3[2;3H[?12l[?25h[?25l[37;301H4[2;4H[?12l[?25h[?25l[37;301H5[2;5H[?12l[?25h[?25l[37;301H6[2;6H[?12l[?25h[?25l[37;301H7[2;7H[?12l[?25h[?25l[37;301H8[2;8H[?12l[?25h[?25l[37;301H9[2;9H[?12l[?25h[?25l[37;301H10[2;10H[?12l[?25h[?25l[37;302H1[2;11H[?12l[?25h[?25l[37;302H2[2;12H[?12l[?25h[?25l[37;302H3[2;13H[?12l[?25h[?25l[37;302H4[2;14H[?12l[?25h[?25l[37;302H5[2;15H[?12l[?25h[?25l[37;302H6[2;16H[?12l[?25h[?25l[37;302H7[2;17H[?12l[?25h[?25l[37;302H8[2;18H[?12l[?25h[?25l[37;302H9[2;19H[?12l[?25h[?25l[37;301H20[2;20H[?12l[?25h[?25l[37;302H1[2;21H[?12l[?25h[?25l[37;302H2[2;22H[?12l[?25h[?25l[37;302H3[2;23H[?12l[?25h[?25l[37;302H4[2;24H[?12l[?25h[?25l[37;302H5[2;25H[?12l[?25h[?25l[37;302H6[2;26H[?12l[?25h[?25l[37;302H7[2;27H[?12l[?25h[?25l[37;302H8[2;28H[?12l[?25h[?25l[37;302H9[2;29H[?12l[?25h[?25l[37;301H30[2;30H[?12l[?25h[?25l[37;302H1[2;31H[?12l[?25h[?25l[37;302H2[2;32H[?12l[?25h[?25l[37;302H3[2;33H[?12l[?25h[?25l[37;302H4[2;34H[?12l[?25h[?25l[37;302H5[2;35H[?12l[?25h[?25l[37;302H6[2;36H[?12l[?25h[?25l[37;302H7[2;37H[?12l[?25h[?25l[37;302H8[2;38H[?12l[?25h[?25l[37;302H9[2;39H[?12l[?25h[?25l[37;1H[1m-- INSERT --[0m[37;13H[K[37;299H2,39[10CAll[2;39H[?12l[?25h[?25l[2C[35m-lr=0.01[0m[37;301H40[2;40H[?12l[?25h[?25l[2C[35m-lr=0.01[0m[37;302H1[2;41H[?12l[?25h[?25l[35mc--lr=0.01[0m[37;302H2[2;42H[?12l[?25h[?25l[35mh--lr=0.01[0m[37;302H3[2;43H[?12l[?25h[?25l[35me--lr=0.01[0m[37;302H4[2;44H[?12l[?25h[?25l[35mc--lr=0.01[0m[37;302H5[2;45H[?12l[?25h[?25l[35mk--lr=0.01[0m[37;302H6[2;46H[?12l[?25h[?25l[35mp--lr=0.01[0m[37;302H7[2;47H[?12l[?25h[?25l[35mo--lr=0.01[0m[37;302H8[2;48H[?12l[?25h[?25l[35mi--lr=0.01[0m[37;302H9[2;49H[?12l[?25h[?25l[35mn--lr=0.01[0m[37;301H50[2;50H[?12l[?25h[?25l[35mt--lr=0.01[0m[37;302H1[2;51H[?12l[?25h[?25l [1C[35m-lr=0.01[0m[37;302H2[2;52H[?12l[?25h[?25l[38;5;130m=[0m--lr[38;5;130m=[0m[31m0.01[0m[37;302H3[2;53H[?12l[?25h[?25l[35m--lr=0.01[0m [37;302H2[2;52H[?12l[?25h[?25l[35m--lr=0.01[0m [37;302H1[2;51H[?12l[?25h[?25l[35m=--lr=0.01[0m[37;302H2[2;52H[?12l[?25h[?25l [1C[35m-lr=0.01[0m[37;302H3[2;53H[?12l[?25h[?25l[35m--lr=0.01[0m [37;302H2[2;52H[?12l[?25h[?25l[35mc--lr=0.01[0m[37;302H3[2;53H[?12l[?25h[?25l[35mh--lr=0.01[0m[37;302H4[2;54H[?12l[?25h[?25l[35me--lr=0.01[0m[37;302H5[2;55H[?12l[?25h[?25l[35mc--lr=0.01[0m[37;302H6[2;56H[?12l[?25h[?25l[35mk--lr=0.01[0m[37;302H7[2;57H[?12l[?25h[?25l[35mp--lr=0.01[0m[37;302H8[2;58H[?12l[?25h[?25l[35mo--lr=0.01[0m[37;302H9[2;59H[?12l[?25h[?25l[35mi--lr=0.01[0m[37;301H60[2;60H[?12l[?25h[?25l[35mn--lr=0.01[0m[37;302H1[2;61H[?12l[?25h[?25l[35mt--lr=0.01[0m[37;302H2[2;62H[?12l[?25h[?25l[35m_--lr=0.01[0m[37;302H3[2;63H[?12l[?25h[?25l[35me--lr=0.01[0m[37;302H4[2;64H[?12l[?25h[?25l[35mp--lr=0.01[0m[37;302H5[2;65H[?12l[?25h[?25l[35m4--lr=0.01[0m[37;302H6[2;66H[?12l[?25h[?25l[35m0--lr=0.01[0m[37;302H7[2;67H[?12l[?25h[?25l[35m0--lr=0.01[0m[37;302H8[2;68H[?12l[?25h[?25l[35m.--lr=0.01[0m[37;302H9[2;69H[?12l[?25h[?25l[35mp--lr=0.01[0m[37;301H70[2;70H[?12l[?25h[?25l[35mt--lr=0.01[0m[37;302H1[2;71H[?12l[?25h[?25l[35mh--lr=0.01[0m[37;302H2[2;72H[?12l[?25h[?25l[35m.--lr=0.01[0m[37;302H3[2;73H[?12l[?25h[?25l[35mt--lr=0.01[0m[37;302H4[2;74H[?12l[?25h[?25l[35ma--lr=0.01[0m[37;302H5[2;75H[?12l[?25h[?25l[35mr--lr=0.01[0m[37;302H6[2;76H[?12l[?25h[?25l [1C[35m-lr=0.01[0m[37;302H7[2;77H[?12l[?25h[37;1H[K[2;76H[?25l[37;299H2,76[10CAll[2;76H[?12l[?25h[?25l[37;299H[K[37;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"speech_job.sh" 2L, 97C written
[?1l>[?12l[?25h[?1049l[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m clear
[H[2J[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m vim  M[K[Kmain.py 
[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;37r[?12;25h[?12l[?25h[27m[24m[0m[H[2J[?25l[37;1H"main.py" 199L, 6458C[1;1H[35mimport[0m numpy [38;5;130mas[0m np
[35mimport[0m random
[35mimport[0m shutil
[35mimport[0m pickle
[35mimport[0m torch
[35mfrom[0m model [35mimport[0m network
[35mfrom[0m data_loader_spec [35mimport[0m wave_spec
[35mimport[0m argparse
[35mfrom[0m torchvision [35mimport[0m transforms
[35mimport[0m os
[35mimport[0m torch.nn [38;5;130mas[0m nn
[35mfrom[0m torch.autograd [35mimport[0m Variable
[35mimport[0m torch.optim [38;5;130mas[0m optim

[38;5;130mdef[0m [36msave_checkpoint[0m(state, is_best, filename,savetrainloss,savetraincorrects,savevalloss,savevalcorrects):
    torch.save(state, filename)[18;5Hsavetrainloss_name = [36mopen[0m([31m'trainloss'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savetraincorrects_name = [36mopen[0m([31m'traincorrects'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savevalloss_name = [36mopen[0m([31m'valloss'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savevalcorrects_name = [36mopen[0m([31m'valcorrects'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)[23;5Hpickle.dump(savetrainloss,savetrainloss_name)
    pickle.dump(savetraincorrects,savetraincorrects_name)
    pickle.dump(savevalloss,savevalloss_name)
    pickle.dump(savevalcorrects,savevalcorrects_name)[28;5H[38;5;130mif[0m is_best:[29;9Hshutil.copyfile(filename, [31m'model_best.pth.tar'[0m)[30;9H[36mprint[0m([31m"New Best Model Found"[0m)

[38;5;130mdef[0m [36mmodel_run[0m(phase,model,inputs,labels,criterion,optimizer):[34;5H[38;5;130mif[0m phase == [31m'train'[0m:[35;9Hmodel.train([36mTrue[0m)
    [38;5;130melse[0m:[37;299H1,1[11CTop[1;1H[?12l[?25h[?25l[37;299H2[2;1H[?12l[?25h[?25l[37;299H3[3;1H[?12l[?25h[?25l[37;299H4[4;1H[?12l[?25h[?25l[37;299H5[5;1H[?12l[?25h[?25l[37;299H6[6;1H[?12l[?25h[?25l[37;299H7[7;1H[?12l[?25h[?25l[37;299H8[8;1H[?12l[?25h[?25l[37;299H9[9;1H[?12l[?25h[?25l[37;299H10,1[10;1H[?12l[?25h[?25l[37;300H1[11;1H[?12l[?25h[?25l[37;300H2[12;1H[?12l[?25h[?25l[37;300H3[13;1H[?12l[?25h[?25l[37;300H4,0-1[14;1H[?12l[?25h[?25l[37;300H5,1  [15;1H[?12l[?25h[?25l[37;300H6[16;1H[?12l[?25h[?25l[37;300H7,0-1[17;1H[?12l[?25h[?25l[37;300H8,1  [18;1H[?12l[?25h[?25l[37;300H9[19;1H[?12l[?25h[?25l[37;299H20[20;1H[?12l[?25h[?25l[37;300H1[21;1H[?12l[?25h[?25l[37;300H2,0-1[22;1H[?12l[?25h[?25l[37;300H3,1  [23;1H[?12l[?25h[?25l[37;300H4[24;1H[?12l[?25h[?25l[37;300H5[25;1H[?12l[?25h[?25l[37;300H6[26;1H[?12l[?25h[?25l[37;300H7,0-1[27;1H[?12l[?25h[?25l[37;300H8,1  [28;1H[?12l[?25h[?25l[37;300H9[29;1H[?12l[?25h[?25l[37;299H30[30;1H[?12l[?25h[?25l[37;300H1,0-1[31;1H[?12l[?25h[?25l[37;300H2,1  [32;1H[?12l[?25h[?25l[37;300H3[33;1H[?12l[?25h[?25l[37;300H4[34;1H[?12l[?25h[?25l[37;300H5[35;1H[?12l[?25h[?25l[37;300H6[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hmodel.eval()[37;1H[K[37;299H37,1[11C0%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H38,0-1[9C1%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mif[0m phase == [31m'train'[0m:[37;299H[K[37;299H39,1[11C1%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H40,0-1[9C2%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H41,1[11C3%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;13Hinputs, labels = Variable(inputs.cuda(), requires_grad = [36mFalse[0m), Variable(labels.cuda(), requires_grad = [36mFalse[0m)[37;299H[K[37;299H42,1[11C3%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9H[38;5;130melse[0m:[37;299H[K[37;299H43,1[11C4%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;13Hinputs, labels = Variable(inputs, requires_grad = [36mFalse[0m), Variable(labels, requires_grad = [36mFalse[0m)[37;299H[K[37;299H44,1[11C4%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130melse[0m:[37;299H[K[37;299H45,1[11C5%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H46,0-1[9C6%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H47,1[11C6%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;13Hinputs, labels = Variable(inputs.cuda(), volatile = [36mTrue[0m), Variable(labels.cuda(), volatile= [36mTrue[0m)[37;299H[K[37;299H48,1[11C7%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9H[38;5;130melse[0m:[37;299H[K[37;299H49,1[11C7%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;13Hinputs, labels = Variable(inputs, volatile = [36mTrue[0m), Variable(labels, volatile= [36mTrue[0m)[37;299H[K[37;299H50,1[11C8%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H51,0-1[9C9%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hoptimizer.zero_grad()[37;299H[K[37;299H52,1[11C9%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Houtputs = model(inputs)[37;299H[K[37;299H53,1[10C10%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H54,1[10C11%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hlabels = labels.type(torch.cuda.FloatTensor)[37;299H[K[37;299H55,1[10C11%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130melse[0m:[37;299H[K[37;299H56,1[10C12%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hlabels = labels.type(torch.FloatTensor)[37;299H[K[37;299H57,1[10C12%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Houtputs = torch.squeeze(outputs)[37;299H[K[37;299H58,1[10C13%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hloss = criterion(outputs, labels)[37;299H[K[37;299H59,1[10C14%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H60,1[10C14%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hpred = outputs.data.clone()[37;299H[K[37;299H61,1[10C15%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hpred[pred>[31m0.5[0m] = [31m1[0m[37;299H[K[37;299H62,1[10C15%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hpred[pred<=[31m0.5[0m] = [31m0[0m[37;299H[K[37;299H63,1[10C16%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H64,0-1[8C17%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mif[0m phase==[31m'train'[0m:[37;299H[K[37;299H65,1[10C17%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hloss.backward()[37;299H[K[37;299H66,1[10C18%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hoptimizer.step()[37;299H[K[37;299H67,1[10C19%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H68,0-1[8C19%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hcorrects = torch.sum(pred==labels.data)[37;299H[K[37;299H69,1[10C20%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs[37;299H[K[37;299H70,1[10C20%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H71,0-1[8C21%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H72,0-1[8C22%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser = argparse.ArgumentParser(description=[31m'PyTorch Speech Recognition'[0m)[37;299H[K[37;299H73,1[10C22%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H74,0-1[8C23%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--lr'[0m,[31m'--learning_rate'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0.001[0m,[36mhelp[0m=[31m'initial learning rate'[0m)[37;299H[K[37;299H75,1[10C23%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--lr_de'[0m,[31m'--lr_decay'[0m,[36mtype[0m=[36mint[0m,default=[31m30[0m,[36mhelp[0m=[31m'learning rate decay epoch'[0m)[37;299H[K[37;299H76,1[10C24%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--checkpoint'[0m,[36mtype[0m=[36mstr[0m,default=[31m''[0m)[37;299H[K[37;299H77,1[10C25%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--wd'[0m,[31m'--weightdecay'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0[0m)[37;299H[K[37;299H78,1[10C25%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hargs = parser.parse_args()[37;299H[K[37;299H79,1[10C26%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H80,0-1[8C26%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hmanualseed = [31m200[0m[37;299H[K[37;299H81,1[10C27%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hrandom.seed(manualseed)[37;299H[K[37;299H82,1[10C28%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Htorch.manual_seed(manualseed)[37;299H[K[37;299H83,1[10C28%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hnp.random.seed(manualseed)[37;299H[K[37;299H84,1[10C29%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H85,0-1[8C30%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H86,1[10C30%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Htorch.cuda.manual_seed_all(manualseed)[37;299H[K[37;299H87,1[10C31%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H88,0-1[8C31%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H89,0-1[8C32%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[36mprint[0m([31m"learning_rate: {0}, decay:{1}, checkpoint:{2}"[0m.format(args.lr,args.lr_de,args.checkpoint))[37;299H[K[37;299H90,1[10C33%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H91,0-1[8C33%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hdata_transforms = {[37;299H[K[37;299H92,1[10C34%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[31m'train'[0m: transforms.Compose([[37;299H[K[37;299H93,1[10C34%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.Scale(([31m129[0m,[31m71[0m)),[37;299H[K[37;299H94,1[10C35%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.ToTensor(),[37;299H[K[37;299H95,1[10C36%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.Normalize([[31m0.5[0m],[[31m0.5[0m])[37;299H[K[37;299H96,1[10C36%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H]),[37;299H[K[37;299H97,1[10C37%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[31m'val'[0m: transforms.Compose([[37;299H[K[37;299H98,1[10C38%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.Scale(([31m129[0m,[31m71[0m)),[37;299H[K[37;299H99,1[10C38%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.ToTensor(),[37;299H[K[37;299H100,1[9C39%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.Normalize([[31m0.5[0m],[[31m0.5[0m])[37;299H[K[37;299H101,1[9C39%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H])[37;299H[K[37;299H102,1[9C40%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[25;19H[106m{[36;1H}[0m[37;299H[K[37;299H103,1[9C41%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[24;19H{[35;1H}[37;299H[K[37;299H104,0-1[7C41%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[36mprint[0m ([31m"....Initializing data sampler....."[0m)[37;299H[K[37;299H105,1[9C42%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hdata_dir = os.path.expanduser([31m'data'[0m)[37;299H[K[37;299H106,1[9C42%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hdsets = {x: wave_spec(os.path.join(data_dir, x), trans=data_transforms[x])[37;299H[K[37;299H107,1[9C43%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;10H[38;5;130mfor[0m x [38;5;130min[0m [[31m'train'[0m, [31m'val'[0m]}[37;299H[K[37;299H108,1[9C44%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H109,0-1[7C44%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hdset_loaders = {x: torch.utils.data.DataLoader(dsets[x], batch_size=[31m25[0m, num_workers=[31m10[0m,shuffle=[36mTrue[0m)[37;299H[K[37;299H110,1[9C45%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;17H[38;5;130mfor[0m x [38;5;130min[0m [[31m'train'[0m, [31m'val'[0m]}[37;299H[K[37;299H111,1[9C46%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H112,0-1[7C46%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[36mprint[0m ([31m"....Loading Model....."[0m)[37;299H[K[37;299H113,1[9C47%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hmodel_ft = network()[37;299H[K[37;299H114,1[9C47%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H115,0-1[7C48%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H116,1[9C49%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hmodel_ft = model_ft.cuda()[37;299H[K[37;299H117,1-4[7C49%[36;4H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H118,0-1[7C50%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[36mprint[0m ([31m"....Model loaded...."[0m)[37;299H[K[37;299H119,1[9C50%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H120,0-1[7C51%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hcriterion = nn.BCEWithLogitsLoss()[37;299H[K[37;299H121,1[9C52%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H122,0-1[7C52%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hoptimizer = optim.SGD(model_ft.parameters(), lr=args.lr, momentum=[31m0.9[0m, weight_decay=args.wd)[37;299H[K[37;299H123,1[9C53%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H124,0-1[7C53%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[38;5;130mif[0m args.checkpoint:[37;299H[K[37;299H125,1[9C54%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hstate = torch.load(args.checkpoint)[37;299H[K[37;299H126,1[9C55%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hshutil.copyfile(args.checkpoint,[31m'prev_'[0m + args.checkpoint)[37;299H[K[37;299H127,1[9C55%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hmodel_ft.load_state_dict(state[[31m'model'[0m])[37;299H[K[37;299H128,1[9C56%[36;1H[?12l[?25h[?25l[37;301H7[35;1H[?12l[?25h[?25l[37;301H6[34;1H[?12l[?25h[?25l[37;301H5[33;1H[?12l[?25h[?25l[37;301H4,0-1[32;1H[?12l[?25h[?25l[37;301H3,1  [31;1H[?12l[?25h[?25l[37;301H2,0-1[30;1H[?12l[?25h[?25l[37;301H1,1  [29;1H[?12l[?25h[?25l[37;301H0,0-1[28;1H[?12l[?25h[?25l[37;300H19,1  [27;1H[?12l[?25h[?25l[37;301H8,0-1[26;1H[?12l[?25h[?25l[37;301H7,1-4[25;4H[?12l[?25h[?25l[37;301H6,1  [24;1H[?12l[?25h[?25l[37;301H5,0-1[23;1H[?12l[?25h[?25l[37;301H4,1  [22;1H[?12l[?25h[?25l[37;301H3[21;1H[?12l[?25h[?25l[37;301H2,0-1[20;1H[?12l[?25h[?25l[37;301H1,1  [19;1H[?12l[?25h[?25l[37;301H0[18;1H[?12l[?25h[?25l[37;300H09,0-1[17;1H[?12l[?25h[?25l[37;301H8,1  [16;1H[?12l[?25h[?25l[37;301H7[15;1H[?12l[?25h[?25l[37;301H6[14;1H[?12l[?25h[?25l[37;301H5[13;1H[?12l[?25h[?25l[37;301H4,0-1[12;1H[?12l[?25h[?25l[37;301H3,1  [11;1H[?12l[?25h[?25l[37;301H2[10;1H[?12l[?25h[?25l[37;301H1[9;1H[?12l[?25h[?25l[37;301H0[8;1H[?12l[?25h[?25l[37;299H99,1 [7;1H[?12l[?25h[?25l[37;300H8[6;1H[?12l[?25h[?25l[37;300H7[5;1H[?12l[?25h[?25l[37;300H6[4;1H[?12l[?25h[?25l[37;300H5[3;1H[?12l[?25h[?25l[37;300H4[2;1H[?12l[?25h[?25l[37;300H3[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hdata_transforms = {[37;299H[K[37;299H92,1[10C55%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H91,0-1[8C55%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[36mprint[0m([31m"learning_rate: {0}, decay:{1}, checkpoint:{2}"[0m.format(args.lr,args.lr_de,args.checkpoint))[37;299H[K[37;299H90,1[10C54%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H89,0-1[8C53%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H88,0-1[8C53%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Htorch.cuda.manual_seed_all(manualseed)[37;299H[K[37;299H87,1[10C52%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H86,1[10C52%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H85,0-1[8C51%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hnp.random.seed(manualseed)[37;299H[K[37;299H84,1[10C50%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Htorch.manual_seed(manualseed)[37;299H[K[37;299H83,1[10C50%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hrandom.seed(manualseed)[37;299H[K[37;299H82,1[10C49%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hmanualseed = [31m200[0m[37;299H[K[37;299H81,1[10C49%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H80,0-1[8C48%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hargs = parser.parse_args()[37;299H[K[37;299H79,1[10C47%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hparser.add_argument([31m'--wd'[0m,[31m'--weightdecay'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0[0m)[37;299H[K[37;299H78,1[10C47%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hparser.add_argument([31m'--checkpoint'[0m,[36mtype[0m=[36mstr[0m,default=[31m''[0m)[37;299H[K[37;299H77,1[10C46%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hparser.add_argument([31m'--lr_de'[0m,[31m'--lr_decay'[0m,[36mtype[0m=[36mint[0m,default=[31m30[0m,[36mhelp[0m=[31m'learning rate decay epoch'[0m)[37;299H[K[37;299H76,1[10C46%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hparser.add_argument([31m'--lr'[0m,[31m'--learning_rate'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0.001[0m,[36mhelp[0m=[31m'initial learning rate'[0m)[37;299H[K[37;299H75,1[10C45%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H74,0-1[8C44%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hparser = argparse.ArgumentParser(description=[31m'PyTorch Speech Recognition'[0m)[37;299H[K[37;299H73,1[10C44%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H72,0-1[8C43%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H71,0-1[8C42%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs[37;299H[K[37;299H70,1[10C42%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hcorrects = torch.sum(pred==labels.data)[37;299H[K[37;299H69,1[10C41%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H68,0-1[8C41%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hoptimizer.step()[37;299H[K[37;299H67,1[10C40%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hloss.backward()[37;299H[K[37;299H66,1[10C39%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m phase==[31m'train'[0m:[37;299H[K[37;299H65,1[10C39%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H64,0-1[8C38%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpred[pred<=[31m0.5[0m] = [31m0[0m[37;299H[K[37;299H63,1[10C38%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpred[pred>[31m0.5[0m] = [31m1[0m[37;299H[K[37;299H62,1[10C37%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpred = outputs.data.clone()[37;299H[K[37;299H61,1[10C36%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H60,1[10C36%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hloss = criterion(outputs, labels)[37;299H[K[37;299H59,1[10C35%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Houtputs = torch.squeeze(outputs)[37;299H[K[37;299H58,1[10C34%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hlabels = labels.type(torch.FloatTensor)[37;299H[K[37;299H57,1[10C34%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130melse[0m:[37;299H[K[37;299H56,1[10C33%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hlabels = labels.type(torch.cuda.FloatTensor)[37;299H[K[37;299H55,1[10C33%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H54,1[10C32%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Houtputs = model(inputs)[37;299H[K[37;299H53,1[10C31%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hoptimizer.zero_grad()[37;299H[K[37;299H52,1[10C31%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H51,0-1[8C30%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;13Hinputs, labels = Variable(inputs, volatile = [36mTrue[0m), Variable(labels, volatile= [36mTrue[0m)[37;299H[K[37;299H50,1[10C30%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[38;5;130melse[0m:[37;299H[K[37;299H49,1[10C29%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;13Hinputs, labels = Variable(inputs.cuda(), volatile = [36mTrue[0m), Variable(labels.cuda(), volatile= [36mTrue[0m)[37;299H[K[37;299H48,1[10C28%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H47,1[10C28%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H46,0-1[8C27%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130melse[0m:[37;299H[K[37;299H45,1[10C26%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;13Hinputs, labels = Variable(inputs, requires_grad = [36mFalse[0m), Variable(labels, requires_grad = [36mFalse[0m)[37;299H[K[37;299H44,1[10C26%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[38;5;130melse[0m:[37;299H[K[37;299H43,1[10C25%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;13Hinputs, labels = Variable(inputs.cuda(), requires_grad = [36mFalse[0m), Variable(labels.cuda(), requires_grad = [36mFalse[0m)[37;299H[K[37;299H42,1[10C25%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H41,1[10C24%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H40,0-1[8C23%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m phase == [31m'train'[0m:[37;299H[K[37;299H39,1[10C23%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H38,0-1[8C22%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hmodel.eval()[37;299H[K[37;299H37,1[10C22%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130melse[0m:[37;299H[K[37;299H36,1[10C21%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hmodel.train([36mTrue[0m)[37;299H[K[37;299H35,1[10C20%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m phase == [31m'train'[0m:[37;299H[K[37;299H34,1[10C20%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H33,1[10C19%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[38;5;130mdef[0m [36mmodel_run[0m(phase,model,inputs,labels,criterion,optimizer):[37;299H[K[37;299H32,1[10C19%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H31,0-1[8C18%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[36mprint[0m([31m"New Best Model Found"[0m)[37;299H[K[37;299H30,1[10C17%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hshutil.copyfile(filename, [31m'model_best.pth.tar'[0m)[37;299H[K[37;299H29,1[10C17%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m is_best:[37;299H[K[37;299H28,1[10C16%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H27,0-1[8C15%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpickle.dump(savevalcorrects,savevalcorrects_name)[37;299H[K[37;299H26,1[10C15%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpickle.dump(savevalloss,savevalloss_name)[37;299H[K[37;299H25,1[10C14%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpickle.dump(savetraincorrects,savetraincorrects_name)[37;299H[K[37;299H24,1[10C14%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpickle.dump(savetrainloss,savetrainloss_name)[37;299H[K[37;299H23,1[10C13%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H22,0-1[8C12%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavevalcorrects_name = [36mopen[0m([31m'valcorrects'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)[37;299H[K[37;299H21,1[10C12%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavevalloss_name = [36mopen[0m([31m'valloss'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)[37;299H[K[37;299H20,1[10C11%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavetraincorrects_name = [36mopen[0m([31m'traincorrects'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)[37;299H[K[37;299H19,1[10C11%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavetrainloss_name = [36mopen[0m([31m'trainloss'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)[37;299H[K[37;299H18,1[10C10%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H17,0-1[9C9%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Htorch.save(state, filename)[37;299H[K[37;299H16,1[11C9%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[38;5;130mdef[0m [36msave_checkpoint[0m(state, is_best, filename,savetrainloss,savetraincorrects,savevalloss,savevalcorrects):[37;299H[K[37;299H15,1[11C8%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H14,0-1[9C7%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[35mimport[0m torch.optim [38;5;130mas[0m optim[37;299H[K[37;299H13,1[11C7%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[35mfrom[0m torch.autograd [35mimport[0m Variable[37;299H[K[37;299H12,1[11C6%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[35mimport[0m torch.nn [38;5;130mas[0m nn[37;299H[K[37;299H11,1[11C6%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[35mimport[0m os[37;299H[K[37;299H10,1[11C5%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[35mfrom[0m torchvision [35mimport[0m transforms[37;299H[K[37;299H9,1[12C4%[1;1H[?12l[?25h[?25l[37;299H10,1[2;1H[?12l[?25h[?25l[37;300H1[3;1H[?12l[?25h[?25l[37;300H2[4;1H[?12l[?25h[?25l[37;300H3[5;1H[?12l[?25h[?25l[37;300H4,0-1[6;1H[?12l[?25h[?25l[37;300H5,1  [7;1H[?12l[?25h[?25l[37;300H6[8;1H[?12l[?25h[?25l[37;300H7,0-1[9;1H[?12l[?25h[?25l[37;300H8,1  [10;1H[?12l[?25h[?25l[37;300H9[11;1H[?12l[?25h[?25l[37;299H20[12;1H[?12l[?25h[?25l[37;300H1[13;1H[?12l[?25h[?25l[37;300H2,0-1[14;1H[?12l[?25h[?25l[37;300H3,1  [15;1H[?12l[?25h[?25l[37;300H4[16;1H[?12l[?25h[?25l[37;300H5[17;1H[?12l[?25h[?25l[37;300H6[18;1H[?12l[?25h[?25l[37;300H7,0-1[19;1H[?12l[?25h[?25l[37;300H8,1  [20;1H[?12l[?25h[?25l[37;300H9[21;1H[?12l[?25h[?25l[37;299H30[22;1H[?12l[?25h[?25l[37;300H1,0-1[23;1H[?12l[?25h[?25l[37;300H2,1  [24;1H[?12l[?25h[?25l[37;300H3[25;1H[?12l[?25h[?25l[37;300H4[26;1H[?12l[?25h[?25l[37;300H5[27;1H[?12l[?25h[?25l[37;300H6[28;1H[?12l[?25h[?25l[37;300H7[29;1H[?12l[?25h[?25l[37;300H8,0-1[30;1H[?12l[?25h[?25l[37;300H9,1  [31;1H[?12l[?25h[?25l[37;299H40,0-1[32;1H[?12l[?25h[?25l[37;299H39,1  [31;1H[?12l[?25h[?25l[37;300H8,0-1[30;1H[?12l[?25h[?25l[37;300H7,1  [29;1H[?12l[?25h[?25l[37;300H6[28;1H[?12l[?25h[?25l[37;300H5[27;1H[?12l[?25h[?25l[37;300H4[26;1H[?12l[?25h[?25l[37;300H3[25;1H[?12l[?25h[?25l[37;302H2[25;2H[?12l[?25h[?25l[37;302H3[25;3H[?12l[?25h[?25l[37;302H4[25;4H[?12l[?25h[?25l[37;302H5[25;5H[?12l[?25h[?25l[37;1H[1m-- INSERT --[0m[37;299H[K[37;299H33,5[11C4%[25;5H[?12l[?25h[?25li[37;302H6[25;6H[?12l[?25h[?25lm[37;302H7[25;7H[?12l[?25h[?25lp[37;302H8[25;8H[?12l[?25h[?25lo[37;302H9[25;9H[?12l[?25h[?25lr[37;302H10[25;10H[?12l[?25h[?25l[35mimport[0m[37;303H1[25;11H[?12l[?25h[?25l[37;303H2[25;12H[?12l[?25h[?25lp[37;303H3[25;13H[?12l[?25h[?25lr[37;303H4[25;14H[?12l[?25h[?25l [37;303H3[25;13H[?12l[?25h[?25ld[37;303H4[25;14H[?12l[?25h[?25lv[37;303H5[25;15H[?12l[?25h[?25l [37;303H4[25;14H[?12l[?25h[?25lb[37;303H5[25;15H[?12l[?25h[?25l[26;36r[26;1H[L[1;37r[37;299H[K[37;299H34,1[11C4%[26;1H[?12l[?25h[?25l[37;302H2[26;2H[?12l[?25h[?25l[37;302H3[26;3H[?12l[?25h[?25l[37;302H4[26;4H[?12l[?25h[?25l[37;302H5[26;5H[?12l[?25h[?25lp[37;302H6[26;6H[?12l[?25h[?25ld[37;302H7[26;7H[?12l[?25h[?25lb[37;302H8[26;8H[?12l[?25h[?25l.[37;302H9[26;9H[?12l[?25h[?25ls[37;302H10[26;10H[?12l[?25h[?25le[37;303H1[26;11H[?12l[?25h[?25lt[37;303H2[26;12H[?12l[?25h[?25l_[37;303H3[26;13H[?12l[?25h[?25lt[37;303H4[26;14H[?12l[?25h[?25lr[37;303H5[26;15H[?12l[?25h[?25la[37;303H6[26;16H[?12l[?25h[?25lc[37;303H7[26;17H[?12l[?25h[?25le[37;303H8[26;18H[?12l[?25h[?25l([37;303H9[26;19H[?12l[?25h[?25l)[106m()[0m[37;302H20[26;20H[?12l[?25h[37;1H[K[26;19H[?25l[37;299H34,19[10C4%[26;19H[?12l[?25h[?25l[37;299H[K[37;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"main.py" 200L, 6488C written
[?1l>[?12l[?25h[?1049l[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m ./speech_job.sh 
learning_rate: 0.01, decay:30, checkpoint:checkpoint_ep400.pth.tar
....Initializing data sampler.....
....Loading Model.....
....Model loaded....
checkpoint Loaded star_epoch = 400,best_loss= 0.11630326617313058
> /home/devansh/Documents/Speech_Recognition/main.py(35)model_run()
-> if phase == 'train':
(Pdb) inputs

( 0 , 0 ,.,.) = 
 -1.0000 -1.0000 -1.0000  ...  -0.9922 -1.0000 -1.0000
 -0.9922 -0.9922 -0.9922  ...  -0.9922 -0.9922 -0.9922
 -0.9843 -0.9765 -0.9765  ...  -0.9922 -0.9686 -0.9529
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

( 1 , 0 ,.,.) = 
 -0.7098 -0.7098 -0.7176  ...  -0.8431 -0.5451 -0.3647
 -0.2157 -0.1216  0.0353  ...  -0.4588 -0.3020 -0.2078
 -0.8039 -0.7569 -0.6784  ...  -0.7804 -0.8745 -0.9294
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

( 2 , 0 ,.,.) = 
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
...     
      ⋮  

(22 , 0 ,.,.) = 
 -1.0000 -0.9922 -0.9765  ...  -0.9922 -1.0000 -1.0000
 -0.9922 -0.9843 -0.9765  ...  -1.0000 -0.9922 -0.9922
 -0.9922 -0.9922 -0.9922  ...  -0.9922 -0.9843 -0.9686
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

(23 , 0 ,.,.) = 
 -0.8118 -0.7725 -0.6941  ...  -0.7647 -0.3647 -0.1294
 -0.2941 -0.3569 -0.4667  ...  -0.3882 -0.1294  0.0196
 -0.4275 -0.3961 -0.3255  ...  -0.5765 -0.4353 -0.3490
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

(24 , 0 ,.,.) = 
 -0.9608 -0.9686 -0.9922  ...  -0.9922 -1.0000 -1.0000
 -0.9843 -0.9843 -0.9922  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
[torch.FloatTensor of size 25x1x71x129]

(Pdb) ste[K[K[Klabels

 0
 0
 0
 0
 0
 1
 1
 1
 1
 0
 0
 1
 0
 0
 1
 0
 1
 0
 1
 1
 1
 0
 1
 0
 1
[torch.LongTensor of size 25]

(Pdb) step
> /home/devansh/Documents/Speech_Recognition/main.py(36)model_run()
-> model.train(True)
(Pdb) step
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(487)train()
-> def train(self, mode=True):
(Pdb) step
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(492)train()
-> self.training = mode
(Pdb) step
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(264)__setattr__()
-> def __setattr__(self, name, value):
(Pdb) step
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(265)__setattr__()
-> def remove_from(*dicts):
(Pdb) step
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(270)__setattr__()
-> params = self.__dict__.get('_parameters')
(Pdb) step
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(271)__setattr__()
-> if isinstance(value, Parameter):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(277)__setattr__()
-> elif params is not None and name in params:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(284)__setattr__()
-> modules = self.__dict__.get('_modules')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(285)__setattr__()
-> if isinstance(value, Module):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(291)__setattr__()
-> elif modules is not None and name in modules:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(298)__setattr__()
-> buffers = self.__dict__.get('_buffers')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(299)__setattr__()
-> if buffers is not None and name in buffers:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()
-> object.__setattr__(self, name, value)
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()->None
-> object.__setattr__(self, name, value)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(416)children()
-> def children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()
-> for name, module in self.named_children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(421)named_children()
-> def named_children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(430)named_children()
-> memo = set()
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()
-> for name, module in self._modules.items():
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(432)named_children()
-> if module is not None and module not in memo:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(433)named_children()
-> memo.add(module)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()
-> yield name, module
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('conv1', Conv2d(1, 64,...stride=(1, 1)))
-> yield name, module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()
-> yield module
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->Conv2d(1, 64,...stride=(1, 1))
-> yield module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(494)train()
-> module.train(mode)
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(487)train()
-> def train(self, mode=True):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(492)train()
-> self.training = mode
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(264)__setattr__()
-> def __setattr__(self, name, value):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(265)__setattr__()
-> def remove_from(*dicts):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(270)__setattr__()
-> params = self.__dict__.get('_parameters')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(271)__setattr__()
-> if isinstance(value, Parameter):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(277)__setattr__()
-> elif params is not None and name in params:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(284)__setattr__()
-> modules = self.__dict__.get('_modules')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(285)__setattr__()
-> if isinstance(value, Module):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(291)__setattr__()
-> elif modules is not None and name in modules:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(298)__setattr__()
-> buffers = self.__dict__.get('_buffers')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(299)__setattr__()
-> if buffers is not None and name in buffers:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()
-> object.__setattr__(self, name, value)
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()->None
-> object.__setattr__(self, name, value)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(416)children()
-> def children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()
-> for name, module in self.named_children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(421)named_children()
-> def named_children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(430)named_children()
-> memo = set()
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()
-> for name, module in self._modules.items():
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()->None
-> for name, module in self._modules.items():
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()->None
-> for name, module in self.named_children():
(Pdb) 
Internal StopIteration
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(495)train()
-> return self
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(495)train()->Conv2d(1, 64,...stride=(1, 1))
-> return self
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->Conv2d(1, 64,...stride=(1, 1))
-> yield module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()->Conv2d(1, 64,...stride=(1, 1))
-> for name, module in self.named_children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('conv1', Conv2d(1, 64,...stride=(1, 1)))
-> yield name, module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()->('conv1', Conv2d(1, 64,...stride=(1, 1)))
-> for name, module in self._modules.items():
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(432)named_children()->('conv1', Conv2d(1, 64,...stride=(1, 1)))
-> if module is not None and module not in memo:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(433)named_children()->('conv1', Conv2d(1, 64,...stride=(1, 1)))
-> memo.add(module)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('conv1', Conv2d(1, 64,...stride=(1, 1)))
-> yield name, module
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('pool', MaxPool2d (si...lation=(1, 1)))
-> yield name, module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->Conv2d(1, 64,...stride=(1, 1))
-> yield module
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->MaxPool2d (si...lation=(1, 1))
-> yield module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(494)train()
-> module.train(mode)
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(487)train()
-> def train(self, mode=True):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(492)train()
-> self.training = mode
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(264)__setattr__()
-> def __setattr__(self, name, value):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(265)__setattr__()
-> def remove_from(*dicts):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(270)__setattr__()
-> params = self.__dict__.get('_parameters')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(271)__setattr__()
-> if isinstance(value, Parameter):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(277)__setattr__()
-> elif params is not None and name in params:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(284)__setattr__()
-> modules = self.__dict__.get('_modules')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(285)__setattr__()
-> if isinstance(value, Module):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(291)__setattr__()
-> elif modules is not None and name in modules:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(298)__setattr__()
-> buffers = self.__dict__.get('_buffers')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(299)__setattr__()
-> if buffers is not None and name in buffers:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()
-> object.__setattr__(self, name, value)
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()->None
-> object.__setattr__(self, name, value)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(416)children()
-> def children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()
-> for name, module in self.named_children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(421)named_children()
-> def named_children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(430)named_children()
-> memo = set()
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()
-> for name, module in self._modules.items():
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()->None
-> for name, module in self._modules.items():
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()->None
-> for name, module in self.named_children():
(Pdb) 
Internal StopIteration
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(495)train()
-> return self
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(495)train()->MaxPool2d (si...lation=(1, 1))
-> return self
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->MaxPool2d (si...lation=(1, 1))
-> yield module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()->MaxPool2d (si...lation=(1, 1))
-> for name, module in self.named_children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('pool', MaxPool2d (si...lation=(1, 1)))
-> yield name, module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()->('pool', MaxPool2d (si...lation=(1, 1)))
-> for name, module in self._modules.items():
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(432)named_children()->('pool', MaxPool2d (si...lation=(1, 1)))
-> if module is not None and module not in memo:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(433)named_children()->('pool', MaxPool2d (si...lation=(1, 1)))
-> memo.add(module)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('pool', MaxPool2d (si...lation=(1, 1)))
-> yield name, module
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('conv2', Conv2d(64, 64...stride=(1, 1)))
-> yield name, module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->MaxPool2d (si...lation=(1, 1))
-> yield module
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->Conv2d(64, 64...stride=(1, 1))
-> yield module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(494)train()
-> module.train(mode)
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(487)train()
-> def train(self, mode=True):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(492)train()
-> self.training = mode
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(264)__setattr__()
-> def __setattr__(self, name, value):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(265)__setattr__()
-> def remove_from(*dicts):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(270)__setattr__()
-> params = self.__dict__.get('_parameters')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(271)__setattr__()
-> if isinstance(value, Parameter):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(277)__setattr__()
-> elif params is not None and name in params:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(284)__setattr__()
-> modules = self.__dict__.get('_modules')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(285)__setattr__()
-> if isinstance(value, Module):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(291)__setattr__()
-> elif modules is not None and name in modules:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(298)__setattr__()
-> buffers = self.__dict__.get('_buffers')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(299)__setattr__()
-> if buffers is not None and name in buffers:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()
-> object.__setattr__(self, name, value)
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()->None
-> object.__setattr__(self, name, value)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(416)children()
-> def children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()
-> for name, module in self.named_children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(421)named_children()
-> def named_children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(430)named_children()
-> memo = set()
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()
-> for name, module in self._modules.items():
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()->None
-> for name, module in self._modules.items():
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()->None
-> for name, module in self.named_children():
(Pdb) 
Internal StopIteration
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(495)train()
-> return self
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(495)train()->Conv2d(64, 64...stride=(1, 1))
-> return self
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->Conv2d(64, 64...stride=(1, 1))
-> yield module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()->Conv2d(64, 64...stride=(1, 1))
-> for name, module in self.named_children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('conv2', Conv2d(64, 64...stride=(1, 1)))
-> yield name, module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()->('conv2', Conv2d(64, 64...stride=(1, 1)))
-> for name, module in self._modules.items():
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(432)named_children()->('conv2', Conv2d(64, 64...stride=(1, 1)))
-> if module is not None and module not in memo:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(433)named_children()->('conv2', Conv2d(64, 64...stride=(1, 1)))
-> memo.add(module)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('conv2', Conv2d(64, 64...stride=(1, 1)))
-> yield name, module
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('lin1', Linear (64 -> 32))
-> yield name, module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->Conv2d(64, 64...stride=(1, 1))
-> yield module
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->Linear (64 -> 32)
-> yield module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(494)train()
-> module.train(mode)
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(487)train()
-> def train(self, mode=True):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(492)train()
-> self.training = mode
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(264)__setattr__()
-> def __setattr__(self, name, value):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(265)__setattr__()
-> def remove_from(*dicts):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(270)__setattr__()
-> params = self.__dict__.get('_parameters')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(271)__setattr__()
-> if isinstance(value, Parameter):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(277)__setattr__()
-> elif params is not None and name in params:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(284)__setattr__()
-> modules = self.__dict__.get('_modules')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(285)__setattr__()
-> if isinstance(value, Module):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(291)__setattr__()
-> elif modules is not None and name in modules:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(298)__setattr__()
-> buffers = self.__dict__.get('_buffers')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(299)__setattr__()
-> if buffers is not None and name in buffers:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()
-> object.__setattr__(self, name, value)
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()->None
-> object.__setattr__(self, name, value)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(416)children()
-> def children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()
-> for name, module in self.named_children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(421)named_children()
-> def named_children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(430)named_children()
-> memo = set()
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()
-> for name, module in self._modules.items():
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()->None
-> for name, module in self._modules.items():
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()->None
-> for name, module in self.named_children():
(Pdb) 
Internal StopIteration
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(495)train()
-> return self
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(495)train()->Linear (64 -> 32)
-> return self
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->Linear (64 -> 32)
-> yield module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()->Linear (64 -> 32)
-> for name, module in self.named_children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('lin1', Linear (64 -> 32))
-> yield name, module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()->('lin1', Linear (64 -> 32))
-> for name, module in self._modules.items():
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(432)named_children()->('lin1', Linear (64 -> 32))
-> if module is not None and module not in memo:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(433)named_children()->('lin1', Linear (64 -> 32))
-> memo.add(module)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('lin1', Linear (64 -> 32))
-> yield name, module
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('rel', ReLU ())
-> yield name, module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->Linear (64 -> 32)
-> yield module
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->ReLU ()
-> yield module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(494)train()
-> module.train(mode)
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(487)train()
-> def train(self, mode=True):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(492)train()
-> self.training = mode
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(264)__setattr__()
-> def __setattr__(self, name, value):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(265)__setattr__()
-> def remove_from(*dicts):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(270)__setattr__()
-> params = self.__dict__.get('_parameters')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(271)__setattr__()
-> if isinstance(value, Parameter):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(277)__setattr__()
-> elif params is not None and name in params:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(284)__setattr__()
-> modules = self.__dict__.get('_modules')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(285)__setattr__()
-> if isinstance(value, Module):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(291)__setattr__()
-> elif modules is not None and name in modules:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(298)__setattr__()
-> buffers = self.__dict__.get('_buffers')
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(299)__setattr__()
-> if buffers is not None and name in buffers:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()
-> object.__setattr__(self, name, value)
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(306)__setattr__()->None
-> object.__setattr__(self, name, value)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(416)children()
-> def children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()
-> for name, module in self.named_children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(421)named_children()
-> def named_children(self):
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(430)named_children()
-> memo = set()
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()
-> for name, module in self._modules.items():
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()->None
-> for name, module in self._modules.items():
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()->None
-> for name, module in self.named_children():
(Pdb) 
Internal StopIteration
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(495)train()
-> return self
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(495)train()->ReLU ()
-> return self
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(493)train()
-> for module in self.children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->ReLU ()
-> yield module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(418)children()->ReLU ()
-> for name, module in self.named_children():
(Pdb) 
--Call--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('rel', ReLU ())
-> yield name, module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(431)named_children()->('rel', ReLU ())
-> for name, module in self._modules.items():
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(432)named_children()->('rel', ReLU ())
-> if module is not None and module not in memo:
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(433)named_children()->('rel', ReLU ())
-> memo.add(module)
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('rel', ReLU ())
-> yield name, module
(Pdb) 
--Return--
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(434)named_children()->('dnn', Sequential (
... (2664 -> 1)
))
-> yield name, module
(Pdb) 
> /home/devansh/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py(419)children()->ReLU ()
-> yield module
(Pdb) continute
*** NameError: name 'continute' is not defined
(Pdb) continute[1Pe
> /home/devansh/Documents/Speech_Recognition/main.py(35)model_run()
-> if phase == 'train':
(Pdb) contie[Kte[K[Kue
*** NameError: name 'contiue' is not defined
(Pdb) continue
> /home/devansh/Documents/Speech_Recognition/main.py(35)model_run()
-> if phase == 'train':
(Pdb) continue
> /home/devansh/Documents/Speech_Recognition/main.py(35)model_run()
-> if phase == 'train':
(Pdb) un[K[Kinputs

( 0 , 0 ,.,.) = 
 -0.9137 -0.9294 -0.9529  ...  -0.9843 -0.9216 -0.8824
 -0.5137 -0.6314 -0.8275  ...  -0.8902 -0.6000 -0.4275
 -0.5373 -0.6471 -0.8353  ...  -0.5373 -0.5843 -0.6078
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

( 1 , 0 ,.,.) = 
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -0.9922 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

( 2 , 0 ,.,.) = 
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
...     
      ⋮  

(22 , 0 ,.,.) = 
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

(23 , 0 ,.,.) = 
 -1.0000 -1.0000 -1.0000  ...  -0.2863 -0.4902 -0.6078
 -1.0000 -1.0000 -1.0000  ...  -0.1922 -0.1451 -0.1137
 -1.0000 -1.0000 -1.0000  ...  -0.0196  0.1216  0.2078
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

(24 , 0 ,.,.) = 
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -0.9922 -1.0000 -1.0000
 -0.9922 -0.9922 -0.9843  ...  -1.0000 -1.0000 -1.0000
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
[torch.FloatTensor of size 25x1x71x129]

(Pdb) exit
Traceback (most recent call last):
  File "main.py", line 164, in <module>
    loss,correct,_ = model_run('train',model_ft, input_speech, label, criterion, optimizer)
  File "main.py", line 35, in model_run
    if phase == 'train':
  File "main.py", line 35, in model_run
    if phase == 'train':
  File "/home/devansh/anaconda3/lib/python3.6/bdb.py", line 48, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/devansh/anaconda3/lib/python3.6/bdb.py", line 67, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m vim main.py 
[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;37r[?12;25h[?12l[?25h[27m[24m[0m[H[2J[?25l[37;1H"main.py" 200L, 6488C[1;1H[35mimport[0m numpy [38;5;130mas[0m np
[35mimport[0m random
[35mimport[0m shutil
[35mimport[0m pickle
[35mimport[0m torch
[35mfrom[0m model [35mimport[0m network
[35mfrom[0m data_loader_spec [35mimport[0m wave_spec
[35mimport[0m argparse
[35mfrom[0m torchvision [35mimport[0m transforms
[35mimport[0m os
[35mimport[0m torch.nn [38;5;130mas[0m nn
[35mfrom[0m torch.autograd [35mimport[0m Variable
[35mimport[0m torch.optim [38;5;130mas[0m optim

[38;5;130mdef[0m [36msave_checkpoint[0m(state, is_best, filename,savetrainloss,savetraincorrects,savevalloss,savevalcorrects):
    torch.save(state, filename)[18;5Hsavetrainloss_name = [36mopen[0m([31m'trainloss'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savetraincorrects_name = [36mopen[0m([31m'traincorrects'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savevalloss_name = [36mopen[0m([31m'valloss'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savevalcorrects_name = [36mopen[0m([31m'valcorrects'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)[23;5Hpickle.dump(savetrainloss,savetrainloss_name)
    pickle.dump(savetraincorrects,savetraincorrects_name)
    pickle.dump(savevalloss,savevalloss_name)
    pickle.dump(savevalcorrects,savevalcorrects_name)[28;5H[38;5;130mif[0m is_best:[29;9Hshutil.copyfile(filename, [31m'model_best.pth.tar'[0m)[30;9H[36mprint[0m([31m"New Best Model Found"[0m)

[38;5;130mdef[0m [36mmodel_run[0m(phase,model,inputs,labels,criterion,optimizer):
    [35mimport[0m pdb
    pdb.set_trace()
    [38;5;130mif[0m phase == [31m'train'[0m:[36;9Hmodel.train([36mTrue[0m)[37;299H1,1[11CTop[1;1H[?12l[?25h[?25l[37;299H2[2;1H[?12l[?25h[?25l[37;299H3[3;1H[?12l[?25h[?25l[37;299H4[4;1H[?12l[?25h[?25l[37;299H5[5;1H[?12l[?25h[?25l[37;299H6[6;1H[?12l[?25h[?25l[37;299H7[7;1H[?12l[?25h[?25l[37;299H8[8;1H[?12l[?25h[?25l[37;299H9[9;1H[?12l[?25h[?25l[37;299H10,1[10;1H[?12l[?25h[?25l[37;300H1[11;1H[?12l[?25h[?25l[37;300H2[12;1H[?12l[?25h[?25l[37;300H3[13;1H[?12l[?25h[?25l[37;300H4,0-1[14;1H[?12l[?25h[?25l[37;300H5,1  [15;1H[?12l[?25h[?25l[37;300H6[16;1H[?12l[?25h[?25l[37;300H7,0-1[17;1H[?12l[?25h[?25l[37;300H8,1  [18;1H[?12l[?25h[?25l[37;300H9[19;1H[?12l[?25h[?25l[37;299H20[20;1H[?12l[?25h[?25l[37;300H1[21;1H[?12l[?25h[?25l[37;300H2,0-1[22;1H[?12l[?25h[?25l[37;300H3,1  [23;1H[?12l[?25h[?25l[37;300H4[24;1H[?12l[?25h[?25l[37;300H5[25;1H[?12l[?25h[?25l[37;300H6[26;1H[?12l[?25h[?25l[37;300H7,0-1[27;1H[?12l[?25h[?25l[37;300H8,1  [28;1H[?12l[?25h[?25l[37;300H9[29;1H[?12l[?25h[?25l[37;299H30[30;1H[?12l[?25h[?25l[37;300H1,0-1[31;1H[?12l[?25h[?25l[37;300H2,1  [32;1H[?12l[?25h[?25l[37;300H3[33;1H[?12l[?25h[?25l[37;300H4[34;1H[?12l[?25h[?25l[37;300H5[35;1H[?12l[?25h[?25l[37;300H6[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130melse[0m:[37;1H[K[37;299H37,1[11C0%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hmodel.eval()[37;299H[K[37;299H38,1[11C1%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H39,0-1[9C1%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mif[0m phase == [31m'train'[0m:[37;299H[K[37;299H40,1[11C2%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H41,0-1[9C3%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H42,1[11C3%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;13Hinputs, labels = Variable(inputs.cuda(), requires_grad = [36mFalse[0m), Variable(labels.cuda(), requires_grad = [36mFalse[0m)[37;299H[K[37;299H43,1[11C4%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9H[38;5;130melse[0m:[37;299H[K[37;299H44,1[11C4%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;13Hinputs, labels = Variable(inputs, requires_grad = [36mFalse[0m), Variable(labels, requires_grad = [36mFalse[0m)[37;299H[K[37;299H45,1[11C5%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130melse[0m:[37;299H[K[37;299H46,1[11C6%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H47,0-1[9C6%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H48,1[11C7%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;13Hinputs, labels = Variable(inputs.cuda(), volatile = [36mTrue[0m), Variable(labels.cuda(), volatile= [36mTrue[0m)[37;299H[K[37;299H49,1[11C7%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9H[38;5;130melse[0m:[37;299H[K[37;299H50,1[11C8%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;13Hinputs, labels = Variable(inputs, volatile = [36mTrue[0m), Variable(labels, volatile= [36mTrue[0m)[37;299H[K[37;299H51,1[11C9%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H52,0-1[9C9%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hoptimizer.zero_grad()[37;299H[K[37;299H53,1[10C10%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Houtputs = model(inputs)[37;299H[K[37;299H54,1[10C10%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H55,1[10C11%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hlabels = labels.type(torch.cuda.FloatTensor)[37;299H[K[37;299H56,1[10C12%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130melse[0m:[37;299H[K[37;299H57,1[10C12%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hlabels = labels.type(torch.FloatTensor)[37;299H[K[37;299H58,1[10C13%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Houtputs = torch.squeeze(outputs)[37;299H[K[37;299H59,1[10C14%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hloss = criterion(outputs, labels)[37;299H[K[37;299H60,1[10C14%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H61,1[10C15%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hpred = outputs.data.clone()[37;299H[K[37;299H62,1[10C15%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hpred[pred>[31m0.5[0m] = [31m1[0m[37;299H[K[37;299H63,1[10C16%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hpred[pred<=[31m0.5[0m] = [31m0[0m[37;299H[K[37;299H64,1[10C17%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H65,0-1[8C17%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mif[0m phase==[31m'train'[0m:[37;299H[K[37;299H66,1[10C18%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hloss.backward()[37;299H[K[37;299H67,1[10C18%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hoptimizer.step()[37;299H[K[37;299H68,1[10C19%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H69,0-1[8C20%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hcorrects = torch.sum(pred==labels.data)[37;299H[K[37;299H70,1[10C20%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs[37;299H[K[37;299H71,1[10C21%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H72,0-1[8C21%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H73,0-1[8C22%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser = argparse.ArgumentParser(description=[31m'PyTorch Speech Recognition'[0m)[37;299H[K[37;299H74,1[10C23%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H75,0-1[8C23%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--lr'[0m,[31m'--learning_rate'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0.001[0m,[36mhelp[0m=[31m'initial learning rate'[0m)[37;299H[K[37;299H76,1[10C24%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--lr_de'[0m,[31m'--lr_decay'[0m,[36mtype[0m=[36mint[0m,default=[31m30[0m,[36mhelp[0m=[31m'learning rate decay epoch'[0m)[37;299H[K[37;299H77,1[10C25%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--checkpoint'[0m,[36mtype[0m=[36mstr[0m,default=[31m''[0m)[37;299H[K[37;299H78,1[10C25%[36;1H[?12l[?25h[?25l[37;300H7[35;1H[?12l[?25h[?25l[37;300H6[34;1H[?12l[?25h[?25l[37;300H5,0-1[33;1H[?12l[?25h[?25l[37;300H4,1  [32;1H[?12l[?25h[?25l[37;300H3,0-1[31;1H[?12l[?25h[?25l[37;300H2[30;1H[?12l[?25h[?25l[37;300H1,1  [29;1H[?12l[?25h[?25l[37;300H0[28;1H[?12l[?25h[?25l[37;299H69,0-1[27;1H[?12l[?25h[?25l[37;300H8,1  [26;1H[?12l[?25h[?25l[37;300H7[25;1H[?12l[?25h[?25l[37;300H6[24;1H[?12l[?25h[?25l[37;300H5,0-1[23;1H[?12l[?25h[?25l[37;300H4,1  [22;1H[?12l[?25h[?25l[37;300H3[21;1H[?12l[?25h[?25l[37;300H2[20;1H[?12l[?25h[?25l[37;300H1[19;1H[?12l[?25h[?25l[37;300H0[18;1H[?12l[?25h[?25l[37;299H59[17;1H[?12l[?25h[?25l[37;300H8[16;1H[?12l[?25h[?25l[37;300H7[15;1H[?12l[?25h[?25l[37;300H6[14;1H[?12l[?25h[?25l[37;300H5[13;1H[?12l[?25h[?25l[37;300H4[12;1H[?12l[?25h[?25l[37;300H3[11;1H[?12l[?25h[?25l[37;300H2,0-1[10;1H[?12l[?25h[?25l[37;300H1,1  [9;1H[?12l[?25h[?25l[37;300H0[8;1H[?12l[?25h[?25l[37;299H49[7;1H[?12l[?25h[?25l[37;300H8[6;1H[?12l[?25h[?25l[37;300H7,0-1[5;1H[?12l[?25h[?25l[37;300H6,1  [4;1H[?12l[?25h[?25l[37;300H5[3;1H[?12l[?25h[?25l[37;300H4[2;1H[?12l[?25h[?25l[37;300H3[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H42,1[10C25%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H41,0-1[8C24%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m phase == [31m'train'[0m:[37;299H[K[37;299H40,1[10C23%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H39,0-1[8C23%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hmodel.eval()[37;299H[K[37;299H38,1[10C22%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130melse[0m:[37;299H[K[37;299H37,1[10C21%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hmodel.train([36mTrue[0m)[37;299H[K[37;299H36,1[10C21%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m phase == [31m'train'[0m:[37;299H[K[37;299H35,1[10C20%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpdb.set_trace()[37;299H[K[37;299H34,1[10C20%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[35mimport[0m pdb[37;299H[K[37;299H33,1[10C19%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[38;5;130mdef[0m [36mmodel_run[0m(phase,model,inputs,labels,criterion,optimizer):[37;299H[K[37;299H32,1[10C18%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H31,0-1[8C18%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[36mprint[0m([31m"New Best Model Found"[0m)[37;299H[K[37;299H30,1[10C17%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hshutil.copyfile(filename, [31m'model_best.pth.tar'[0m)[37;299H[K[37;299H29,1[10C17%[1;1H[?12l[?25h[?25l[37;299H30[2;1H[?12l[?25h[?25l[37;300H1,0-1[3;1H[?12l[?25h[?25l[37;300H2,1  [4;1H[?12l[?25h[?25l[37;300H3[5;1H[?12l[?25h[?25l [47m   [0m[35m[47mimport[0m[47m pdb [0m[37;1H[1m-- VISUAL LINE --[0m[37;299H[K[37;299H33,1[10C17%[5;1H[?12l[?25h[?25l[47m 
[0m [47m   pdb.set_trace()     [0m[37;300H4[6;1H[?12l[?25h[?25l[5;15H[K[6;2H   pdb.set_trace()    [6;24H[K[37;300H3,15[5;15H[?12l[?25h[?25l[47m 
    pdb.set_tr[0ma[47mce()     [0m[37;300H4[6;15H[?12l[?25h[?25l[5;36r[5;1H[2M[1;37r[36;5H[38;5;130mif[0m phase==[31m'train'[0m:[37;1H[K[37;299H33,5[10C17%[5;5H[?12l[?25h[?25l[37;300H4[6;5H[?12l[?25h[?25l[37;300H5[7;5H[?12l[?25h[?25l[37;300H6[8;5H[?12l[?25h[?25l[37;300H7,0-1[9;1H[?12l[?25h[?25l[37;300H8,5  [10;5H[?12l[?25h[?25l[37;300H9,0-1[11;1H[?12l[?25h[?25l[37;299H40,5-8[12;8H[?12l[?25h[?25l[37;300H1[13;8H[?12l[?25h[?25l[37;300H2[14;8H[?12l[?25h[?25l[37;300H3,5  [15;5H[?12l[?25h[?25l[37;300H4[16;5H[?12l[?25h[?25l[37;300H5,0-1[17;1H[?12l[?25h[?25l[37;300H6,5-8[18;8H[?12l[?25h[?25l[37;300H7[19;8H[?12l[?25h[?25l[37;300H8[20;8H[?12l[?25h[?25l[37;300H9,5  [21;5H[?12l[?25h[?25l[37;299H50,0-1[22;1H[?12l[?25h[?25l[37;300H1,5  [23;5H[?12l[?25h[?25l[37;300H2[24;5H[?12l[?25h[?25l[37;300H3[25;5H[?12l[?25h[?25l[37;300H4[26;5H[?12l[?25h[?25l[37;300H5[27;5H[?12l[?25h[?25l[37;300H6[28;5H[?12l[?25h[?25l[37;300H7[29;5H[?12l[?25h[?25l[37;300H8[30;5H[?12l[?25h[?25l[37;300H9,4[31;4H[?12l[?25h[?25l[37;299H60,5[32;5H[?12l[?25h[?25l[37;300H1[33;5H[?12l[?25h[?25l[37;300H2[34;5H[?12l[?25h[?25l[37;300H3,0-1[35;1H[?12l[?25h[?25l[37;300H4,5  [36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hloss.backward()[37;299H[K[37;299H65,5[10C17%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hoptimizer.step()[37;299H[K[37;299H66,5[10C18%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H67,0-1[8C19%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hcorrects = torch.sum(pred==labels.data)[37;299H[K[37;299H68,5[10C19%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs[37;299H[K[37;299H69,5[10C20%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H70,0-1[8C20%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H71,0-1[8C21%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser = argparse.ArgumentParser(description=[31m'PyTorch Speech Recognition'[0m)[37;299H[K[37;299H72,5[10C22%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H73,0-1[8C22%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--lr'[0m,[31m'--learning_rate'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0.001[0m,[36mhelp[0m=[31m'initial learning rate'[0m)[37;299H[K[37;299H74,5[10C23%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--lr_de'[0m,[31m'--lr_decay'[0m,[36mtype[0m=[36mint[0m,default=[31m30[0m,[36mhelp[0m=[31m'learning rate decay epoch'[0m)[37;299H[K[37;299H75,5[10C24%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--checkpoint'[0m,[36mtype[0m=[36mstr[0m,default=[31m''[0m)[37;299H[K[37;299H76,5[10C24%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--wd'[0m,[31m'--weightdecay'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0[0m)[37;299H[K[37;299H77,5[10C25%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hargs = parser.parse_args()[37;299H[K[37;299H78,5[10C25%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H79,0-1[8C26%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hmanualseed = [31m200[0m[37;299H[K[37;299H80,5[10C27%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hrandom.seed(manualseed)[37;299H[K[37;299H81,5[10C27%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Htorch.manual_seed(manualseed)[37;299H[K[37;299H82,5[10C28%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hnp.random.seed(manualseed)[37;299H[K[37;299H83,5[10C29%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H84,0-1[8C29%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H85,5[10C30%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Htorch.cuda.manual_seed_all(manualseed)[37;299H[K[37;299H86,5[10C30%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H87,0-1[8C31%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H88,0-1[8C32%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[36mprint[0m([31m"learning_rate: {0}, decay:{1}, checkpoint:{2}"[0m.format(args.lr,args.lr_de,args.checkpoint))[37;299H[K[37;299H89,5[10C32%[36;5H[?12l[?25h[?25l[37;300H8,0-1[35;1H[?12l[?25h[?25l[37;300H7[34;1H[?12l[?25h[?25l[37;300H6,5  [33;5H[?12l[?25h[?25l[37;300H5[32;5H[?12l[?25h[?25l[37;300H4,0-1[31;1H[?12l[?25h[?25l[37;300H3,5  [30;5H[?12l[?25h[?25l[37;300H2[29;5H[?12l[?25h[?25l[37;300H1[28;5H[?12l[?25h[?25l[37;300H0[27;5H[?12l[?25h[?25l[37;299H79,0-1[26;1H[?12l[?25h[?25l[37;300H8,5  [25;5H[?12l[?25h[?25l[37;300H7[24;5H[?12l[?25h[?25l[37;300H6[23;5H[?12l[?25h[?25l[37;300H5[22;5H[?12l[?25h[?25l[37;300H4[21;5H[?12l[?25h[?25l[37;300H3,0-1[20;1H[?12l[?25h[?25l[37;300H2,5  [19;5H[?12l[?25h[?25l[37;300H1,0-1[18;1H[?12l[?25h[?25l[37;300H0[17;1H[?12l[?25h[?25l[37;300H1[18;1H[?12l[?25h[?25l[37;300H2,5  [19;5H[?12l[?25h[?25l[37;300H3,0-1[20;1H[?12l[?25h[?25l[37;300H4,5  [21;5H[?12l[?25h[?25l[37;300H5[22;5H[?12l[?25h[?25l[37;300H6[23;5H[?12l[?25h[?25l[37;300H7[24;5H[?12l[?25h[?25l[37;300H8[25;5H[?12l[?25h[?25l[37;300H9,0-1[26;1H[?12l[?25h[?25l[37;299H80,5  [27;5H[?12l[?25h[?25l[37;300H1[28;5H[?12l[?25h[?25l[37;300H2[29;5H[?12l[?25h[?25l[37;300H3[30;5H[?12l[?25h[?25l[37;300H4,0-1[31;1H[?12l[?25h[?25l[37;300H5,5  [32;5H[?12l[?25h[?25l[37;300H6[33;5H[?12l[?25h[?25l[37;300H7,0-1[34;1H[?12l[?25h[?25l[37;300H8[35;1H[?12l[?25h[?25l[37;300H9,5  [36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H90,0-1[8C33%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hdata_transforms = {[37;299H[K[37;299H91,5[10C33%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[31m'train'[0m: transforms.Compose([[37;299H[K[37;299H92,5[10C34%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.Scale(([31m129[0m,[31m71[0m)),[37;299H[K[37;299H93,5-8[8C35%[36;8H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.ToTensor(),[37;299H[K[37;299H94,5[10C35%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.Normalize([[31m0.5[0m],[[31m0.5[0m])[37;299H[K[37;299H95,5[10C36%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[32;33H[106m[[36;5H][0m),[37;299H[K[37;299H96,5[10C37%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[31;33H[[35;5H]
    [31m'val'[0m: transforms.Compose([[37;299H[K[37;299H97,5[10C37%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.Scale(([31m129[0m,[31m71[0m)),[37;299H[K[37;299H98,5-8[8C38%[36;8H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.ToTensor(),[37;299H[K[37;299H99,5[10C38%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htransforms.Normalize([[31m0.5[0m],[[31m0.5[0m])[37;299H[K[37;299H100,5[9C39%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[32;31H[106m[[36;5H][0m)[37;299H[K[37;299H101,5[9C40%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[25;19H[106m{[0m[31;31H[[35;5H]
[106m}[0m[37;299H[K[37;299H102,1[9C40%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[24;19H{[35;1H}[37;299H[K[37;299H103,0-1[7C41%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[36mprint[0m ([31m"....Initializing data sampler....."[0m)[37;299H[K[37;299H104,5[9C41%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hdata_dir = os.path.expanduser([31m'data'[0m)[37;299H[K[37;299H105,5[9C42%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hdsets = {x: wave_spec(os.path.join(data_dir, x), trans=data_transforms[x])[37;299H[K[37;299H106,5[9C43%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;10H[38;5;130mfor[0m x [38;5;130min[0m [[31m'train'[0m, [31m'val'[0m]}[37;299H[K[37;299H107,5[9C43%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H108,0-1[7C44%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hdset_loaders = {x: torch.utils.data.DataLoader(dsets[x], batch_size=[31m25[0m, num_workers=[31m10[0m,shuffle=[36mTrue[0m)[37;299H[K[37;299H109,5[9C45%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;17H[38;5;130mfor[0m x [38;5;130min[0m [[31m'train'[0m, [31m'val'[0m]}[37;299H[K[37;299H110,5[9C45%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H111,0-1[7C46%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[36mprint[0m ([31m"....Loading Model....."[0m)[37;299H[K[37;299H112,5[9C46%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hmodel_ft = network()[37;299H[K[37;299H113,5[9C47%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H114,0-1[7C48%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H115,5[9C48%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hmodel_ft = model_ft.cuda()[37;299H[K[37;299H116,2-5[7C49%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H117,0-1[7C50%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[36mprint[0m ([31m"....Model loaded...."[0m)[37;299H[K[37;299H118,5[9C50%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H119,0-1[7C51%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hcriterion = nn.BCEWithLogitsLoss()[37;299H[K[37;299H120,5[9C51%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H121,0-1[7C52%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hoptimizer = optim.SGD(model_ft.parameters(), lr=args.lr, momentum=[31m0.9[0m, weight_decay=args.wd)[37;299H[K[37;299H122,5[9C53%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H123,0-1[7C53%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[38;5;130mif[0m args.checkpoint:[37;299H[K[37;299H124,5[9C54%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hstate = torch.load(args.checkpoint)[37;299H[K[37;299H125,5[9C54%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hshutil.copyfile(args.checkpoint,[31m'prev_'[0m + args.checkpoint)[37;299H[K[37;299H126,5[9C55%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hmodel_ft.load_state_dict(state[[31m'model'[0m])[37;299H[K[37;299H127,5[9C56%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hoptimizer.load_state_dict(state[[31m'optimizer'[0m])[37;299H[K[37;299H128,5[9C56%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hstart_epoch = state[[31m'epoch'[0m][37;299H[K[37;299H129,5[9C57%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hbest_loss = state[[31m'best_loss'[0m][37;299H[K[37;299H130,5[9C58%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H131,0-1[7C58%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[36mprint[0m([31m"checkpoint Loaded star_epoch = {0},best_loss= {1}"[0m.format(start_epoch,best_loss))[37;299H[K[37;299H132,5[9C59%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mdel[0m state[37;299H[K[37;299H133,5[9C59%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H134,4[9C60%[36;4H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavetrainloss_name = [36mopen[0m([31m'trainloss'[0m + [36mstr[0m(start_epoch) + [31m'.pkl'[0m,[31m'rb'[0m)[37;299H[K[37;299H135,5[9C61%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavetraincorrects_name = [36mopen[0m([31m'traincorrects'[0m + [36mstr[0m(start_epoch) + [31m'.pkl'[0m,[31m'rb'[0m)[37;299H[K[37;299H136,5[9C61%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavevalloss_name = [36mopen[0m([31m'valloss'[0m + [36mstr[0m(start_epoch) + [31m'.pkl'[0m,[31m'rb'[0m)[37;299H[K[37;299H137,5[9C62%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavevalcorrects_name = [36mopen[0m([31m'valcorrects'[0m + [36mstr[0m(start_epoch) + [31m'.pkl'[0m,[31m'rb'[0m)[37;299H[K[37;299H138,5[9C62%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H139,0-1[7C63%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavetrainloss = pickle.load(savetrainloss_name)[37;299H[K[37;299H140,5[9C64%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavetraincorrects = pickle.load(savetraincorrects_name)[37;299H[K[37;299H141,5[9C64%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavevalloss = pickle.load(savevalloss_name)[37;299H[K[37;299H142,5[9C65%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavevalcorrects = pickle.load(savevalcorrects_name)[37;299H[K[37;299H143,5[9C66%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H144,0-1[7C66%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hstart_epoch+=[31m1[0m[37;299H[K[37;299H145,5[9C67%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H146,0-1[7C67%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[38;5;130melse[0m:[37;299H[K[37;299H147,5[9C68%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hstart_epoch = [31m0[0m[37;299H[K[37;299H148,5[9C69%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hbest_loss = [36mfloat[0m([31m'inf'[0m)[37;299H[K[37;299H149,5[9C69%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavetrainloss = {}[37;299H[K[37;299H150,5[9C70%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavetraincorrects = {}[37;299H[K[37;299H151,5[9C70%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavevalloss = {}[37;299H[K[37;299H152,5[9C71%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavevalcorrects = {}[37;299H[K[37;299H153,5[9C72%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H154,0-1[7C72%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1H[38;5;130mfor[0m epoch [38;5;130min[0m [36mrange[0m(start_epoch,[31m500[0m):[37;299H[K[37;299H155,5[9C73%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H156,5[9C74%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Htrainloss = [31m0.0[0m[37;299H[K[37;299H157,5[9C74%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Htraincorrects = [31m0.0[0m[37;299H[K[37;299H158,5[9C75%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H159,0-1[7C75%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mfor[0m i,data [38;5;130min[0m [36menumerate[0m(dset_loaders[[31m'train'[0m],[31m1[0m):[37;299H[K[37;299H160,5[9C76%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hinput_speech,label = data[[31m'image'[0m],data[[31m'label'[0m][37;299H[K[37;299H161,5[9C77%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hloss,correct,_ = model_run([31m'train'[0m,model_ft, input_speech, label, criterion, optimizer)[37;299H[K[37;299H162,5[9C77%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htrainloss += loss[37;299H[K[37;299H163,5[9C78%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Htraincorrects += correct[37;299H[K[37;299H164,5[9C79%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H165,0-1[7C79%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Htrainloss = trainloss/i[37;299H[K[37;299H166,5[9C80%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Htraincorrects = traincorrects/i[37;299H[K[37;299H167,5[9C80%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H168,0-1[7C81%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavetrainloss[epoch] = trainloss[37;299H[K[37;299H169,5[9C82%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hsavetraincorrects[epoch] = traincorrects[37;299H[K[37;299H170,5[9C82%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H171,0-1[7C83%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hvalloss = [31m0.0[0m[37;299H[K[37;299H172,5[9C83%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hvalcorrects = [31m0.0[0m[37;299H[K[37;299H173,5[9C84%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H174,0-1[7C85%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mfor[0m i,data [38;5;130min[0m [36menumerate[0m(dset_loaders[[31m'val'[0m],[31m1[0m):[37;299H[K[37;299H175,5[9C85%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hinput_speech,label = data[[31m'image'[0m],data[[31m'label'[0m][37;299H[K[37;299H176,5[9C86%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hloss,correct,_ = model_run([31m'val'[0m,model_ft, input_speech, label, criterion, optimizer)[37;299H[K[37;299H177,5[9C87%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hvalloss += loss[37;299H[K[37;299H178,5[9C87%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hvalcorrects += correct[37;299H[K[37;299H179,5[9C88%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H180,0-1[7C88%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hvalloss = valloss/i[37;299H[K[37;299H181,5[9C89%[36;5H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hvalcorrects = valcorrects/i[37;299H[K[37;299H182,5[9C90%[36;5H[?12l[?25h[?25l[37;301H1[35;5H[?12l[?25h[?25l[37;301H0,0-1[34;1H[?12l[?25h[?25l[37;300H79,5  [33;5H[?12l[?25h[?25l[37;301H8[32;5H[?12l[?25h[?25l[37;301H7[31;5H[?12l[?25h[?25l[37;301H6[30;5H[?12l[?25h[?25l[37;301H5[29;5H[?12l[?25h[?25l[37;301H4,0-1[28;1H[?12l[?25h[?25l[37;301H3,5  [27;5H[?12l[?25h[?25l[37;301H2[26;5H[?12l[?25h[?25l[37;301H1,0-1[25;1H[?12l[?25h[?25l[37;301H0,5  [24;5H[?12l[?25h[?25l[37;300H69[23;5H[?12l[?25h[?25l[37;301H8,0-1[22;1H[?12l[?25h[?25l[37;301H7,5  [21;5H[?12l[?25h[?25l[37;301H6[20;5H[?12l[?25h[?25l[37;301H5,0-1[19;1H[?12l[?25h[?25l[37;301H4,5  [18;5H[?12l[?25h[?25l[37;301H3[17;5H[?12l[?25h[?25l[37;303H6[17;6H[?12l[?25h[?25l[37;303H7[17;7H[?12l[?25h[?25l[37;303H8[17;8H[?12l[?25h[?25l[37;303H9[17;9H[?12l[?25h[?25l[37;1H[1m-- INSERT --[0m[37;299H[K[37;299H163,9[9C90%[17;9H[?12l[?25h[?25l[18;36r[18;1H[L[1;37r[17;9H[K[18;1Htrainloss += loss[37;299H[K[37;299H164,1[9C89%[18;1H[?12l[?25h[?25l trainloss += loss[37;303H2[18;2H[?12l[?25h[?25l trainloss += loss[37;303H3[18;3H[?12l[?25h[?25l trainloss += loss[37;303H4[18;4H[?12l[?25h[?25l trainloss += loss[37;303H5[18;5H[?12l[?25h[?25l trainloss += loss[37;303H6[18;6H[?12l[?25h[?25l trainloss += loss[37;303H7[18;7H[?12l[?25h[?25l trainloss += loss[37;303H8[18;8H[?12l[?25h[?25l trainloss += loss[37;303H9[18;9H[?12l[?25h[?25l[37;301H3[17;9H[?12l[?25h[?25li[37;303H10[17;10H[?12l[?25h[?25l[17;9H[K[37;303H9 [17;9H[?12l[?25h[?25li[37;303H10[17;10H[?12l[?25h[?25lm[37;304H1[17;11H[?12l[?25h[?25lp[37;304H2[17;12H[?12l[?25h[?25lo[37;304H3[17;13H[?12l[?25h[?25lr[37;304H4[17;14H[?12l[?25h[?25l[35mimport[0m[37;304H5[17;15H[?12l[?25h[?25l[37;304H6[17;16H[?12l[?25h[?25lp[37;304H7[17;17H[?12l[?25h[?25ld[37;304H8[17;18H[?12l[?25h[?25lb[37;304H9[17;19H[?12l[?25h[?25l[18;36r[18;1H[L[1;37r[37;299H[K[37;299H164,1[9C89%[18;1H[?12l[?25h[?25l[37;303H2[18;2H[?12l[?25h[?25l[37;303H3[18;3H[?12l[?25h[?25l[37;303H4[18;4H[?12l[?25h[?25l[37;303H5[18;5H[?12l[?25h[?25l[37;303H6[18;6H[?12l[?25h[?25l[37;303H7[18;7H[?12l[?25h[?25l[37;303H8[18;8H[?12l[?25h[?25l[37;303H9[18;9H[?12l[?25h[?25lp[37;303H10[18;10H[?12l[?25h[?25ld[37;304H1[18;11H[?12l[?25h[?25lb[37;304H2[18;12H[?12l[?25h[?25l.[37;304H3[18;13H[?12l[?25h[?25ls[37;304H4[18;14H[?12l[?25h[?25le[37;304H5[18;15H[?12l[?25h[?25lt[37;304H6[18;16H[?12l[?25h[?25l_[37;304H7[18;17H[?12l[?25h[?25lt[37;304H8[18;18H[?12l[?25h[?25lr[37;304H9[18;19H[?12l[?25h[?25la[37;303H20[18;20H[?12l[?25h[?25lc[37;304H1[18;21H[?12l[?25h[?25la[37;304H2[18;22H[?12l[?25h[?25le[37;304H3[18;23H[?12l[?25h[?25l[18;22H[K[37;304H2[18;22H[?12l[?25h[?25l[18;21H[K[37;304H1[18;21H[?12l[?25h[?25le[37;304H2[18;22H[?12l[?25h[?25l([37;304H3[18;23H[?12l[?25h[?25l)[106m()[0m[37;304H4[18;24H[?12l[?25h[37;1H[K[18;23H[?25l[37;299H164,23[8C89%[18;23H[?12l[?25h[?25l[37;299H[K[37;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"main.py" 200L, 6492C written
[?1l>[?12l[?25h[?1049l[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m ./speech_job.sh 
learning_rate: 0.01, decay:30, checkpoint:checkpoint_ep400.pth.tar
....Initializing data sampler.....
....Loading Model.....
....Model loaded....
checkpoint Loaded star_epoch = 400,best_loss= 0.11630326617313058
> /home/devansh/Documents/Speech_Recognition/main.py(165)<module>()
-> trainloss += loss
(Pdb) loss
nan
(Pdb) exit()
Traceback (most recent call last):
  File "main.py", line 165, in <module>
    trainloss += loss
  File "main.py", line 165, in <module>
    trainloss += loss
  File "/home/devansh/anaconda3/lib/python3.6/bdb.py", line 48, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/devansh/anaconda3/lib/python3.6/bdb.py", line 67, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m ls
[0m[01;31mcheckpoint_ep0.pth.tar[0m    [01;31mcheckpoint_ep262.pth.tar[0m  [01;31mcheckpoint_ep424.pth.tar[0m       traincorrects126.pkl  traincorrects289.pkl  traincorrects450.pkl  trainloss162.pkl  trainloss324.pkl  trainloss487.pkl    valcorrects199.pkl  valcorrects360.pkl  valcorrects72.pkl  valloss234.pkl  valloss397.pkl
[01;31mcheckpoint_ep100.pth.tar[0m  [01;31mcheckpoint_ep263.pth.tar[0m  [01;31mcheckpoint_ep425.pth.tar[0m       traincorrects127.pkl  traincorrects28.pkl   traincorrects451.pkl  trainloss163.pkl  trainloss325.pkl  trainloss488.pkl    valcorrects19.pkl   valcorrects361.pkl  valcorrects73.pkl  valloss235.pkl  valloss398.pkl
[01;31mcheckpoint_ep101.pth.tar[0m  [01;31mcheckpoint_ep264.pth.tar[0m  [01;31mcheckpoint_ep426.pth.tar[0m       traincorrects128.pkl  traincorrects290.pkl  traincorrects452.pkl  trainloss164.pkl  trainloss326.pkl  trainloss489.pkl    valcorrects1.pkl    valcorrects362.pkl  valcorrects74.pkl  valloss236.pkl  valloss399.pkl
[01;31mcheckpoint_ep102.pth.tar[0m  [01;31mcheckpoint_ep265.pth.tar[0m  [01;31mcheckpoint_ep427.pth.tar[0m       traincorrects129.pkl  traincorrects291.pkl  traincorrects453.pkl  trainloss165.pkl  trainloss327.pkl  trainloss48.pkl     valcorrects200.pkl  valcorrects363.pkl  valcorrects75.pkl  valloss237.pkl  valloss39.pkl
[01;31mcheckpoint_ep103.pth.tar[0m  [01;31mcheckpoint_ep266.pth.tar[0m  [01;31mcheckpoint_ep428.pth.tar[0m       traincorrects12.pkl   traincorrects292.pkl  traincorrects454.pkl  trainloss166.pkl  trainloss328.pkl  trainloss490.pkl    valcorrects201.pkl  valcorrects364.pkl  valcorrects76.pkl  valloss238.pkl  valloss3.pkl
[01;31mcheckpoint_ep104.pth.tar[0m  [01;31mcheckpoint_ep267.pth.tar[0m  [01;31mcheckpoint_ep429.pth.tar[0m       traincorrects130.pkl  traincorrects293.pkl  traincorrects455.pkl  trainloss167.pkl  trainloss329.pkl  trainloss491.pkl    valcorrects202.pkl  valcorrects365.pkl  valcorrects77.pkl  valloss239.pkl  valloss400.pkl
[01;31mcheckpoint_ep105.pth.tar[0m  [01;31mcheckpoint_ep268.pth.tar[0m  [01;31mcheckpoint_ep42.pth.tar[0m        traincorrects131.pkl  traincorrects294.pkl  traincorrects456.pkl  trainloss168.pkl  trainloss32.pkl   trainloss492.pkl    valcorrects203.pkl  valcorrects366.pkl  valcorrects78.pkl  valloss23.pkl   valloss401.pkl
[01;31mcheckpoint_ep106.pth.tar[0m  [01;31mcheckpoint_ep269.pth.tar[0m  [01;31mcheckpoint_ep430.pth.tar[0m       traincorrects132.pkl  traincorrects295.pkl  traincorrects457.pkl  trainloss169.pkl  trainloss330.pkl  trainloss493.pkl    valcorrects204.pkl  valcorrects367.pkl  valcorrects79.pkl  valloss240.pkl  valloss402.pkl
[01;31mcheckpoint_ep107.pth.tar[0m  [01;31mcheckpoint_ep26.pth.tar[0m   [01;31mcheckpoint_ep431.pth.tar[0m       traincorrects133.pkl  traincorrects296.pkl  traincorrects458.pkl  trainloss16.pkl   trainloss331.pkl  trainloss494.pkl    valcorrects205.pkl  valcorrects368.pkl  valcorrects7.pkl   valloss241.pkl  valloss403.pkl
[01;31mcheckpoint_ep108.pth.tar[0m  [01;31mcheckpoint_ep270.pth.tar[0m  [01;31mcheckpoint_ep432.pth.tar[0m       traincorrects134.pkl  traincorrects297.pkl  traincorrects459.pkl  trainloss170.pkl  trainloss332.pkl  trainloss495.pkl    valcorrects206.pkl  valcorrects369.pkl  valcorrects80.pkl  valloss242.pkl  valloss404.pkl
[01;31mcheckpoint_ep109.pth.tar[0m  [01;31mcheckpoint_ep271.pth.tar[0m  [01;31mcheckpoint_ep433.pth.tar[0m       traincorrects135.pkl  traincorrects298.pkl  traincorrects45.pkl   trainloss171.pkl  trainloss333.pkl  trainloss496.pkl    valcorrects207.pkl  valcorrects36.pkl   valcorrects81.pkl  valloss243.pkl  valloss405.pkl
[01;31mcheckpoint_ep10.pth.tar[0m   [01;31mcheckpoint_ep272.pth.tar[0m  [01;31mcheckpoint_ep434.pth.tar[0m       traincorrects136.pkl  traincorrects299.pkl  traincorrects460.pkl  trainloss172.pkl  trainloss334.pkl  trainloss497.pkl    valcorrects208.pkl  valcorrects370.pkl  valcorrects82.pkl  valloss244.pkl  valloss406.pkl
[01;31mcheckpoint_ep110.pth.tar[0m  [01;31mcheckpoint_ep273.pth.tar[0m  [01;31mcheckpoint_ep435.pth.tar[0m       traincorrects137.pkl  traincorrects29.pkl   traincorrects461.pkl  trainloss173.pkl  trainloss335.pkl  trainloss498.pkl    valcorrects209.pkl  valcorrects371.pkl  valcorrects83.pkl  valloss245.pkl  valloss407.pkl
[01;31mcheckpoint_ep111.pth.tar[0m  [01;31mcheckpoint_ep274.pth.tar[0m  [01;31mcheckpoint_ep436.pth.tar[0m       traincorrects138.pkl  traincorrects2.pkl    traincorrects462.pkl  trainloss174.pkl  trainloss336.pkl  trainloss499.pkl    valcorrects20.pkl   valcorrects372.pkl  valcorrects84.pkl  valloss246.pkl  valloss408.pkl
[01;31mcheckpoint_ep112.pth.tar[0m  [01;31mcheckpoint_ep275.pth.tar[0m  [01;31mcheckpoint_ep437.pth.tar[0m       traincorrects139.pkl  traincorrects300.pkl  traincorrects463.pkl  trainloss175.pkl  trainloss337.pkl  trainloss49.pkl     valcorrects210.pkl  valcorrects373.pkl  valcorrects85.pkl  valloss247.pkl  valloss409.pkl
[01;31mcheckpoint_ep113.pth.tar[0m  [01;31mcheckpoint_ep276.pth.tar[0m  [01;31mcheckpoint_ep438.pth.tar[0m       traincorrects13.pkl   traincorrects301.pkl  traincorrects464.pkl  trainloss176.pkl  trainloss338.pkl  trainloss4.pkl      valcorrects211.pkl  valcorrects374.pkl  valcorrects86.pkl  valloss248.pkl  valloss40.pkl
[01;31mcheckpoint_ep114.pth.tar[0m  [01;31mcheckpoint_ep277.pth.tar[0m  [01;31mcheckpoint_ep439.pth.tar[0m       traincorrects140.pkl  traincorrects302.pkl  traincorrects465.pkl  trainloss177.pkl  trainloss339.pkl  trainloss50.pkl     valcorrects212.pkl  valcorrects375.pkl  valcorrects87.pkl  valloss249.pkl  valloss410.pkl
[01;31mcheckpoint_ep115.pth.tar[0m  [01;31mcheckpoint_ep278.pth.tar[0m  [01;31mcheckpoint_ep43.pth.tar[0m        traincorrects141.pkl  traincorrects303.pkl  traincorrects466.pkl  trainloss178.pkl  trainloss33.pkl   trainloss51.pkl     valcorrects213.pkl  valcorrects376.pkl  valcorrects88.pkl  valloss24.pkl   valloss411.pkl
[01;31mcheckpoint_ep116.pth.tar[0m  [01;31mcheckpoint_ep279.pth.tar[0m  [01;31mcheckpoint_ep440.pth.tar[0m       traincorrects142.pkl  traincorrects304.pkl  traincorrects467.pkl  trainloss179.pkl  trainloss340.pkl  trainloss52.pkl     valcorrects214.pkl  valcorrects377.pkl  valcorrects89.pkl  valloss250.pkl  valloss412.pkl
[01;31mcheckpoint_ep117.pth.tar[0m  [01;31mcheckpoint_ep27.pth.tar[0m   [01;31mcheckpoint_ep441.pth.tar[0m       traincorrects143.pkl  traincorrects305.pkl  traincorrects468.pkl  trainloss17.pkl   trainloss341.pkl  trainloss53.pkl     valcorrects215.pkl  valcorrects378.pkl  valcorrects8.pkl   valloss251.pkl  valloss413.pkl
[01;31mcheckpoint_ep118.pth.tar[0m  [01;31mcheckpoint_ep280.pth.tar[0m  [01;31mcheckpoint_ep442.pth.tar[0m       traincorrects144.pkl  traincorrects306.pkl  traincorrects469.pkl  trainloss180.pkl  trainloss342.pkl  trainloss54.pkl     valcorrects216.pkl  valcorrects379.pkl  valcorrects90.pkl  valloss252.pkl  valloss414.pkl
[01;31mcheckpoint_ep119.pth.tar[0m  [01;31mcheckpoint_ep281.pth.tar[0m  [01;31mcheckpoint_ep443.pth.tar[0m       traincorrects145.pkl  traincorrects307.pkl  traincorrects46.pkl   trainloss181.pkl  trainloss343.pkl  trainloss55.pkl     valcorrects217.pkl  valcorrects37.pkl   valcorrects91.pkl  valloss253.pkl  valloss415.pkl
[01;31mcheckpoint_ep11.pth.tar[0m   [01;31mcheckpoint_ep282.pth.tar[0m  [01;31mcheckpoint_ep444.pth.tar[0m       traincorrects146.pkl  traincorrects308.pkl  traincorrects470.pkl  trainloss182.pkl  trainloss344.pkl  trainloss56.pkl     valcorrects218.pkl  valcorrects380.pkl  valcorrects92.pkl  valloss254.pkl  valloss416.pkl
[01;31mcheckpoint_ep120.pth.tar[0m  [01;31mcheckpoint_ep283.pth.tar[0m  [01;31mcheckpoint_ep445.pth.tar[0m       traincorrects147.pkl  traincorrects309.pkl  traincorrects471.pkl  trainloss183.pkl  trainloss345.pkl  trainloss57.pkl     valcorrects219.pkl  valcorrects381.pkl  valcorrects93.pkl  valloss255.pkl  valloss417.pkl
[01;31mcheckpoint_ep121.pth.tar[0m  [01;31mcheckpoint_ep284.pth.tar[0m  [01;31mcheckpoint_ep446.pth.tar[0m       traincorrects148.pkl  traincorrects30.pkl   traincorrects472.pkl  trainloss184.pkl  trainloss346.pkl  trainloss58.pkl     valcorrects21.pkl   valcorrects382.pkl  valcorrects94.pkl  valloss256.pkl  valloss418.pkl
[01;31mcheckpoint_ep122.pth.tar[0m  [01;31mcheckpoint_ep285.pth.tar[0m  [01;31mcheckpoint_ep447.pth.tar[0m       traincorrects149.pkl  traincorrects310.pkl  traincorrects473.pkl  trainloss185.pkl  trainloss347.pkl  trainloss59.pkl     valcorrects220.pkl  valcorrects383.pkl  valcorrects95.pkl  valloss257.pkl  valloss419.pkl
[01;31mcheckpoint_ep123.pth.tar[0m  [01;31mcheckpoint_ep286.pth.tar[0m  [01;31mcheckpoint_ep448.pth.tar[0m       traincorrects14.pkl   traincorrects311.pkl  traincorrects474.pkl  trainloss186.pkl  trainloss348.pkl  trainloss5.pkl      valcorrects221.pkl  valcorrects384.pkl  valcorrects96.pkl  valloss258.pkl  valloss41.pkl
[01;31mcheckpoint_ep124.pth.tar[0m  [01;31mcheckpoint_ep287.pth.tar[0m  [01;31mcheckpoint_ep449.pth.tar[0m       traincorrects150.pkl  traincorrects312.pkl  traincorrects475.pkl  trainloss187.pkl  trainloss349.pkl  trainloss60.pkl     valcorrects222.pkl  valcorrects385.pkl  valcorrects97.pkl  valloss259.pkl  valloss420.pkl
[01;31mcheckpoint_ep125.pth.tar[0m  [01;31mcheckpoint_ep288.pth.tar[0m  [01;31mcheckpoint_ep44.pth.tar[0m        traincorrects151.pkl  traincorrects313.pkl  traincorrects476.pkl  trainloss188.pkl  trainloss34.pkl   trainloss61.pkl     valcorrects223.pkl  valcorrects386.pkl  valcorrects98.pkl  valloss25.pkl   valloss421.pkl
[01;31mcheckpoint_ep126.pth.tar[0m  [01;31mcheckpoint_ep289.pth.tar[0m  [01;31mcheckpoint_ep450.pth.tar[0m       traincorrects152.pkl  traincorrects314.pkl  traincorrects477.pkl  trainloss189.pkl  trainloss350.pkl  trainloss62.pkl     valcorrects224.pkl  valcorrects387.pkl  valcorrects99.pkl  valloss260.pkl  valloss422.pkl
[01;31mcheckpoint_ep127.pth.tar[0m  [01;31mcheckpoint_ep28.pth.tar[0m   [01;31mcheckpoint_ep451.pth.tar[0m       traincorrects153.pkl  traincorrects315.pkl  traincorrects478.pkl  trainloss18.pkl   trainloss351.pkl  trainloss63.pkl     valcorrects225.pkl  valcorrects388.pkl  valcorrects9.pkl   valloss261.pkl  valloss423.pkl
[01;31mcheckpoint_ep128.pth.tar[0m  [01;31mcheckpoint_ep290.pth.tar[0m  [01;31mcheckpoint_ep452.pth.tar[0m       traincorrects154.pkl  traincorrects316.pkl  traincorrects479.pkl  trainloss190.pkl  trainloss352.pkl  trainloss64.pkl     valcorrects226.pkl  valcorrects389.pkl  valloss0.pkl       valloss262.pkl  valloss424.pkl
[01;31mcheckpoint_ep129.pth.tar[0m  [01;31mcheckpoint_ep291.pth.tar[0m  [01;31mcheckpoint_ep453.pth.tar[0m       traincorrects155.pkl  traincorrects317.pkl  traincorrects47.pkl   trainloss191.pkl  trainloss353.pkl  trainloss65.pkl     valcorrects227.pkl  valcorrects38.pkl   valloss100.pkl     valloss263.pkl  valloss425.pkl
[01;31mcheckpoint_ep12.pth.tar[0m   [01;31mcheckpoint_ep292.pth.tar[0m  [01;31mcheckpoint_ep454.pth.tar[0m       traincorrects156.pkl  traincorrects318.pkl  traincorrects480.pkl  trainloss192.pkl  trainloss354.pkl  trainloss66.pkl     valcorrects228.pkl  valcorrects390.pkl  valloss101.pkl     valloss264.pkl  valloss426.pkl
[01;31mcheckpoint_ep130.pth.tar[0m  [01;31mcheckpoint_ep293.pth.tar[0m  [01;31mcheckpoint_ep455.pth.tar[0m       traincorrects157.pkl  traincorrects319.pkl  traincorrects481.pkl  trainloss193.pkl  trainloss355.pkl  trainloss67.pkl     valcorrects229.pkl  valcorrects391.pkl  valloss102.pkl     valloss265.pkl  valloss427.pkl
[01;31mcheckpoint_ep131.pth.tar[0m  [01;31mcheckpoint_ep294.pth.tar[0m  [01;31mcheckpoint_ep456.pth.tar[0m       traincorrects158.pkl  traincorrects31.pkl   traincorrects482.pkl  trainloss194.pkl  trainloss356.pkl  trainloss68.pkl     valcorrects22.pkl   valcorrects392.pkl  valloss103.pkl     valloss266.pkl  valloss428.pkl
[01;31mcheckpoint_ep132.pth.tar[0m  [01;31mcheckpoint_ep295.pth.tar[0m  [01;31mcheckpoint_ep457.pth.tar[0m       traincorrects159.pkl  traincorrects320.pkl  traincorrects483.pkl  trainloss195.pkl  trainloss357.pkl  trainloss69.pkl     valcorrects230.pkl  valcorrects393.pkl  valloss104.pkl     valloss267.pkl  valloss429.pkl
[01;31mcheckpoint_ep133.pth.tar[0m  [01;31mcheckpoint_ep296.pth.tar[0m  [01;31mcheckpoint_ep458.pth.tar[0m       traincorrects15.pkl   traincorrects321.pkl  traincorrects484.pkl  trainloss196.pkl  trainloss358.pkl  trainloss6.pkl      valcorrects231.pkl  valcorrects394.pkl  valloss105.pkl     valloss268.pkl  valloss42.pkl
[01;31mcheckpoint_ep134.pth.tar[0m  [01;31mcheckpoint_ep297.pth.tar[0m  [01;31mcheckpoint_ep459.pth.tar[0m       traincorrects160.pkl  traincorrects322.pkl  traincorrects485.pkl  trainloss197.pkl  trainloss359.pkl  trainloss70.pkl     valcorrects232.pkl  valcorrects395.pkl  valloss106.pkl     valloss269.pkl  valloss430.pkl
[01;31mcheckpoint_ep135.pth.tar[0m  [01;31mcheckpoint_ep298.pth.tar[0m  [01;31mcheckpoint_ep45.pth.tar[0m        traincorrects161.pkl  traincorrects323.pkl  traincorrects486.pkl  trainloss198.pkl  trainloss35.pkl   trainloss71.pkl     valcorrects233.pkl  valcorrects396.pkl  valloss107.pkl     valloss26.pkl   valloss431.pkl
[01;31mcheckpoint_ep136.pth.tar[0m  [01;31mcheckpoint_ep299.pth.tar[0m  [01;31mcheckpoint_ep460.pth.tar[0m       traincorrects162.pkl  traincorrects324.pkl  traincorrects487.pkl  trainloss199.pkl  trainloss360.pkl  trainloss72.pkl     valcorrects234.pkl  valcorrects397.pkl  valloss108.pkl     valloss270.pkl  valloss432.pkl
[01;31mcheckpoint_ep137.pth.tar[0m  [01;31mcheckpoint_ep29.pth.tar[0m   [01;31mcheckpoint_ep461.pth.tar[0m       traincorrects163.pkl  traincorrects325.pkl  traincorrects488.pkl  trainloss19.pkl   trainloss361.pkl  trainloss73.pkl     valcorrects235.pkl  valcorrects398.pkl  valloss109.pkl     valloss271.pkl  valloss433.pkl
[01;31mcheckpoint_ep138.pth.tar[0m  [01;31mcheckpoint_ep2.pth.tar[0m    [01;31mcheckpoint_ep462.pth.tar[0m       traincorrects164.pkl  traincorrects326.pkl  traincorrects489.pkl  trainloss1.pkl    trainloss362.pkl  trainloss74.pkl     valcorrects236.pkl  valcorrects399.pkl  valloss10.pkl      valloss272.pkl  valloss434.pkl
[01;31mcheckpoint_ep139.pth.tar[0m  [01;31mcheckpoint_ep300.pth.tar[0m  [01;31mcheckpoint_ep463.pth.tar[0m       traincorrects165.pkl  traincorrects327.pkl  traincorrects48.pkl   trainloss200.pkl  trainloss363.pkl  trainloss75.pkl     valcorrects237.pkl  valcorrects39.pkl   valloss110.pkl     valloss273.pkl  valloss435.pkl
[01;31mcheckpoint_ep13.pth.tar[0m   [01;31mcheckpoint_ep301.pth.tar[0m  [01;31mcheckpoint_ep464.pth.tar[0m       traincorrects166.pkl  traincorrects328.pkl  traincorrects490.pkl  trainloss201.pkl  trainloss364.pkl  trainloss76.pkl     valcorrects238.pkl  valcorrects3.pkl    valloss111.pkl     valloss274.pkl  valloss436.pkl
[01;31mcheckpoint_ep140.pth.tar[0m  [01;31mcheckpoint_ep302.pth.tar[0m  [01;31mcheckpoint_ep465.pth.tar[0m       traincorrects167.pkl  traincorrects329.pkl  traincorrects491.pkl  trainloss202.pkl  trainloss365.pkl  trainloss77.pkl     valcorrects239.pkl  valcorrects400.pkl  valloss112.pkl     valloss275.pkl  valloss437.pkl
[01;31mcheckpoint_ep141.pth.tar[0m  [01;31mcheckpoint_ep303.pth.tar[0m  [01;31mcheckpoint_ep466.pth.tar[0m       traincorrects168.pkl  traincorrects32.pkl   traincorrects492.pkl  trainloss203.pkl  trainloss366.pkl  trainloss78.pkl     valcorrects23.pkl   valcorrects401.pkl  valloss113.pkl     valloss276.pkl  valloss438.pkl
[01;31mcheckpoint_ep142.pth.tar[0m  [01;31mcheckpoint_ep304.pth.tar[0m  [01;31mcheckpoint_ep467.pth.tar[0m       traincorrects169.pkl  traincorrects330.pkl  traincorrects493.pkl  trainloss204.pkl  trainloss367.pkl  trainloss79.pkl     valcorrects240.pkl  valcorrects402.pkl  valloss114.pkl     valloss277.pkl  valloss439.pkl
[01;31mcheckpoint_ep143.pth.tar[0m  [01;31mcheckpoint_ep305.pth.tar[0m  [01;31mcheckpoint_ep468.pth.tar[0m       traincorrects16.pkl   traincorrects331.pkl  traincorrects494.pkl  trainloss205.pkl  trainloss368.pkl  trainloss7.pkl      valcorrects241.pkl  valcorrects403.pkl  valloss115.pkl     valloss278.pkl  valloss43.pkl
[01;31mcheckpoint_ep144.pth.tar[0m  [01;31mcheckpoint_ep306.pth.tar[0m  [01;31mcheckpoint_ep469.pth.tar[0m       traincorrects170.pkl  traincorrects332.pkl  traincorrects495.pkl  trainloss206.pkl  trainloss369.pkl  trainloss80.pkl     valcorrects242.pkl  valcorrects404.pkl  valloss116.pkl     valloss279.pkl  valloss440.pkl
[01;31mcheckpoint_ep145.pth.tar[0m  [01;31mcheckpoint_ep307.pth.tar[0m  [01;31mcheckpoint_ep46.pth.tar[0m        traincorrects171.pkl  traincorrects333.pkl  traincorrects496.pkl  trainloss207.pkl  trainloss36.pkl   trainloss81.pkl     valcorrects243.pkl  valcorrects405.pkl  valloss117.pkl     valloss27.pkl   valloss441.pkl
[01;31mcheckpoint_ep146.pth.tar[0m  [01;31mcheckpoint_ep308.pth.tar[0m  [01;31mcheckpoint_ep470.pth.tar[0m       traincorrects172.pkl  traincorrects334.pkl  traincorrects497.pkl  trainloss208.pkl  trainloss370.pkl  trainloss82.pkl     valcorrects244.pkl  valcorrects406.pkl  valloss118.pkl     valloss280.pkl  valloss442.pkl
[01;31mcheckpoint_ep147.pth.tar[0m  [01;31mcheckpoint_ep309.pth.tar[0m  [01;31mcheckpoint_ep471.pth.tar[0m       traincorrects173.pkl  traincorrects335.pkl  traincorrects498.pkl  trainloss209.pkl  trainloss371.pkl  trainloss83.pkl     valcorrects245.pkl  valcorrects407.pkl  valloss119.pkl     valloss281.pkl  valloss443.pkl
[01;31mcheckpoint_ep148.pth.tar[0m  [01;31mcheckpoint_ep30.pth.tar[0m   [01;31mcheckpoint_ep472.pth.tar[0m       traincorrects174.pkl  traincorrects336.pkl  traincorrects499.pkl  trainloss20.pkl   trainloss372.pkl  trainloss84.pkl     valcorrects246.pkl  valcorrects408.pkl  valloss11.pkl      valloss282.pkl  valloss444.pkl
[01;31mcheckpoint_ep149.pth.tar[0m  [01;31mcheckpoint_ep310.pth.tar[0m  [01;31mcheckpoint_ep473.pth.tar[0m       traincorrects175.pkl  traincorrects337.pkl  traincorrects49.pkl   trainloss210.pkl  trainloss373.pkl  trainloss85.pkl     valcorrects247.pkl  valcorrects409.pkl  valloss120.pkl     valloss283.pkl  valloss445.pkl
[01;31mcheckpoint_ep14.pth.tar[0m   [01;31mcheckpoint_ep311.pth.tar[0m  [01;31mcheckpoint_ep474.pth.tar[0m       traincorrects176.pkl  traincorrects338.pkl  traincorrects4.pkl    trainloss211.pkl  trainloss374.pkl  trainloss86.pkl     valcorrects248.pkl  valcorrects40.pkl   valloss121.pkl     valloss284.pkl  valloss446.pkl
[01;31mcheckpoint_ep150.pth.tar[0m  [01;31mcheckpoint_ep312.pth.tar[0m  [01;31mcheckpoint_ep475.pth.tar[0m       traincorrects177.pkl  traincorrects339.pkl  traincorrects50.pkl   trainloss212.pkl  trainloss375.pkl  trainloss87.pkl     valcorrects249.pkl  valcorrects410.pkl  valloss122.pkl     valloss285.pkl  valloss447.pkl
[01;31mcheckpoint_ep151.pth.tar[0m  [01;31mcheckpoint_ep313.pth.tar[0m  [01;31mcheckpoint_ep476.pth.tar[0m       traincorrects178.pkl  traincorrects33.pkl   traincorrects51.pkl   trainloss213.pkl  trainloss376.pkl  trainloss88.pkl     valcorrects24.pkl   valcorrects411.pkl  valloss123.pkl     valloss286.pkl  valloss448.pkl
[01;31mcheckpoint_ep152.pth.tar[0m  [01;31mcheckpoint_ep314.pth.tar[0m  [01;31mcheckpoint_ep477.pth.tar[0m       traincorrects179.pkl  traincorrects340.pkl  traincorrects52.pkl   trainloss214.pkl  trainloss377.pkl  trainloss89.pkl     valcorrects250.pkl  valcorrects412.pkl  valloss124.pkl     valloss287.pkl  valloss449.pkl
[01;31mcheckpoint_ep153.pth.tar[0m  [01;31mcheckpoint_ep315.pth.tar[0m  [01;31mcheckpoint_ep478.pth.tar[0m       traincorrects17.pkl   traincorrects341.pkl  traincorrects53.pkl   trainloss215.pkl  trainloss378.pkl  trainloss8.pkl      valcorrects251.pkl  valcorrects413.pkl  valloss125.pkl     valloss288.pkl  valloss44.pkl
[01;31mcheckpoint_ep154.pth.tar[0m  [01;31mcheckpoint_ep316.pth.tar[0m  [01;31mcheckpoint_ep479.pth.tar[0m       traincorrects180.pkl  traincorrects342.pkl  traincorrects54.pkl   trainloss216.pkl  trainloss379.pkl  trainloss90.pkl     valcorrects252.pkl  valcorrects414.pkl  valloss126.pkl     valloss289.pkl  valloss450.pkl
[01;31mcheckpoint_ep155.pth.tar[0m  [01;31mcheckpoint_ep317.pth.tar[0m  [01;31mcheckpoint_ep47.pth.tar[0m        traincorrects181.pkl  traincorrects343.pkl  traincorrects55.pkl   trainloss217.pkl  trainloss37.pkl   trainloss91.pkl     valcorrects253.pkl  valcorrects415.pkl  valloss127.pkl     valloss28.pkl   valloss451.pkl
[01;31mcheckpoint_ep156.pth.tar[0m  [01;31mcheckpoint_ep318.pth.tar[0m  [01;31mcheckpoint_ep480.pth.tar[0m       traincorrects182.pkl  traincorrects344.pkl  traincorrects56.pkl   trainloss218.pkl  trainloss380.pkl  trainloss92.pkl     valcorrects254.pkl  valcorrects416.pkl  valloss128.pkl     valloss290.pkl  valloss452.pkl
[01;31mcheckpoint_ep157.pth.tar[0m  [01;31mcheckpoint_ep319.pth.tar[0m  [01;31mcheckpoint_ep481.pth.tar[0m       traincorrects183.pkl  traincorrects345.pkl  traincorrects57.pkl   trainloss219.pkl  trainloss381.pkl  trainloss93.pkl     valcorrects255.pkl  valcorrects417.pkl  valloss129.pkl     valloss291.pkl  valloss453.pkl
[01;31mcheckpoint_ep158.pth.tar[0m  [01;31mcheckpoint_ep31.pth.tar[0m   [01;31mcheckpoint_ep482.pth.tar[0m       traincorrects184.pkl  traincorrects346.pkl  traincorrects58.pkl   trainloss21.pkl   trainloss382.pkl  trainloss94.pkl     valcorrects256.pkl  valcorrects418.pkl  valloss12.pkl      valloss292.pkl  valloss454.pkl
[01;31mcheckpoint_ep159.pth.tar[0m  [01;31mcheckpoint_ep320.pth.tar[0m  [01;31mcheckpoint_ep483.pth.tar[0m       traincorrects185.pkl  traincorrects347.pkl  traincorrects59.pkl   trainloss220.pkl  trainloss383.pkl  trainloss95.pkl     valcorrects257.pkl  valcorrects419.pkl  valloss130.pkl     valloss293.pkl  valloss455.pkl
[01;31mcheckpoint_ep15.pth.tar[0m   [01;31mcheckpoint_ep321.pth.tar[0m  [01;31mcheckpoint_ep484.pth.tar[0m       traincorrects186.pkl  traincorrects348.pkl  traincorrects5.pkl    trainloss221.pkl  trainloss384.pkl  trainloss96.pkl     valcorrects258.pkl  valcorrects41.pkl   valloss131.pkl     valloss294.pkl  valloss456.pkl
[01;31mcheckpoint_ep160.pth.tar[0m  [01;31mcheckpoint_ep322.pth.tar[0m  [01;31mcheckpoint_ep485.pth.tar[0m       traincorrects187.pkl  traincorrects349.pkl  traincorrects60.pkl   trainloss222.pkl  trainloss385.pkl  trainloss97.pkl     valcorrects259.pkl  valcorrects420.pkl  valloss132.pkl     valloss295.pkl  valloss457.pkl
[01;31mcheckpoint_ep161.pth.tar[0m  [01;31mcheckpoint_ep323.pth.tar[0m  [01;31mcheckpoint_ep486.pth.tar[0m       traincorrects188.pkl  traincorrects34.pkl   traincorrects61.pkl   trainloss223.pkl  trainloss386.pkl  trainloss98.pkl     valcorrects25.pkl   valcorrects421.pkl  valloss133.pkl     valloss296.pkl  valloss458.pkl
[01;31mcheckpoint_ep162.pth.tar[0m  [01;31mcheckpoint_ep324.pth.tar[0m  [01;31mcheckpoint_ep487.pth.tar[0m       traincorrects189.pkl  traincorrects350.pkl  traincorrects62.pkl   trainloss224.pkl  trainloss387.pkl  trainloss99.pkl     valcorrects260.pkl  valcorrects422.pkl  valloss134.pkl     valloss297.pkl  valloss459.pkl
[01;31mcheckpoint_ep163.pth.tar[0m  [01;31mcheckpoint_ep325.pth.tar[0m  [01;31mcheckpoint_ep488.pth.tar[0m       traincorrects18.pkl   traincorrects351.pkl  traincorrects63.pkl   trainloss225.pkl  trainloss388.pkl  trainloss9.pkl      valcorrects261.pkl  valcorrects423.pkl  valloss135.pkl     valloss298.pkl  valloss45.pkl
[01;31mcheckpoint_ep164.pth.tar[0m  [01;31mcheckpoint_ep326.pth.tar[0m  [01;31mcheckpoint_ep489.pth.tar[0m       traincorrects190.pkl  traincorrects352.pkl  traincorrects64.pkl   trainloss226.pkl  trainloss389.pkl  valcorrects0.pkl    valcorrects262.pkl  valcorrects424.pkl  valloss136.pkl     valloss299.pkl  valloss460.pkl
[01;31mcheckpoint_ep165.pth.tar[0m  [01;31mcheckpoint_ep327.pth.tar[0m  [01;31mcheckpoint_ep48.pth.tar[0m        traincorrects191.pkl  traincorrects353.pkl  traincorrects65.pkl   trainloss227.pkl  trainloss38.pkl   valcorrects100.pkl  valcorrects263.pkl  valcorrects425.pkl  valloss137.pkl     valloss29.pkl   valloss461.pkl
[01;31mcheckpoint_ep166.pth.tar[0m  [01;31mcheckpoint_ep328.pth.tar[0m  [01;31mcheckpoint_ep490.pth.tar[0m       traincorrects192.pkl  traincorrects354.pkl  traincorrects66.pkl   trainloss228.pkl  trainloss390.pkl  valcorrects101.pkl  valcorrects264.pkl  valcorrects426.pkl  valloss138.pkl     valloss2.pkl    valloss462.pkl
[01;31mcheckpoint_ep167.pth.tar[0m  [01;31mcheckpoint_ep329.pth.tar[0m  [01;31mcheckpoint_ep491.pth.tar[0m       traincorrects193.pkl  traincorrects355.pkl  traincorrects67.pkl   trainloss229.pkl  trainloss391.pkl  valcorrects102.pkl  valcorrects265.pkl  valcorrects427.pkl  valloss139.pkl     valloss300.pkl  valloss463.pkl
[01;31mcheckpoint_ep168.pth.tar[0m  [01;31mcheckpoint_ep32.pth.tar[0m   [01;31mcheckpoint_ep492.pth.tar[0m       traincorrects194.pkl  traincorrects356.pkl  traincorrects68.pkl   trainloss22.pkl   trainloss392.pkl  valcorrects103.pkl  valcorrects266.pkl  valcorrects428.pkl  valloss13.pkl      valloss301.pkl  valloss464.pkl
[01;31mcheckpoint_ep169.pth.tar[0m  [01;31mcheckpoint_ep330.pth.tar[0m  [01;31mcheckpoint_ep493.pth.tar[0m       traincorrects195.pkl  traincorrects357.pkl  traincorrects69.pkl   trainloss230.pkl  trainloss393.pkl  valcorrects104.pkl  valcorrects267.pkl  valcorrects429.pkl  valloss140.pkl     valloss302.pkl  valloss465.pkl
[01;31mcheckpoint_ep16.pth.tar[0m   [01;31mcheckpoint_ep331.pth.tar[0m  [01;31mcheckpoint_ep494.pth.tar[0m       traincorrects196.pkl  traincorrects358.pkl  traincorrects6.pkl    trainloss231.pkl  trainloss394.pkl  valcorrects105.pkl  valcorrects268.pkl  valcorrects42.pkl   valloss141.pkl     valloss303.pkl  valloss466.pkl
[01;31mcheckpoint_ep170.pth.tar[0m  [01;31mcheckpoint_ep332.pth.tar[0m  [01;31mcheckpoint_ep495.pth.tar[0m       traincorrects197.pkl  traincorrects359.pkl  traincorrects70.pkl   trainloss232.pkl  trainloss395.pkl  valcorrects106.pkl  valcorrects269.pkl  valcorrects430.pkl  valloss142.pkl     valloss304.pkl  valloss467.pkl
[01;31mcheckpoint_ep171.pth.tar[0m  [01;31mcheckpoint_ep333.pth.tar[0m  [01;31mcheckpoint_ep496.pth.tar[0m       traincorrects198.pkl  traincorrects35.pkl   traincorrects71.pkl   trainloss233.pkl  trainloss396.pkl  valcorrects107.pkl  valcorrects26.pkl   valcorrects431.pkl  valloss143.pkl     valloss305.pkl  valloss468.pkl
[01;31mcheckpoint_ep172.pth.tar[0m  [01;31mcheckpoint_ep334.pth.tar[0m  [01;31mcheckpoint_ep497.pth.tar[0m       traincorrects199.pkl  traincorrects360.pkl  traincorrects72.pkl   trainloss234.pkl  trainloss397.pkl  valcorrects108.pkl  valcorrects270.pkl  valcorrects432.pkl  valloss144.pkl     valloss306.pkl  valloss469.pkl
[01;31mcheckpoint_ep173.pth.tar[0m  [01;31mcheckpoint_ep335.pth.tar[0m  [01;31mcheckpoint_ep498.pth.tar[0m       traincorrects19.pkl   traincorrects361.pkl  traincorrects73.pkl   trainloss235.pkl  trainloss398.pkl  valcorrects109.pkl  valcorrects271.pkl  valcorrects433.pkl  valloss145.pkl     valloss307.pkl  valloss46.pkl
[01;31mcheckpoint_ep174.pth.tar[0m  [01;31mcheckpoint_ep336.pth.tar[0m  [01;31mcheckpoint_ep499.pth.tar[0m       traincorrects1.pkl    traincorrects362.pkl  traincorrects74.pkl   trainloss236.pkl  trainloss399.pkl  valcorrects10.pkl   valcorrects272.pkl  valcorrects434.pkl  valloss146.pkl     valloss308.pkl  valloss470.pkl
[01;31mcheckpoint_ep175.pth.tar[0m  [01;31mcheckpoint_ep337.pth.tar[0m  [01;31mcheckpoint_ep49.pth.tar[0m        traincorrects200.pkl  traincorrects363.pkl  traincorrects75.pkl   trainloss237.pkl  trainloss39.pkl   valcorrects110.pkl  valcorrects273.pkl  valcorrects435.pkl  valloss147.pkl     valloss309.pkl  valloss471.pkl
[01;31mcheckpoint_ep176.pth.tar[0m  [01;31mcheckpoint_ep338.pth.tar[0m  [01;31mcheckpoint_ep4.pth.tar[0m         traincorrects201.pkl  traincorrects364.pkl  traincorrects76.pkl   trainloss238.pkl  trainloss3.pkl    valcorrects111.pkl  valcorrects274.pkl  valcorrects436.pkl  valloss148.pkl     valloss30.pkl   valloss472.pkl
[01;31mcheckpoint_ep177.pth.tar[0m  [01;31mcheckpoint_ep339.pth.tar[0m  [01;31mcheckpoint_ep50.pth.tar[0m        traincorrects202.pkl  traincorrects365.pkl  traincorrects77.pkl   trainloss239.pkl  trainloss400.pkl  valcorrects112.pkl  valcorrects275.pkl  valcorrects437.pkl  valloss149.pkl     valloss310.pkl  valloss473.pkl
[01;31mcheckpoint_ep178.pth.tar[0m  [01;31mcheckpoint_ep33.pth.tar[0m   [01;31mcheckpoint_ep51.pth.tar[0m        traincorrects203.pkl  traincorrects366.pkl  traincorrects78.pkl   trainloss23.pkl   trainloss401.pkl  valcorrects113.pkl  valcorrects276.pkl  valcorrects438.pkl  valloss14.pkl      valloss311.pkl  valloss474.pkl
[01;31mcheckpoint_ep179.pth.tar[0m  [01;31mcheckpoint_ep340.pth.tar[0m  [01;31mcheckpoint_ep52.pth.tar[0m        traincorrects204.pkl  traincorrects367.pkl  traincorrects79.pkl   trainloss240.pkl  trainloss402.pkl  valcorrects114.pkl  valcorrects277.pkl  valcorrects439.pkl  valloss150.pkl     valloss312.pkl  valloss475.pkl
[01;31mcheckpoint_ep17.pth.tar[0m   [01;31mcheckpoint_ep341.pth.tar[0m  [01;31mcheckpoint_ep53.pth.tar[0m        traincorrects205.pkl  traincorrects368.pkl  traincorrects7.pkl    trainloss241.pkl  trainloss403.pkl  valcorrects115.pkl  valcorrects278.pkl  valcorrects43.pkl   valloss151.pkl     valloss313.pkl  valloss476.pkl
[01;31mcheckpoint_ep180.pth.tar[0m  [01;31mcheckpoint_ep342.pth.tar[0m  [01;31mcheckpoint_ep54.pth.tar[0m        traincorrects206.pkl  traincorrects369.pkl  traincorrects80.pkl   trainloss242.pkl  trainloss404.pkl  valcorrects116.pkl  valcorrects279.pkl  valcorrects440.pkl  valloss152.pkl     valloss314.pkl  valloss477.pkl
[01;31mcheckpoint_ep181.pth.tar[0m  [01;31mcheckpoint_ep343.pth.tar[0m  [01;31mcheckpoint_ep55.pth.tar[0m        traincorrects207.pkl  traincorrects36.pkl   traincorrects81.pkl   trainloss243.pkl  trainloss405.pkl  valcorrects117.pkl  valcorrects27.pkl   valcorrects441.pkl  valloss153.pkl     valloss315.pkl  valloss478.pkl
[01;31mcheckpoint_ep182.pth.tar[0m  [01;31mcheckpoint_ep344.pth.tar[0m  [01;31mcheckpoint_ep56.pth.tar[0m        traincorrects208.pkl  traincorrects370.pkl  traincorrects82.pkl   trainloss244.pkl  trainloss406.pkl  valcorrects118.pkl  valcorrects280.pkl  valcorrects442.pkl  valloss154.pkl     valloss316.pkl  valloss479.pkl
[01;31mcheckpoint_ep183.pth.tar[0m  [01;31mcheckpoint_ep345.pth.tar[0m  [01;31mcheckpoint_ep57.pth.tar[0m        traincorrects209.pkl  traincorrects371.pkl  traincorrects83.pkl   trainloss245.pkl  trainloss407.pkl  valcorrects119.pkl  valcorrects281.pkl  valcorrects443.pkl  valloss155.pkl     valloss317.pkl  valloss47.pkl
[01;31mcheckpoint_ep184.pth.tar[0m  [01;31mcheckpoint_ep346.pth.tar[0m  [01;31mcheckpoint_ep58.pth.tar[0m        traincorrects20.pkl   traincorrects372.pkl  traincorrects84.pkl   trainloss246.pkl  trainloss408.pkl  valcorrects11.pkl   valcorrects282.pkl  valcorrects444.pkl  valloss156.pkl     valloss318.pkl  valloss480.pkl
[01;31mcheckpoint_ep185.pth.tar[0m  [01;31mcheckpoint_ep347.pth.tar[0m  [01;31mcheckpoint_ep59.pth.tar[0m        traincorrects210.pkl  traincorrects373.pkl  traincorrects85.pkl   trainloss247.pkl  trainloss409.pkl  valcorrects120.pkl  valcorrects283.pkl  valcorrects445.pkl  valloss157.pkl     valloss319.pkl  valloss481.pkl
[01;31mcheckpoint_ep186.pth.tar[0m  [01;31mcheckpoint_ep348.pth.tar[0m  [01;31mcheckpoint_ep5.pth.tar[0m         traincorrects211.pkl  traincorrects374.pkl  traincorrects86.pkl   trainloss248.pkl  trainloss40.pkl   valcorrects121.pkl  valcorrects284.pkl  valcorrects446.pkl  valloss158.pkl     valloss31.pkl   valloss482.pkl
[01;31mcheckpoint_ep187.pth.tar[0m  [01;31mcheckpoint_ep349.pth.tar[0m  [01;31mcheckpoint_ep60.pth.tar[0m        traincorrects212.pkl  traincorrects375.pkl  traincorrects87.pkl   trainloss249.pkl  trainloss410.pkl  valcorrects122.pkl  valcorrects285.pkl  valcorrects447.pkl  valloss159.pkl     valloss320.pkl  valloss483.pkl
[01;31mcheckpoint_ep188.pth.tar[0m  [01;31mcheckpoint_ep34.pth.tar[0m   [01;31mcheckpoint_ep61.pth.tar[0m        traincorrects213.pkl  traincorrects376.pkl  traincorrects88.pkl   trainloss24.pkl   trainloss411.pkl  valcorrects123.pkl  valcorrects286.pkl  valcorrects448.pkl  valloss15.pkl      valloss321.pkl  valloss484.pkl
[01;31mcheckpoint_ep189.pth.tar[0m  [01;31mcheckpoint_ep350.pth.tar[0m  [01;31mcheckpoint_ep62.pth.tar[0m        traincorrects214.pkl  traincorrects377.pkl  traincorrects89.pkl   trainloss250.pkl  trainloss412.pkl  valcorrects124.pkl  valcorrects287.pkl  valcorrects449.pkl  valloss160.pkl     valloss322.pkl  valloss485.pkl
[01;31mcheckpoint_ep18.pth.tar[0m   [01;31mcheckpoint_ep351.pth.tar[0m  [01;31mcheckpoint_ep63.pth.tar[0m        traincorrects215.pkl  traincorrects378.pkl  traincorrects8.pkl    trainloss251.pkl  trainloss413.pkl  valcorrects125.pkl  valcorrects288.pkl  valcorrects44.pkl   valloss161.pkl     valloss323.pkl  valloss486.pkl
[01;31mcheckpoint_ep190.pth.tar[0m  [01;31mcheckpoint_ep352.pth.tar[0m  [01;31mcheckpoint_ep64.pth.tar[0m        traincorrects216.pkl  traincorrects379.pkl  traincorrects90.pkl   trainloss252.pkl  trainloss414.pkl  valcorrects126.pkl  valcorrects289.pkl  valcorrects450.pkl  valloss162.pkl     valloss324.pkl  valloss487.pkl
[01;31mcheckpoint_ep191.pth.tar[0m  [01;31mcheckpoint_ep353.pth.tar[0m  [01;31mcheckpoint_ep65.pth.tar[0m        traincorrects217.pkl  traincorrects37.pkl   traincorrects91.pkl   trainloss253.pkl  trainloss415.pkl  valcorrects127.pkl  valcorrects28.pkl   valcorrects451.pkl  valloss163.pkl     valloss325.pkl  valloss488.pkl
[01;31mcheckpoint_ep192.pth.tar[0m  [01;31mcheckpoint_ep354.pth.tar[0m  [01;31mcheckpoint_ep66.pth.tar[0m        traincorrects218.pkl  traincorrects380.pkl  traincorrects92.pkl   trainloss254.pkl  trainloss416.pkl  valcorrects128.pkl  valcorrects290.pkl  valcorrects452.pkl  valloss164.pkl     valloss326.pkl  valloss489.pkl
[01;31mcheckpoint_ep193.pth.tar[0m  [01;31mcheckpoint_ep355.pth.tar[0m  [01;31mcheckpoint_ep67.pth.tar[0m        traincorrects219.pkl  traincorrects381.pkl  traincorrects93.pkl   trainloss255.pkl  trainloss417.pkl  valcorrects129.pkl  valcorrects291.pkl  valcorrects453.pkl  valloss165.pkl     valloss327.pkl  valloss48.pkl
[01;31mcheckpoint_ep194.pth.tar[0m  [01;31mcheckpoint_ep356.pth.tar[0m  [01;31mcheckpoint_ep68.pth.tar[0m        traincorrects21.pkl   traincorrects382.pkl  traincorrects94.pkl   trainloss256.pkl  trainloss418.pkl  valcorrects12.pkl   valcorrects292.pkl  valcorrects454.pkl  valloss166.pkl     valloss328.pkl  valloss490.pkl
[01;31mcheckpoint_ep195.pth.tar[0m  [01;31mcheckpoint_ep357.pth.tar[0m  [01;31mcheckpoint_ep69.pth.tar[0m        traincorrects220.pkl  traincorrects383.pkl  traincorrects95.pkl   trainloss257.pkl  trainloss419.pkl  valcorrects130.pkl  valcorrects293.pkl  valcorrects455.pkl  valloss167.pkl     valloss329.pkl  valloss491.pkl
[01;31mcheckpoint_ep196.pth.tar[0m  [01;31mcheckpoint_ep358.pth.tar[0m  [01;31mcheckpoint_ep6.pth.tar[0m         traincorrects221.pkl  traincorrects384.pkl  traincorrects96.pkl   trainloss258.pkl  trainloss41.pkl   valcorrects131.pkl  valcorrects294.pkl  valcorrects456.pkl  valloss168.pkl     valloss32.pkl   valloss492.pkl
[01;31mcheckpoint_ep197.pth.tar[0m  [01;31mcheckpoint_ep359.pth.tar[0m  [01;31mcheckpoint_ep70.pth.tar[0m        traincorrects222.pkl  traincorrects385.pkl  traincorrects97.pkl   trainloss259.pkl  trainloss420.pkl  valcorrects132.pkl  valcorrects295.pkl  valcorrects457.pkl  valloss169.pkl     valloss330.pkl  valloss493.pkl
[01;31mcheckpoint_ep198.pth.tar[0m  [01;31mcheckpoint_ep35.pth.tar[0m   [01;31mcheckpoint_ep71.pth.tar[0m        traincorrects223.pkl  traincorrects386.pkl  traincorrects98.pkl   trainloss25.pkl   trainloss421.pkl  valcorrects133.pkl  valcorrects296.pkl  valcorrects458.pkl  valloss16.pkl      valloss331.pkl  valloss494.pkl
[01;31mcheckpoint_ep199.pth.tar[0m  [01;31mcheckpoint_ep360.pth.tar[0m  [01;31mcheckpoint_ep72.pth.tar[0m        traincorrects224.pkl  traincorrects387.pkl  traincorrects99.pkl   trainloss260.pkl  trainloss422.pkl  valcorrects134.pkl  valcorrects297.pkl  valcorrects459.pkl  valloss170.pkl     valloss332.pkl  valloss495.pkl
[01;31mcheckpoint_ep19.pth.tar[0m   [01;31mcheckpoint_ep361.pth.tar[0m  [01;31mcheckpoint_ep73.pth.tar[0m        traincorrects225.pkl  traincorrects388.pkl  traincorrects9.pkl    trainloss261.pkl  trainloss423.pkl  valcorrects135.pkl  valcorrects298.pkl  valcorrects45.pkl   valloss171.pkl     valloss333.pkl  valloss496.pkl
[01;31mcheckpoint_ep1.pth.tar[0m    [01;31mcheckpoint_ep362.pth.tar[0m  [01;31mcheckpoint_ep74.pth.tar[0m        traincorrects226.pkl  traincorrects389.pkl  trainloss0.pkl        trainloss262.pkl  trainloss424.pkl  valcorrects136.pkl  valcorrects299.pkl  valcorrects460.pkl  valloss172.pkl     valloss334.pkl  valloss497.pkl
[01;31mcheckpoint_ep200.pth.tar[0m  [01;31mcheckpoint_ep363.pth.tar[0m  [01;31mcheckpoint_ep75.pth.tar[0m        traincorrects227.pkl  traincorrects38.pkl   trainloss100.pkl      trainloss263.pkl  trainloss425.pkl  valcorrects137.pkl  valcorrects29.pkl   valcorrects461.pkl  valloss173.pkl     valloss335.pkl  valloss498.pkl
[01;31mcheckpoint_ep201.pth.tar[0m  [01;31mcheckpoint_ep364.pth.tar[0m  [01;31mcheckpoint_ep76.pth.tar[0m        traincorrects228.pkl  traincorrects390.pkl  trainloss101.pkl      trainloss264.pkl  trainloss426.pkl  valcorrects138.pkl  valcorrects2.pkl    valcorrects462.pkl  valloss174.pkl     valloss336.pkl  valloss499.pkl
[01;31mcheckpoint_ep202.pth.tar[0m  [01;31mcheckpoint_ep365.pth.tar[0m  [01;31mcheckpoint_ep77.pth.tar[0m        traincorrects229.pkl  traincorrects391.pkl  trainloss102.pkl      trainloss265.pkl  trainloss427.pkl  valcorrects139.pkl  valcorrects300.pkl  valcorrects463.pkl  valloss175.pkl     valloss337.pkl  valloss49.pkl
[01;31mcheckpoint_ep203.pth.tar[0m  [01;31mcheckpoint_ep366.pth.tar[0m  [01;31mcheckpoint_ep78.pth.tar[0m        traincorrects22.pkl   traincorrects392.pkl  trainloss103.pkl      trainloss266.pkl  trainloss428.pkl  valcorrects13.pkl   valcorrects301.pkl  valcorrects464.pkl  valloss176.pkl     valloss338.pkl  valloss4.pkl
[01;31mcheckpoint_ep204.pth.tar[0m  [01;31mcheckpoint_ep367.pth.tar[0m  [01;31mcheckpoint_ep79.pth.tar[0m        traincorrects230.pkl  traincorrects393.pkl  trainloss104.pkl      trainloss267.pkl  trainloss429.pkl  valcorrects140.pkl  valcorrects302.pkl  valcorrects465.pkl  valloss177.pkl     valloss339.pkl  valloss50.pkl
[01;31mcheckpoint_ep205.pth.tar[0m  [01;31mcheckpoint_ep368.pth.tar[0m  [01;31mcheckpoint_ep7.pth.tar[0m         traincorrects231.pkl  traincorrects394.pkl  trainloss105.pkl      trainloss268.pkl  trainloss42.pkl   valcorrects141.pkl  valcorrects303.pkl  valcorrects466.pkl  valloss178.pkl     valloss33.pkl   valloss51.pkl
[01;31mcheckpoint_ep206.pth.tar[0m  [01;31mcheckpoint_ep369.pth.tar[0m  [01;31mcheckpoint_ep80.pth.tar[0m        traincorrects232.pkl  traincorrects395.pkl  trainloss106.pkl      trainloss269.pkl  trainloss430.pkl  valcorrects142.pkl  valcorrects304.pkl  valcorrects467.pkl  valloss179.pkl     valloss340.pkl  valloss52.pkl
[01;31mcheckpoint_ep207.pth.tar[0m  [01;31mcheckpoint_ep36.pth.tar[0m   [01;31mcheckpoint_ep81.pth.tar[0m        traincorrects233.pkl  traincorrects396.pkl  trainloss107.pkl      trainloss26.pkl   trainloss431.pkl  valcorrects143.pkl  valcorrects305.pkl  valcorrects468.pkl  valloss17.pkl      valloss341.pkl  valloss53.pkl
[01;31mcheckpoint_ep208.pth.tar[0m  [01;31mcheckpoint_ep370.pth.tar[0m  [01;31mcheckpoint_ep82.pth.tar[0m        traincorrects234.pkl  traincorrects397.pkl  trainloss108.pkl      trainloss270.pkl  trainloss432.pkl  valcorrects144.pkl  valcorrects306.pkl  valcorrects469.pkl  valloss180.pkl     valloss342.pkl  valloss54.pkl
[01;31mcheckpoint_ep209.pth.tar[0m  [01;31mcheckpoint_ep371.pth.tar[0m  [01;31mcheckpoint_ep83.pth.tar[0m        traincorrects235.pkl  traincorrects398.pkl  trainloss109.pkl      trainloss271.pkl  trainloss433.pkl  valcorrects145.pkl  valcorrects307.pkl  valcorrects46.pkl   valloss181.pkl     valloss343.pkl  valloss55.pkl
[01;31mcheckpoint_ep20.pth.tar[0m   [01;31mcheckpoint_ep372.pth.tar[0m  [01;31mcheckpoint_ep84.pth.tar[0m        traincorrects236.pkl  traincorrects399.pkl  trainloss10.pkl       trainloss272.pkl  trainloss434.pkl  valcorrects146.pkl  valcorrects308.pkl  valcorrects470.pkl  valloss182.pkl     valloss344.pkl  valloss56.pkl
[01;31mcheckpoint_ep210.pth.tar[0m  [01;31mcheckpoint_ep373.pth.tar[0m  [01;31mcheckpoint_ep85.pth.tar[0m        traincorrects237.pkl  traincorrects39.pkl   trainloss110.pkl      trainloss273.pkl  trainloss435.pkl  valcorrects147.pkl  valcorrects309.pkl  valcorrects471.pkl  valloss183.pkl     valloss345.pkl  valloss57.pkl
[01;31mcheckpoint_ep211.pth.tar[0m  [01;31mcheckpoint_ep374.pth.tar[0m  [01;31mcheckpoint_ep86.pth.tar[0m        traincorrects238.pkl  traincorrects3.pkl    trainloss111.pkl      trainloss274.pkl  trainloss436.pkl  valcorrects148.pkl  valcorrects30.pkl   valcorrects472.pkl  valloss184.pkl     valloss346.pkl  valloss58.pkl
[01;31mcheckpoint_ep212.pth.tar[0m  [01;31mcheckpoint_ep375.pth.tar[0m  [01;31mcheckpoint_ep87.pth.tar[0m        traincorrects239.pkl  traincorrects400.pkl  trainloss112.pkl      trainloss275.pkl  trainloss437.pkl  valcorrects149.pkl  valcorrects310.pkl  valcorrects473.pkl  valloss185.pkl     valloss347.pkl  valloss59.pkl
[01;31mcheckpoint_ep213.pth.tar[0m  [01;31mcheckpoint_ep376.pth.tar[0m  [01;31mcheckpoint_ep88.pth.tar[0m        traincorrects23.pkl   traincorrects401.pkl  trainloss113.pkl      trainloss276.pkl  trainloss438.pkl  valcorrects14.pkl   valcorrects311.pkl  valcorrects474.pkl  valloss186.pkl     valloss348.pkl  valloss5.pkl
[01;31mcheckpoint_ep214.pth.tar[0m  [01;31mcheckpoint_ep377.pth.tar[0m  [01;31mcheckpoint_ep89.pth.tar[0m        traincorrects240.pkl  traincorrects402.pkl  trainloss114.pkl      trainloss277.pkl  trainloss439.pkl  valcorrects150.pkl  valcorrects312.pkl  valcorrects475.pkl  valloss187.pkl     valloss349.pkl  valloss60.pkl
[01;31mcheckpoint_ep215.pth.tar[0m  [01;31mcheckpoint_ep378.pth.tar[0m  [01;31mcheckpoint_ep8.pth.tar[0m         traincorrects241.pkl  traincorrects403.pkl  trainloss115.pkl      trainloss278.pkl  trainloss43.pkl   valcorrects151.pkl  valcorrects313.pkl  valcorrects476.pkl  valloss188.pkl     valloss34.pkl   valloss61.pkl
[01;31mcheckpoint_ep216.pth.tar[0m  [01;31mcheckpoint_ep379.pth.tar[0m  [01;31mcheckpoint_ep90.pth.tar[0m        traincorrects242.pkl  traincorrects404.pkl  trainloss116.pkl      trainloss279.pkl  trainloss440.pkl  valcorrects152.pkl  valcorrects314.pkl  valcorrects477.pkl  valloss189.pkl     valloss350.pkl  valloss62.pkl
[01;31mcheckpoint_ep217.pth.tar[0m  [01;31mcheckpoint_ep37.pth.tar[0m   [01;31mcheckpoint_ep91.pth.tar[0m        traincorrects243.pkl  traincorrects405.pkl  trainloss117.pkl      trainloss27.pkl   trainloss441.pkl  valcorrects153.pkl  valcorrects315.pkl  valcorrects478.pkl  valloss18.pkl      valloss351.pkl  valloss63.pkl
[01;31mcheckpoint_ep218.pth.tar[0m  [01;31mcheckpoint_ep380.pth.tar[0m  [01;31mcheckpoint_ep92.pth.tar[0m        traincorrects244.pkl  traincorrects406.pkl  trainloss118.pkl      trainloss280.pkl  trainloss442.pkl  valcorrects154.pkl  valcorrects316.pkl  valcorrects479.pkl  valloss190.pkl     valloss352.pkl  valloss64.pkl
[01;31mcheckpoint_ep219.pth.tar[0m  [01;31mcheckpoint_ep381.pth.tar[0m  [01;31mcheckpoint_ep93.pth.tar[0m        traincorrects245.pkl  traincorrects407.pkl  trainloss119.pkl      trainloss281.pkl  trainloss443.pkl  valcorrects155.pkl  valcorrects317.pkl  valcorrects47.pkl   valloss191.pkl     valloss353.pkl  valloss65.pkl
[01;31mcheckpoint_ep21.pth.tar[0m   [01;31mcheckpoint_ep382.pth.tar[0m  [01;31mcheckpoint_ep94.pth.tar[0m        traincorrects246.pkl  traincorrects408.pkl  trainloss11.pkl       trainloss282.pkl  trainloss444.pkl  valcorrects156.pkl  valcorrects318.pkl  valcorrects480.pkl  valloss192.pkl     valloss354.pkl  valloss66.pkl
[01;31mcheckpoint_ep220.pth.tar[0m  [01;31mcheckpoint_ep383.pth.tar[0m  [01;31mcheckpoint_ep95.pth.tar[0m        traincorrects247.pkl  traincorrects409.pkl  trainloss120.pkl      trainloss283.pkl  trainloss445.pkl  valcorrects157.pkl  valcorrects319.pkl  valcorrects481.pkl  valloss193.pkl     valloss355.pkl  valloss67.pkl
[01;31mcheckpoint_ep221.pth.tar[0m  [01;31mcheckpoint_ep384.pth.tar[0m  [01;31mcheckpoint_ep96.pth.tar[0m        traincorrects248.pkl  traincorrects40.pkl   trainloss121.pkl      trainloss284.pkl  trainloss446.pkl  valcorrects158.pkl  valcorrects31.pkl   valcorrects482.pkl  valloss194.pkl     valloss356.pkl  valloss68.pkl
[01;31mcheckpoint_ep222.pth.tar[0m  [01;31mcheckpoint_ep385.pth.tar[0m  [01;31mcheckpoint_ep97.pth.tar[0m        traincorrects249.pkl  traincorrects410.pkl  trainloss122.pkl      trainloss285.pkl  trainloss447.pkl  valcorrects159.pkl  valcorrects320.pkl  valcorrects483.pkl  valloss195.pkl     valloss357.pkl  valloss69.pkl
[01;31mcheckpoint_ep223.pth.tar[0m  [01;31mcheckpoint_ep386.pth.tar[0m  [01;31mcheckpoint_ep98.pth.tar[0m        traincorrects24.pkl   traincorrects411.pkl  trainloss123.pkl      trainloss286.pkl  trainloss448.pkl  valcorrects15.pkl   valcorrects321.pkl  valcorrects484.pkl  valloss196.pkl     valloss358.pkl  valloss6.pkl
[01;31mcheckpoint_ep224.pth.tar[0m  [01;31mcheckpoint_ep387.pth.tar[0m  [01;31mcheckpoint_ep99.pth.tar[0m        traincorrects250.pkl  traincorrects412.pkl  trainloss124.pkl      trainloss287.pkl  trainloss449.pkl  valcorrects160.pkl  valcorrects322.pkl  valcorrects485.pkl  valloss197.pkl     valloss359.pkl  valloss70.pkl
[01;31mcheckpoint_ep225.pth.tar[0m  [01;31mcheckpoint_ep388.pth.tar[0m  [01;31mcheckpoint_ep9.pth.tar[0m         traincorrects251.pkl  traincorrects413.pkl  trainloss125.pkl      trainloss288.pkl  trainloss44.pkl   valcorrects161.pkl  valcorrects323.pkl  valcorrects486.pkl  valloss198.pkl     valloss35.pkl   valloss71.pkl
[01;31mcheckpoint_ep226.pth.tar[0m  [01;31mcheckpoint_ep389.pth.tar[0m  [01;34mdata[0m                           traincorrects252.pkl  traincorrects414.pkl  trainloss126.pkl      trainloss289.pkl  trainloss450.pkl  valcorrects162.pkl  valcorrects324.pkl  valcorrects487.pkl  valloss199.pkl     valloss360.pkl  valloss72.pkl
[01;31mcheckpoint_ep227.pth.tar[0m  [01;31mcheckpoint_ep38.pth.tar[0m   [01;34mdata_all[0m                       traincorrects253.pkl  traincorrects415.pkl  trainloss127.pkl      trainloss28.pkl   trainloss451.pkl  valcorrects163.pkl  valcorrects325.pkl  valcorrects488.pkl  valloss19.pkl      valloss361.pkl  valloss73.pkl
[01;31mcheckpoint_ep228.pth.tar[0m  [01;31mcheckpoint_ep390.pth.tar[0m  data_loader_spec.py            traincorrects254.pkl  traincorrects416.pkl  trainloss128.pkl      trainloss290.pkl  trainloss452.pkl  valcorrects164.pkl  valcorrects326.pkl  valcorrects489.pkl  valloss1.pkl       valloss362.pkl  valloss74.pkl
[01;31mcheckpoint_ep229.pth.tar[0m  [01;31mcheckpoint_ep391.pth.tar[0m  main.py                        traincorrects255.pkl  traincorrects417.pkl  trainloss129.pkl      trainloss291.pkl  trainloss453.pkl  valcorrects165.pkl  valcorrects327.pkl  valcorrects48.pkl   valloss200.pkl     valloss363.pkl  valloss75.pkl
[01;31mcheckpoint_ep22.pth.tar[0m   [01;31mcheckpoint_ep392.pth.tar[0m  [01;31mmodel_best.pth.tar[0m             traincorrects256.pkl  traincorrects418.pkl  trainloss12.pkl       trainloss292.pkl  trainloss454.pkl  valcorrects166.pkl  valcorrects328.pkl  valcorrects490.pkl  valloss201.pkl     valloss364.pkl  valloss76.pkl
[01;31mcheckpoint_ep230.pth.tar[0m  [01;31mcheckpoint_ep393.pth.tar[0m  model.py                       traincorrects257.pkl  traincorrects419.pkl  trainloss130.pkl      trainloss293.pkl  trainloss455.pkl  valcorrects167.pkl  valcorrects329.pkl  valcorrects491.pkl  valloss202.pkl     valloss365.pkl  valloss77.pkl
[01;31mcheckpoint_ep231.pth.tar[0m  [01;31mcheckpoint_ep394.pth.tar[0m  [01;31mprev_checkpoint_ep400.pth.tar[0m  traincorrects258.pkl  traincorrects41.pkl   trainloss131.pkl      trainloss294.pkl  trainloss456.pkl  valcorrects168.pkl  valcorrects32.pkl   valcorrects492.pkl  valloss203.pkl     valloss366.pkl  valloss78.pkl
[01;31mcheckpoint_ep232.pth.tar[0m  [01;31mcheckpoint_ep395.pth.tar[0m  [01;34m__pycache__[0m                    traincorrects259.pkl  traincorrects420.pkl  trainloss132.pkl      trainloss295.pkl  trainloss457.pkl  valcorrects169.pkl  valcorrects330.pkl  valcorrects493.pkl  valloss204.pkl     valloss367.pkl  valloss79.pkl
[01;31mcheckpoint_ep233.pth.tar[0m  [01;31mcheckpoint_ep396.pth.tar[0m  README.md                      traincorrects25.pkl   traincorrects421.pkl  trainloss133.pkl      trainloss296.pkl  trainloss458.pkl  valcorrects16.pkl   valcorrects331.pkl  valcorrects494.pkl  valloss205.pkl     valloss368.pkl  valloss7.pkl
[01;31mcheckpoint_ep234.pth.tar[0m  [01;31mcheckpoint_ep397.pth.tar[0m  screenlog.0                    traincorrects260.pkl  traincorrects422.pkl  trainloss134.pkl      trainloss297.pkl  trainloss459.pkl  valcorrects170.pkl  valcorrects332.pkl  valcorrects495.pkl  valloss206.pkl     valloss369.pkl  valloss80.pkl
[01;31mcheckpoint_ep235.pth.tar[0m  [01;31mcheckpoint_ep398.pth.tar[0m  [01;32mspeech_job.sh[0m                  traincorrects261.pkl  traincorrects423.pkl  trainloss135.pkl      trainloss298.pkl  trainloss45.pkl   valcorrects171.pkl  valcorrects333.pkl  valcorrects496.pkl  valloss207.pkl     valloss36.pkl   valloss81.pkl
[01;31mcheckpoint_ep236.pth.tar[0m  [01;31mcheckpoint_ep399.pth.tar[0m  traincorrects0.pkl             traincorrects262.pkl  traincorrects424.pkl  trainloss136.pkl      trainloss299.pkl  trainloss460.pkl  valcorrects172.pkl  valcorrects334.pkl  valcorrects497.pkl  valloss208.pkl     valloss370.pkl  valloss82.pkl
[01;31mcheckpoint_ep237.pth.tar[0m  [01;31mcheckpoint_ep39.pth.tar[0m   traincorrects100.pkl           traincorrects263.pkl  traincorrects425.pkl  trainloss137.pkl      trainloss29.pkl   trainloss461.pkl  valcorrects173.pkl  valcorrects335.pkl  valcorrects498.pkl  valloss209.pkl     valloss371.pkl  valloss83.pkl
[01;31mcheckpoint_ep238.pth.tar[0m  [01;31mcheckpoint_ep3.pth.tar[0m    traincorrects101.pkl           traincorrects264.pkl  traincorrects426.pkl  trainloss138.pkl      trainloss2.pkl    trainloss462.pkl  valcorrects174.pkl  valcorrects336.pkl  valcorrects499.pkl  valloss20.pkl      valloss372.pkl  valloss84.pkl
[01;31mcheckpoint_ep239.pth.tar[0m  [01;31mcheckpoint_ep400.pth.tar[0m  traincorrects102.pkl           traincorrects265.pkl  traincorrects427.pkl  trainloss139.pkl      trainloss300.pkl  trainloss463.pkl  valcorrects175.pkl  valcorrects337.pkl  valcorrects49.pkl   valloss210.pkl     valloss373.pkl  valloss85.pkl
[01;31mcheckpoint_ep23.pth.tar[0m   [01;31mcheckpoint_ep401.pth.tar[0m  traincorrects103.pkl           traincorrects266.pkl  traincorrects428.pkl  trainloss13.pkl       trainloss301.pkl  trainloss464.pkl  valcorrects176.pkl  valcorrects338.pkl  valcorrects4.pkl    valloss211.pkl     valloss374.pkl  valloss86.pkl
[01;31mcheckpoint_ep240.pth.tar[0m  [01;31mcheckpoint_ep402.pth.tar[0m  traincorrects104.pkl           traincorrects267.pkl  traincorrects429.pkl  trainloss140.pkl      trainloss302.pkl  trainloss465.pkl  valcorrects177.pkl  valcorrects339.pkl  valcorrects50.pkl   valloss212.pkl     valloss375.pkl  valloss87.pkl
[01;31mcheckpoint_ep241.pth.tar[0m  [01;31mcheckpoint_ep403.pth.tar[0m  traincorrects105.pkl           traincorrects268.pkl  traincorrects42.pkl   trainloss141.pkl      trainloss303.pkl  trainloss466.pkl  valcorrects178.pkl  valcorrects33.pkl   valcorrects51.pkl   valloss213.pkl     valloss376.pkl  valloss88.pkl
[01;31mcheckpoint_ep242.pth.tar[0m  [01;31mcheckpoint_ep404.pth.tar[0m  traincorrects106.pkl           traincorrects269.pkl  traincorrects430.pkl  trainloss142.pkl      trainloss304.pkl  trainloss467.pkl  valcorrects179.pkl  valcorrects340.pkl  valcorrects52.pkl   valloss214.pkl     valloss377.pkl  valloss89.pkl
[01;31mcheckpoint_ep243.pth.tar[0m  [01;31mcheckpoint_ep405.pth.tar[0m  traincorrects107.pkl           traincorrects26.pkl   traincorrects431.pkl  trainloss143.pkl      trainloss305.pkl  trainloss468.pkl  valcorrects17.pkl   valcorrects341.pkl  valcorrects53.pkl   valloss215.pkl     valloss378.pkl  valloss8.pkl
[01;31mcheckpoint_ep244.pth.tar[0m  [01;31mcheckpoint_ep406.pth.tar[0m  traincorrects108.pkl           traincorrects270.pkl  traincorrects432.pkl  trainloss144.pkl      trainloss306.pkl  trainloss469.pkl  valcorrects180.pkl  valcorrects342.pkl  valcorrects54.pkl   valloss216.pkl     valloss379.pkl  valloss90.pkl
[01;31mcheckpoint_ep245.pth.tar[0m  [01;31mcheckpoint_ep407.pth.tar[0m  traincorrects109.pkl           traincorrects271.pkl  traincorrects433.pkl  trainloss145.pkl      trainloss307.pkl  trainloss46.pkl   valcorrects181.pkl  valcorrects343.pkl  valcorrects55.pkl   valloss217.pkl     valloss37.pkl   valloss91.pkl
[01;31mcheckpoint_ep246.pth.tar[0m  [01;31mcheckpoint_ep408.pth.tar[0m  traincorrects10.pkl            traincorrects272.pkl  traincorrects434.pkl  trainloss146.pkl      trainloss308.pkl  trainloss470.pkl  valcorrects182.pkl  valcorrects344.pkl  valcorrects56.pkl   valloss218.pkl     valloss380.pkl  valloss92.pkl
[01;31mcheckpoint_ep247.pth.tar[0m  [01;31mcheckpoint_ep409.pth.tar[0m  traincorrects110.pkl           traincorrects273.pkl  traincorrects435.pkl  trainloss147.pkl      trainloss309.pkl  trainloss471.pkl  valcorrects183.pkl  valcorrects345.pkl  valcorrects57.pkl   valloss219.pkl     valloss381.pkl  valloss93.pkl
[01;31mcheckpoint_ep248.pth.tar[0m  [01;31mcheckpoint_ep40.pth.tar[0m   traincorrects111.pkl           traincorrects274.pkl  traincorrects436.pkl  trainloss148.pkl      trainloss30.pkl   trainloss472.pkl  valcorrects184.pkl  valcorrects346.pkl  valcorrects58.pkl   valloss21.pkl      valloss382.pkl  valloss94.pkl
[01;31mcheckpoint_ep249.pth.tar[0m  [01;31mcheckpoint_ep410.pth.tar[0m  traincorrects112.pkl           traincorrects275.pkl  traincorrects437.pkl  trainloss149.pkl      trainloss310.pkl  trainloss473.pkl  valcorrects185.pkl  valcorrects347.pkl  valcorrects59.pkl   valloss220.pkl     valloss383.pkl  valloss95.pkl
[01;31mcheckpoint_ep24.pth.tar[0m   [01;31mcheckpoint_ep411.pth.tar[0m  traincorrects113.pkl           traincorrects276.pkl  traincorrects438.pkl  trainloss14.pkl       trainloss311.pkl  trainloss474.pkl  valcorrects186.pkl  valcorrects348.pkl  valcorrects5.pkl    valloss221.pkl     valloss384.pkl  valloss96.pkl
[01;31mcheckpoint_ep250.pth.tar[0m  [01;31mcheckpoint_ep412.pth.tar[0m  traincorrects114.pkl           traincorrects277.pkl  traincorrects439.pkl  trainloss150.pkl      trainloss312.pkl  trainloss475.pkl  valcorrects187.pkl  valcorrects349.pkl  valcorrects60.pkl   valloss222.pkl     valloss385.pkl  valloss97.pkl
[01;31mcheckpoint_ep251.pth.tar[0m  [01;31mcheckpoint_ep413.pth.tar[0m  traincorrects115.pkl           traincorrects278.pkl  traincorrects43.pkl   trainloss151.pkl      trainloss313.pkl  trainloss476.pkl  valcorrects188.pkl  valcorrects34.pkl   valcorrects61.pkl   valloss223.pkl     valloss386.pkl  valloss98.pkl
[01;31mcheckpoint_ep252.pth.tar[0m  [01;31mcheckpoint_ep414.pth.tar[0m  traincorrects116.pkl           traincorrects279.pkl  traincorrects440.pkl  trainloss152.pkl      trainloss314.pkl  trainloss477.pkl  valcorrects189.pkl  valcorrects350.pkl  valcorrects62.pkl   valloss224.pkl     valloss387.pkl  valloss99.pkl
[01;31mcheckpoint_ep253.pth.tar[0m  [01;31mcheckpoint_ep415.pth.tar[0m  traincorrects117.pkl           traincorrects27.pkl   traincorrects441.pkl  trainloss153.pkl      trainloss315.pkl  trainloss478.pkl  valcorrects18.pkl   valcorrects351.pkl  valcorrects63.pkl   valloss225.pkl     valloss388.pkl  valloss9.pkl
[01;31mcheckpoint_ep254.pth.tar[0m  [01;31mcheckpoint_ep416.pth.tar[0m  traincorrects118.pkl           traincorrects280.pkl  traincorrects442.pkl  trainloss154.pkl      trainloss316.pkl  trainloss479.pkl  valcorrects190.pkl  valcorrects352.pkl  valcorrects64.pkl   valloss226.pkl     valloss389.pkl
[01;31mcheckpoint_ep255.pth.tar[0m  [01;31mcheckpoint_ep417.pth.tar[0m  traincorrects119.pkl           traincorrects281.pkl  traincorrects443.pkl  trainloss155.pkl      trainloss317.pkl  trainloss47.pkl   valcorrects191.pkl  valcorrects353.pkl  valcorrects65.pkl   valloss227.pkl     valloss38.pkl
[01;31mcheckpoint_ep256.pth.tar[0m  [01;31mcheckpoint_ep418.pth.tar[0m  traincorrects11.pkl            traincorrects282.pkl  traincorrects444.pkl  trainloss156.pkl      trainloss318.pkl  trainloss480.pkl  valcorrects192.pkl  valcorrects354.pkl  valcorrects66.pkl   valloss228.pkl     valloss390.pkl
[01;31mcheckpoint_ep257.pth.tar[0m  [01;31mcheckpoint_ep419.pth.tar[0m  traincorrects120.pkl           traincorrects283.pkl  traincorrects445.pkl  trainloss157.pkl      trainloss319.pkl  trainloss481.pkl  valcorrects193.pkl  valcorrects355.pkl  valcorrects67.pkl   valloss229.pkl     valloss391.pkl
[01;31mcheckpoint_ep258.pth.tar[0m  [01;31mcheckpoint_ep41.pth.tar[0m   traincorrects121.pkl           traincorrects284.pkl  traincorrects446.pkl  trainloss158.pkl      trainloss31.pkl   trainloss482.pkl  valcorrects194.pkl  valcorrects356.pkl  valcorrects68.pkl   valloss22.pkl      valloss392.pkl
[01;31mcheckpoint_ep259.pth.tar[0m  [01;31mcheckpoint_ep420.pth.tar[0m  traincorrects122.pkl           traincorrects285.pkl  traincorrects447.pkl  trainloss159.pkl      trainloss320.pkl  trainloss483.pkl  valcorrects195.pkl  valcorrects357.pkl  valcorrects69.pkl   valloss230.pkl     valloss393.pkl
[01;31mcheckpoint_ep25.pth.tar[0m   [01;31mcheckpoint_ep421.pth.tar[0m  traincorrects123.pkl           traincorrects286.pkl  traincorrects448.pkl  trainloss15.pkl       trainloss321.pkl  trainloss484.pkl  valcorrects196.pkl  valcorrects358.pkl  valcorrects6.pkl    valloss231.pkl     valloss394.pkl
[01;31mcheckpoint_ep260.pth.tar[0m  [01;31mcheckpoint_ep422.pth.tar[0m  traincorrects124.pkl           traincorrects287.pkl  traincorrects449.pkl  trainloss160.pkl      trainloss322.pkl  trainloss485.pkl  valcorrects197.pkl  valcorrects359.pkl  valcorrects70.pkl   valloss232.pkl     valloss395.pkl
[01;31mcheckpoint_ep261.pth.tar[0m  [01;31mcheckpoint_ep423.pth.tar[0m  traincorrects125.pkl           traincorrects288.pkl  traincorrects44.pkl   trainloss161.pkl      trainloss323.pkl  trainloss486.pkl  valcorrects198.pkl  valcorrects35.pkl   valcorrects71.pkl   valloss233.pkl     valloss396.pkl
[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m vim main.py 
[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;37r[?12;25h[?12l[?25h[27m[24m[0m[H[2J[?25l[37;1H"main.py" 200L, 6492C[1;1H[35mimport[0m numpy [38;5;130mas[0m np
[35mimport[0m random
[35mimport[0m shutil
[35mimport[0m pickle
[35mimport[0m torch
[35mfrom[0m model [35mimport[0m network
[35mfrom[0m data_loader_spec [35mimport[0m wave_spec
[35mimport[0m argparse
[35mfrom[0m torchvision [35mimport[0m transforms
[35mimport[0m os
[35mimport[0m torch.nn [38;5;130mas[0m nn
[35mfrom[0m torch.autograd [35mimport[0m Variable
[35mimport[0m torch.optim [38;5;130mas[0m optim

[38;5;130mdef[0m [36msave_checkpoint[0m(state, is_best, filename,savetrainloss,savetraincorrects,savevalloss,savevalcorrects):
    torch.save(state, filename)[18;5Hsavetrainloss_name = [36mopen[0m([31m'trainloss'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savetraincorrects_name = [36mopen[0m([31m'traincorrects'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savevalloss_name = [36mopen[0m([31m'valloss'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savevalcorrects_name = [36mopen[0m([31m'valcorrects'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)[23;5Hpickle.dump(savetrainloss,savetrainloss_name)
    pickle.dump(savetraincorrects,savetraincorrects_name)
    pickle.dump(savevalloss,savevalloss_name)
    pickle.dump(savevalcorrects,savevalcorrects_name)[28;5H[38;5;130mif[0m is_best:[29;9Hshutil.copyfile(filename, [31m'model_best.pth.tar'[0m)[30;9H[36mprint[0m([31m"New Best Model Found"[0m)

[38;5;130mdef[0m [36mmodel_run[0m(phase,model,inputs,labels,criterion,optimizer):
    [38;5;130mif[0m phase == [31m'train'[0m:[34;9Hmodel.train([36mTrue[0m)
    [38;5;130melse[0m:[36;9Hmodel.eval()[37;299H1,1[11CTop[1;1H[?12l[?25h[?25l[37;1H[K[37;1H/[?12l[?25hp[?25l[?12l[?25hd[?25l[?12l[?25hb[?25l[?12l[?25h[?25l[27m[24m[0m[H[2J[2;1H[38;5;130melse[0m:
    start_epoch = [31m0[0m
    best_loss = [36mfloat[0m([31m'inf'[0m)
    savetrainloss = {}
    savetraincorrects = {}
    savevalloss = {}
    savevalcorrects = {}

[38;5;130mfor[0m epoch [38;5;130min[0m [36mrange[0m(start_epoch,[31m500[0m):[12;5Htrainloss = [31m0.0[0m
    traincorrects = [31m0.0[0m[15;5H[38;5;130mfor[0m i,data [38;5;130min[0m [36menumerate[0m(dset_loaders[[31m'train'[0m],[31m1[0m):[16;9Hinput_speech,label = data[[31m'image'[0m],data[[31m'label'[0m][17;9Hloss,correct,_ = model_run([31m'train'[0m,model_ft, input_speech, label, criterion, optimizer)[18;9H[35mimport[0m [103mpdb[19;9Hpdb[0m.set_trace()[20;9Htrainloss += loss[21;9Htraincorrects += correct[23;5Htrainloss = trainloss/i
    traincorrects = traincorrects/i[26;5Hsavetrainloss[epoch] = trainloss
    savetraincorrects[epoch] = traincorrects[29;5Hvalloss = [31m0.0[0m
    valcorrects = [31m0.0[0m[32;5H[38;5;130mfor[0m i,data [38;5;130min[0m [36menumerate[0m(dset_loaders[[31m'val'[0m],[31m1[0m):[33;9Hinput_speech,label = data[[31m'image'[0m],data[[31m'label'[0m][34;9Hloss,correct,_ = model_run([31m'val'[0m,model_ft, input_speech, label, criterion, optimizer)[35;9Hvalloss += loss[36;9Hvalcorrects += correct[37;299H163,16[8C88%[18;16H[?12l[?25h[?25l[47m        [0m[35m[47mimport[0m[47m [1Cdb [0m[37;1H[1m-- VISUAL LINE --[0m[37;299H[K[37;299H163,16[8C88%[18;16H[?12l[?25h[?25l[47mp
        pdb.set[0m_[47mtrace() [0m[37;301H4[19;16H[?12l[?25h[?25l[18;36r[18;1H[2M[1;37r[36;5Hvalloss = valloss/i[37;1H[K[37;299H163,9[9C89%[18;9H[?12l[?25h[?25l[37;301H2[17;9H[?12l[?25h[?25l[37;301H1[16;9H[?12l[?25h[?25l[37;301H0[15;9H[?12l[?25h[?25l[37;300H59,0-1[14;1H[?12l[?25h[?25l[37;301H8,9  [13;9H[?12l[?25h[?25l[37;301H7[12;9H[?12l[?25h[?25l[37;301H6,8[11;8H[?12l[?25h[?25l[37;301H5,9[10;9H[?12l[?25h[?25l[37;301H4,0-1[9;1H[?12l[?25h[?25l[37;301H3,9  [8;9H[?12l[?25h[?25l[37;301H2[7;9H[?12l[?25h[?25l[37;301H1[6;9H[?12l[?25h[?25l[37;301H0[5;9H[?12l[?25h[?25l[37;300H49[4;9H[?12l[?25h[?25l[37;301H8[3;9H[?12l[?25h[?25l[37;301H7,5[2;5H[?12l[?25h[?25l[37;301H6,0-1[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hstart_epoch+=[31m1[0m[37;299H[K[37;299H145,9[9C88%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H144,0-1[7C88%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavevalcorrects = pickle.load(savevalcorrects_name)[37;299H[K[37;299H143,9[9C87%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavevalloss = pickle.load(savevalloss_name)[37;299H[K[37;299H142,9[9C87%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavetraincorrects = pickle.load(savetraincorrects_name)[37;299H[K[37;299H141,9[9C86%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavetrainloss = pickle.load(savetrainloss_name)[37;299H[K[37;299H140,9[9C85%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H139,0-1[7C85%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavevalcorrects_name = [36mopen[0m([31m'valcorrects'[0m + [36mstr[0m(start_epoch) + [31m'.pkl'[0m,[31m'rb'[0m)[37;299H[K[37;299H138,9[9C84%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavevalloss_name = [36mopen[0m([31m'valloss'[0m + [36mstr[0m(start_epoch) + [31m'.pkl'[0m,[31m'rb'[0m)[37;299H[K[37;299H137,9[9C83%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavetraincorrects_name = [36mopen[0m([31m'traincorrects'[0m + [36mstr[0m(start_epoch) + [31m'.pkl'[0m,[31m'rb'[0m)[37;299H[K[37;299H136,9[9C83%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavetrainloss_name = [36mopen[0m([31m'trainloss'[0m + [36mstr[0m(start_epoch) + [31m'.pkl'[0m,[31m'rb'[0m)[37;299H[K[37;299H135,9[9C82%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H134,4[9C82%[1;4H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mdel[0m state[37;299H[K[37;299H133,9[9C81%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[36mprint[0m([31m"checkpoint Loaded star_epoch = {0},best_loss= {1}"[0m.format(start_epoch,best_loss))[37;299H[K[37;299H132,9[9C80%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H131,0-1[7C80%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hbest_loss = state[[31m'best_loss'[0m][37;299H[K[37;299H130,9[9C79%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hstart_epoch = state[[31m'epoch'[0m][37;299H[K[37;299H129,9[9C79%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hoptimizer.load_state_dict(state[[31m'optimizer'[0m])[37;299H[K[37;299H128,9[9C78%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hmodel_ft.load_state_dict(state[[31m'model'[0m])[37;299H[K[37;299H127,9[9C77%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hshutil.copyfile(args.checkpoint,[31m'prev_'[0m + args.checkpoint)[37;299H[K[37;299H126,9[9C77%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hstate = torch.load(args.checkpoint)[37;299H[K[37;299H125,9[9C76%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[38;5;130mif[0m args.checkpoint:[37;299H[K[37;299H124,9[9C75%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H123,0-1[7C75%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hoptimizer = optim.SGD(model_ft.parameters(), lr=args.lr, momentum=[31m0.9[0m, weight_decay=args.wd)[37;299H[K[37;299H122,9[9C74%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H121,0-1[7C74%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hcriterion = nn.BCEWithLogitsLoss()[37;299H[K[37;299H120,9[9C73%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H119,0-1[7C72%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[36mprint[0m ([31m"....Model loaded...."[0m)[37;299H[K[37;299H118,9[9C72%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H117,0-1[7C71%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hmodel_ft = model_ft.cuda()[37;299H[K[37;299H116,6-9[7C70%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H115,9[9C70%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H114,0-1[7C69%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hmodel_ft = network()[37;299H[K[37;299H113,9[9C69%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[36mprint[0m ([31m"....Loading Model....."[0m)[37;299H[K[37;299H112,9[9C68%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H111,0-1[7C67%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;17H[38;5;130mfor[0m x [38;5;130min[0m [[31m'train'[0m, [31m'val'[0m]}[37;299H[K[37;299H110,9[9C67%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hdset_loaders = {x: torch.utils.data.DataLoader(dsets[x], batch_size=[31m25[0m, num_workers=[31m10[0m,shuffle=[36mTrue[0m)[37;299H[K[37;299H109,9[9C66%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H108,0-1[7C66%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;10H[38;5;130mfor[0m x [38;5;130min[0m [[31m'train'[0m, [31m'val'[0m]}[37;299H[K[37;299H107,9[9C65%[1;9H[?12l[?25h[?25l[2;36r[2;1H[L[1;37r[1;1Hdsets = [106m{[0mx: wave_spec(os.path.join(data_dir, x), trans=data_transforms[x])[2;10H[38;5;130mfor[0m x [38;5;130min[0m [[31m'train'[0m, [31m'val'[0m][106m}[0m[37;299H[K[37;299H106,9[9C64%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hdata_dir = os.path.expanduser([31m'data'[0m)[2;9H{[3;35H}[37;299H[K[37;299H105,9[9C64%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[36mprint[0m ([31m"....Initializing data sampler....."[0m)[37;299H[K[37;299H104,9[9C63%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H103,0-1[7C62%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H}[37;299H[K[37;299H102,1[9C62%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H])[37;299H[K[37;299H101,6[9C61%[1;6H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Htransforms.Normalize([[31m0.5[0m],[[31m0.5[0m])[37;299H[K[37;299H100,9[9C61%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Htransforms.ToTensor(),[37;299H[K[37;299H99,9[10C60%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Htransforms.Scale(([31m129[0m,[31m71[0m)),[37;299H[K[37;299H98,6-9[8C59%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[31m'val'[0m: transforms.Compose([[37;299H[K[37;299H97,9[10C59%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H]),[37;299H[K[37;299H96,7[10C58%[1;7H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Htransforms.Normalize([[31m0.5[0m],[[31m0.5[0m])[37;299H[K[37;299H95,9[10C58%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Htransforms.ToTensor(),[37;299H[K[37;299H94,9[10C57%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Htransforms.Scale(([31m129[0m,[31m71[0m)),[37;299H[K[37;299H93,6-9[8C56%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[31m'train'[0m: transforms.Compose([[37;299H[K[37;299H92,9[10C56%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hdata_transforms = {[37;299H[K[37;299H91,9[10C55%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H90,0-1[8C54%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[36mprint[0m([31m"learning_rate: {0}, decay:{1}, checkpoint:{2}"[0m.format(args.lr,args.lr_de,args.checkpoint))[37;299H[K[37;299H89,9[10C54%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H88,0-1[8C53%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H87,0-1[8C53%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Htorch.cuda.manual_seed_all(manualseed)[37;299H[K[37;299H86,9[10C52%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H85,9[10C51%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H84,0-1[8C51%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hnp.random.seed(manualseed)[37;299H[K[37;299H83,9[10C50%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Htorch.manual_seed(manualseed)[37;299H[K[37;299H82,9[10C50%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hrandom.seed(manualseed)[37;299H[K[37;299H81,9[10C49%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hmanualseed = [31m200[0m[37;299H[K[37;299H80,9[10C48%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H79,0-1[8C48%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hargs = parser.parse_args()[37;299H[K[37;299H78,9[10C47%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hparser.add_argument([31m'--wd'[0m,[31m'--weightdecay'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0[0m)[37;299H[K[37;299H77,9[10C46%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hparser.add_argument([31m'--checkpoint'[0m,[36mtype[0m=[36mstr[0m,default=[31m''[0m)[37;299H[K[37;299H76,9[10C46%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hparser.add_argument([31m'--lr_de'[0m,[31m'--lr_decay'[0m,[36mtype[0m=[36mint[0m,default=[31m30[0m,[36mhelp[0m=[31m'learning rate decay epoch'[0m)[37;299H[K[37;299H75,9[10C45%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hparser.add_argument([31m'--lr'[0m,[31m'--learning_rate'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0.001[0m,[36mhelp[0m=[31m'initial learning rate'[0m)[37;299H[K[37;299H74,9[10C45%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H73,0-1[8C44%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1Hparser = argparse.ArgumentParser(description=[31m'PyTorch Speech Recognition'[0m)[37;299H[K[37;299H72,9[10C43%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H71,0-1[8C43%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H70,0-1[8C42%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs[37;299H[K[37;299H69,9[10C41%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hcorrects = torch.sum(pred==labels.data)[37;299H[K[37;299H68,9[10C41%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H67,0-1[8C40%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hoptimizer.step()[37;299H[K[37;299H66,9[10C40%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hloss.backward()[37;299H[K[37;299H65,9[10C39%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m phase==[31m'train'[0m:[37;299H[K[37;299H64,9[10C38%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H63,0-1[8C38%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpred[106m[[0mpred<=[31m0.5[0m[106m][0m = [31m0[0m[37;299H[K[37;299H62,9[10C37%[1;9H[?12l[?25h[?25l[2;36r[2;1H[L[1;37r[1;14H>[31m0.5[0m[106m][0m = [31m1[0m[1;23H[K[2;5Hpred[pred<=[31m0.5[0m] = [31m0[0m[37;299H[K[37;299H61,9[10C37%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpred = outputs.data.clone()[2;9H[[8C][37;299H[K[37;299H60,9[10C36%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H59,4[10C35%[1;4H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hloss = criterion(outputs, labels)[37;299H[K[37;299H58,9[10C35%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Houtputs = torch.squeeze(outputs)[37;299H[K[37;299H57,9[10C34%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hlabels = labels.type(torch.FloatTensor)[37;299H[K[37;299H56,9[10C33%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130melse[0m:[37;299H[K[37;299H55,9[10C33%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hlabels = labels.type(torch.cuda.FloatTensor)[37;299H[K[37;299H54,9[10C32%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H53,9[10C32%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Houtputs = model(inputs)[37;299H[K[37;299H52,9[10C31%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hoptimizer.zero_grad()[37;299H[K[37;299H51,9[10C30%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H50,0-1[8C30%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;13Hinputs, labels = Variable(inputs, volatile = [36mTrue[0m), Variable(labels, volatile= [36mTrue[0m)[37;299H[K[37;299H49,9-12[7C29%[1;12H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[38;5;130melse[0m:[37;299H[K[37;299H48,6-9[8C29%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;13Hinputs, labels = Variable(inputs.cuda(), volatile = [36mTrue[0m), Variable(labels.cuda(), volatile= [36mTrue[0m)[37;299H[K[37;299H47,6-12[7C28%[1;12H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H46,6-9[8C27%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H45,0-1[8C27%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130melse[0m:[37;299H[K[37;299H44,9[10C26%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;13Hinputs, labels = Variable(inputs, requires_grad = [36mFalse[0m), Variable(labels, requires_grad = [36mFalse[0m)[37;299H[K[37;299H43,9-12[7C25%[1;12H[?12l[?25h[?25l[37;300H4,9   [2;9H[?12l[?25h[?25l[37;300H5,0-1[3;1H[?12l[?25h[?25l[37;300H6,6-9[4;9H[?12l[?25h[?25l[37;300H7,6-12[5;12H[?12l[?25h[?25l[37;300H8,6-9 [6;9H[?12l[?25h[?25l[37;300H9,9-12[7;12H[?12l[?25h[?25l[37;299H50,0-1 [8;1H[?12l[?25h[?25l[37;300H1,9  [9;9H[?12l[?25h[?25l[37;300H2[10;9H[?12l[?25h[?25l[37;300H3[11;9H[?12l[?25h[?25l[37;300H4[12;9H[?12l[?25h[?25l[37;300H5[13;9H[?12l[?25h[?25l[37;300H6[14;9H[?12l[?25h[?25l[37;300H7[15;9H[?12l[?25h[?25l[37;300H8[16;9H[?12l[?25h[?25l[37;300H9,4[17;4H[?12l[?25h[?25l[37;299H60,9[18;9H[?12l[?25h[?25l[19;9H[106m[[8C][0m[37;300H1[19;9H[?12l[?25h[?25l[[8C][20;9H[106m[[9C][0m[37;300H2[20;9H[?12l[?25h[?25l[[9C][37;300H3,0-1[21;1H[?12l[?25h[?25l[37;300H4,9  [22;9H[?12l[?25h[?25l[37;300H5[23;9H[?12l[?25h[?25l[37;300H6[24;9H[?12l[?25h[?25l[37;300H7,0-1[25;1H[?12l[?25h[?25l[37;300H6,9  [24;9H[?12l[?25h[?25l[37;300H5[23;9H[?12l[?25h[?25l[37;300H4[22;9H[?12l[?25h[?25l[37;300H3,0-1[21;1H[?12l[?25h[?25l[20;9H[106m[[9C][0m[37;300H2,9  [20;9H[?12l[?25h[?25l[19;9H[106m[[8C][0m[20;9H[[9C][37;300H1[19;9H[?12l[?25h[?25l[[8C][37;300H0[18;9H[?12l[?25h[?25l[37;299H59,4[17;4H[?12l[?25h[?25l[37;300H8,9[16;9H[?12l[?25h[?25l[37;300H7[15;9H[?12l[?25h[?25l[37;300H6[14;9H[?12l[?25h[?25l[37;300H5[13;9H[?12l[?25h[?25l[37;300H4[12;9H[?12l[?25h[?25l[37;300H3[11;9H[?12l[?25h[?25l[37;300H2[10;9H[?12l[?25h[?25l[37;300H1[9;9H[?12l[?25h[?25l[37;300H0,0-1[8;1H[?12l[?25h[?25l[37;299H49,9-12[7;12H[?12l[?25h[?25l[37;300H8,6-9 [6;9H[?12l[?25h[?25l[37;300H7,6-12[5;12H[?12l[?25h[?25l[37;300H6,6-9 [4;9H[?12l[?25h[?25l[37;300H5,0-1[3;1H[?12l[?25h[?25l[37;300H4,9  [2;9H[?12l[?25h[?25l[37;300H3,9-12[1;12H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[38;5;130melse[0m:[37;299H[K[37;299H42,6-9[8C25%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;13Hinputs, labels = Variable(inputs.cuda(), requires_grad = [36mFalse[0m), Variable(labels.cuda(), requires_grad = [36mFalse[0m)[37;299H[K[37;299H41,6-12[7C24%[1;12H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[38;5;130mif[0m torch.cuda.is_available():[37;299H[K[37;299H40,6-9[8C24%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H39,0-1[8C23%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m phase == [31m'train'[0m:[37;299H[K[37;299H38,9[10C22%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H37,0-1[8C22%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hmodel.eval()[37;299H[K[37;299H36,9[10C21%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130melse[0m:[37;299H[K[37;299H35,9[10C20%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hmodel.train([36mTrue[0m)[37;299H[K[37;299H34,9[10C20%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m phase == [31m'train'[0m:[37;299H[K[37;299H33,9[10C19%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;1H[38;5;130mdef[0m [36mmodel_run[0m(phase,model,inputs,labels,criterion,optimizer):[37;299H[K[37;299H32,9[10C19%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H31,0-1[8C18%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9H[36mprint[0m([31m"New Best Model Found"[0m)[37;299H[K[37;299H30,9[10C17%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;9Hshutil.copyfile(filename, [31m'model_best.pth.tar'[0m)[37;299H[K[37;299H29,9[10C17%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5H[38;5;130mif[0m is_best:[37;299H[K[37;299H28,9[10C16%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H27,0-1[8C16%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpickle.dump(savevalcorrects,savevalcorrects_name)[37;299H[K[37;299H26,9[10C15%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpickle.dump(savevalloss,savevalloss_name)[37;299H[K[37;299H25,9[10C14%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpickle.dump(savetraincorrects,savetraincorrects_name)[37;299H[K[37;299H24,9[10C14%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hpickle.dump(savetrainloss,savetrainloss_name)[37;299H[K[37;299H23,9[10C13%[1;9H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[37;299H[K[37;299H22,0-1[8C12%[1;1H[?12l[?25h[?25l[1;36r[1;1H[L[1;37r[1;5Hsavevalcorrects_name = [36mopen[0m([31m'valcorrects'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)[37;299H[K[37;299H21,9[10C12%[1;9H[?12l[?25h[?25l[37;300H2,0-1[2;1H[?12l[?25h[?25l[37;300H3,9  [3;9H[?12l[?25h[?25l[37;300H4[4;9H[?12l[?25h[?25l[37;300H5[5;9H[?12l[?25h[?25l[37;300H6[6;9H[?12l[?25h[?25l[37;300H7,0-1[7;1H[?12l[?25h[?25l[37;300H8,9  [8;9H[?12l[?25h[?25l[37;300H9[9;9H[?12l[?25h[?25l[37;299H30[10;9H[?12l[?25h[?25l[37;300H1,0-1[11;1H[?12l[?25h[?25l[37;300H2,9  [12;9H[?12l[?25h[?25l[37;300H3[13;9H[?12l[?25h[?25l[37;300H4[14;9H[?12l[?25h[?25l[37;300H5[15;9H[?12l[?25h[?25l[37;300H6[16;9H[?12l[?25h[?25l[37;300H7,0-1[17;1H[?12l[?25h[?25l[37;300H8,9  [18;9H[?12l[?25h[?25l[37;300H9,0-1[19;1H[?12l[?25h[?25l[37;299H40,6-9[20;9H[?12l[?25h[?25l[37;300H1,6-12[21;12H[?12l[?25h[?25l[37;300H2,6-9 [22;9H[?12l[?25h[?25l[37;300H3,9-12[23;12H[?12l[?25h[?25l[37;300H4,9   [24;9H[?12l[?25h[?25l[37;300H5,0-1[25;1H[?12l[?25h[?25l[37;300H6,6-9[26;9H[?12l[?25h[?25l[37;300H7,6-12[27;12H[?12l[?25h[?25l[37;300H8,6-9 [28;9H[?12l[?25h[?25l[37;300H9,9-12[29;12H[?12l[?25h[?25l[37;299H50,0-1 [30;1H[?12l[?25h[?25l[37;300H1,9  [31;9H[?12l[?25h[?25l[37;300H2[32;9H[?12l[?25h[?25l[37;300H3[33;9H[?12l[?25h[?25l[37;300H4[34;9H[?12l[?25h[?25l[37;300H5[35;9H[?12l[?25h[?25l[37;300H6[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Houtputs = torch.squeeze(outputs)[37;299H[K[37;299H57,9[10C12%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hloss = criterion(outputs, labels)[37;299H[K[37;299H58,9[10C13%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H59,4[10C14%[36;4H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hpred = outputs.data.clone()[37;299H[K[37;299H60,9[10C14%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hpred[106m[[0mpred>[31m0.5[0m[106m][0m = [31m1[0m[37;299H[K[37;299H61,9[10C15%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[35;9H[[8C]
    pred[106m[[0mpred<=[31m0.5[0m[106m][0m = [31m0[0m[37;299H[K[37;299H62,9[10C16%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[35;9H[[9C][37;299H[K[37;299H63,0-1[8C16%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mif[0m phase==[31m'train'[0m:[37;299H[K[37;299H64,9[10C17%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hloss.backward()[37;299H[K[37;299H65,9[10C17%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;9Hoptimizer.step()[37;299H[K[37;299H66,9[10C18%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H67,0-1[8C19%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5Hcorrects = torch.sum(pred==labels.data)[37;299H[K[37;299H68,9[10C19%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;5H[38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs[37;299H[K[37;299H69,9[10C20%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H70,0-1[8C20%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H71,0-1[8C21%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser = argparse.ArgumentParser(description=[31m'PyTorch Speech Recognition'[0m)[37;299H[K[37;299H72,9[10C22%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[37;299H[K[37;299H73,0-1[8C22%[36;1H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--lr'[0m,[31m'--learning_rate'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0.001[0m,[36mhelp[0m=[31m'initial learning rate'[0m)[37;299H[K[37;299H74,9[10C23%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--lr_de'[0m,[31m'--lr_decay'[0m,[36mtype[0m=[36mint[0m,default=[31m30[0m,[36mhelp[0m=[31m'learning rate decay epoch'[0m)[37;299H[K[37;299H75,9[10C24%[36;9H[?12l[?25h[?25l[1;36r[36;1H
[1;37r[36;1Hparser.add_argument([31m'--checkpoint'[0m,[36mtype[0m=[36mstr[0m,default=[31m''[0m)[37;299H[K[37;299H76,9[10C24%[36;9H[?12l[?25h[?25l[37;300H5[35;9H[?12l[?25h[?25l[37;300H4[34;9H[?12l[?25h[?25l[37;300H3,0-1[33;1H[?12l[?25h[?25l[37;300H2,9  [32;9H[?12l[?25h[?25l[37;300H1,0-1[31;1H[?12l[?25h[?25l[37;300H0[30;1H[?12l[?25h[?25l[37;299H69,9  [29;9H[?12l[?25h[?25l[37;300H8[28;9H[?12l[?25h[?25l[37;300H9[29;9H[?12l[?25h[?25l[37;302H8[29;8H[?12l[?25h[?25l[37;302H7[29;7H[?12l[?25h[?25l[37;302H6[29;6H[?12l[?25h[?25l[37;302H5[29;5H[?12l[?25h[?25l[37;1H[1m-- INSERT --[0m[37;299H[K[37;299H69,5[10C24%[29;5H[?12l[?25h[?25l[30;36r[30;1H[L[1;37r[29;5H[K[30;1H[38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs[37;299H[K[37;299H70,1[10C24%[30;1H[?12l[?25h[?25l [38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs[37;302H2[30;2H[?12l[?25h[?25l [38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs[37;302H3[30;3H[?12l[?25h[?25l [38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs[37;302H4[30;4H[?12l[?25h[?25l [38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs[37;302H5[30;5H[?12l[?25h[?25l[37;299H69[29;5H[?12l[?25h[?25li[37;302H6[29;6H[?12l[?25h[?25lm[37;302H7[29;7H[?12l[?25h[?25lp[37;302H8[29;8H[?12l[?25h[?25lo[37;302H9[29;9H[?12l[?25h[?25lr[37;302H10[29;10H[?12l[?25h[?25l[35mimport[0m[37;303H1[29;11H[?12l[?25h[?25l[37;303H2[29;12H[?12l[?25h[?25lp[37;303H3[29;13H[?12l[?25h[?25ld[37;303H4[29;14H[?12l[?25h[?25l[103mpdb[0m[37;303H5[29;15H[?12l[?25h[?25l[30;36r[30;1H[L[1;37r[37;299H[K[37;299H70,1[10C24%[30;1H[?12l[?25h[?25l[37;302H2[30;2H[?12l[?25h[?25l[37;302H3[30;3H[?12l[?25h[?25l[37;302H4[30;4H[?12l[?25h[?25l[37;302H5[30;5H[?12l[?25h[?25lp[37;302H6[30;6H[?12l[?25h[?25ld[37;302H7[30;7H[?12l[?25h[?25l[103mpdb[0m[37;302H8[30;8H[?12l[?25h[?25l.[37;302H9[30;9H[?12l[?25h[?25ls[37;302H10[30;10H[?12l[?25h[?25le[37;303H1[30;11H[?12l[?25h[?25lt[37;303H2[30;12H[?12l[?25h[?25l_[37;303H3[30;13H[?12l[?25h[?25lt[37;303H4[30;14H[?12l[?25h[?25lr[37;303H5[30;15H[?12l[?25h[?25la[37;303H6[30;16H[?12l[?25h[?25lc[37;303H7[30;17H[?12l[?25h[?25le[37;303H8[30;18H[?12l[?25h[?25l([37;303H9[30;19H[?12l[?25h[?25l)[106m()[0m[37;302H20[30;20H[?12l[?25h[37;1H[K[30;19H[?25l[37;299H70,19[9C24%[30;19H[?12l[?25h[?25l[37;299H[K[37;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"main.py" 200L, 6484C written
[?1l>[?12l[?25h[?1049l[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m ./speech_job.sh 
learning_rate: 0.01, decay:30, checkpoint:checkpoint_ep400.pth.tar
....Initializing data sampler.....
....Loading Model.....
....Model loaded....
checkpoint Loaded star_epoch = 400,best_loss= 0.11630326617313058
> /home/devansh/Documents/Speech_Recognition/main.py(71)model_run()
-> return loss.cpu().data[0],corrects,outputs
(Pdb) loss
Variable containing:
nan
[torch.cuda.FloatTensor of size 1 (GPU 0)]

(Pdb) ot[Kutputs
Variable containing:
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
[torch.cuda.FloatTensor of size 25 (GPU 0)]

(Pdb) inputs
Variable containing:
( 0 , 0 ,.,.) = 
 -1.0000 -1.0000 -1.0000  ...  -0.9922 -1.0000 -1.0000
 -0.9922 -0.9922 -0.9922  ...  -0.9922 -0.9922 -0.9922
 -0.9843 -0.9765 -0.9765  ...  -0.9922 -0.9686 -0.9529
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

( 1 , 0 ,.,.) = 
 -0.7098 -0.7098 -0.7176  ...  -0.8431 -0.5451 -0.3647
 -0.2157 -0.1216  0.0353  ...  -0.4588 -0.3020 -0.2078
 -0.8039 -0.7569 -0.6784  ...  -0.7804 -0.8745 -0.9294
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

( 2 , 0 ,.,.) = 
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
...     
      ⋮  

(22 , 0 ,.,.) = 
 -1.0000 -0.9922 -0.9765  ...  -0.9922 -1.0000 -1.0000
 -0.9922 -0.9843 -0.9765  ...  -1.0000 -0.9922 -0.9922
 -0.9922 -0.9922 -0.9922  ...  -0.9922 -0.9843 -0.9686
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

(23 , 0 ,.,.) = 
 -0.8118 -0.7725 -0.6941  ...  -0.7647 -0.3647 -0.1294
 -0.2941 -0.3569 -0.4667  ...  -0.3882 -0.1294  0.0196
 -0.4275 -0.3961 -0.3255  ...  -0.5765 -0.4353 -0.3490
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
      ⋮  

(24 , 0 ,.,.) = 
 -0.9608 -0.9686 -0.9922  ...  -0.9922 -1.0000 -1.0000
 -0.9843 -0.9843 -0.9922  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
           ...             ⋱             ...          
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
 -1.0000 -1.0000 -1.0000  ...  -1.0000 -1.0000 -1.0000
[torch.cuda.FloatTensor of size 25x1x71x129 (GPU 0)]

(Pdb) model()i)n)p)u)t)s)
Variable containing:
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
  nan
[torch.cuda.FloatTensor of size 25x1 (GPU 0)]

(Pdb) exit()
Traceback (most recent call last):
  File "main.py", line 164, in <module>
    loss,correct,_ = model_run('train',model_ft, input_speech, label, criterion, optimizer)
  File "main.py", line 71, in model_run
    return loss.cpu().data[0],corrects,outputs
  File "main.py", line 71, in model_run
    return loss.cpu().data[0],corrects,outputs
  File "/home/devansh/anaconda3/lib/python3.6/bdb.py", line 48, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/devansh/anaconda3/lib/python3.6/bdb.py", line 67, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m vim main.py 
[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;37r[?12;25h[?12l[?25h[27m[24m[0m[H[2J[?25l[37;1H"main.py" 200L, 6484C[1;1H[35mimport[0m numpy [38;5;130mas[0m np
[35mimport[0m random
[35mimport[0m shutil
[35mimport[0m pickle
[35mimport[0m torch
[35mfrom[0m model [35mimport[0m network
[35mfrom[0m data_loader_spec [35mimport[0m wave_spec
[35mimport[0m argparse
[35mfrom[0m torchvision [35mimport[0m transforms
[35mimport[0m os
[35mimport[0m torch.nn [38;5;130mas[0m nn
[35mfrom[0m torch.autograd [35mimport[0m Variable
[35mimport[0m torch.optim [38;5;130mas[0m optim

[38;5;130mdef[0m [36msave_checkpoint[0m(state, is_best, filename,savetrainloss,savetraincorrects,savevalloss,savevalcorrects):
    torch.save(state, filename)[18;5Hsavetrainloss_name = [36mopen[0m([31m'trainloss'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savetraincorrects_name = [36mopen[0m([31m'traincorrects'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savevalloss_name = [36mopen[0m([31m'valloss'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)
    savevalcorrects_name = [36mopen[0m([31m'valcorrects'[0m + [36mstr[0m(epoch) + [31m'.pkl'[0m,[31m'wb'[0m)[23;5Hpickle.dump(savetrainloss,savetrainloss_name)
    pickle.dump(savetraincorrects,savetraincorrects_name)
    pickle.dump(savevalloss,savevalloss_name)
    pickle.dump(savevalcorrects,savevalcorrects_name)[28;5H[38;5;130mif[0m is_best:[29;9Hshutil.copyfile(filename, [31m'model_best.pth.tar'[0m)[30;9H[36mprint[0m([31m"New Best Model Found"[0m)

[38;5;130mdef[0m [36mmodel_run[0m(phase,model,inputs,labels,criterion,optimizer):
    [38;5;130mif[0m phase == [31m'train'[0m:[34;9Hmodel.train([36mTrue[0m)
    [38;5;130melse[0m:[36;9Hmodel.eval()[37;299H1,1[11CTop[1;1H[?12l[?25h[?25l[37;1H[K[37;1H/[?12l[?25hp[?25l[?12l[?25hd[?25l[?12l[?25hb[?25l[?12l[?25h[?25l[27m[24m[0m[H[2J[1;5Houtputs = model(inputs)
    [38;5;130mif[0m torch.cuda.is_available():[3;9Hlabels = labels.type(torch.cuda.FloatTensor)
    [38;5;130melse[0m:[5;9Hlabels = labels.type(torch.FloatTensor)
    outputs = torch.squeeze(outputs)
    loss = criterion(outputs, labels)[9;5Hpred = outputs.data.clone()
    pred[pred>[31m0.5[0m] = [31m1[0m
    pred[pred<=[31m0.5[0m] = [31m0[0m[13;5H[38;5;130mif[0m phase==[31m'train'[0m:[14;9Hloss.backward()[15;9Hoptimizer.step()[17;5Hcorrects = torch.sum(pred==labels.data)
    [35mimport[0m [103mpdb
[0m    [103mpdb[0m.set_trace()
    [38;5;130mreturn[0m loss.cpu().data[[31m0[0m],corrects,outputs


parser = argparse.ArgumentParser(description=[31m'PyTorch Speech Recognition'[0m)

parser.add_argument([31m'--lr'[0m,[31m'--learning_rate'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0.001[0m,[36mhelp[0m=[31m'initial learning rate'[0m)
parser.add_argument([31m'--lr_de'[0m,[31m'--lr_decay'[0m,[36mtype[0m=[36mint[0m,default=[31m30[0m,[36mhelp[0m=[31m'learning rate decay epoch'[0m)
parser.add_argument([31m'--checkpoint'[0m,[36mtype[0m=[36mstr[0m,default=[31m''[0m)
parser.add_argument([31m'--wd'[0m,[31m'--weightdecay'[0m,[36mtype[0m=[36mfloat[0m,default=[31m0[0m)
args = parser.parse_args()

manualseed = [31m200[0m
random.seed(manualseed)
torch.manual_seed(manualseed)
np.random.seed(manualseed)

[38;5;130mif[0m torch.cuda.is_available():[37;299H69,12[9C31%[18;12H[?12l[?25h[?25l[47m    [0m[35m[47mimport[0m[47m [1Cdb [0m[37;1H[1m-- VISUAL LINE --[0m[37;299H[K[37;299H69,12[9C31%[18;12H[?12l[?25h[?25l[47mp
    pdb.set[0m_[47mtrace() [0m[37;299H70[19;12H[?12l[?25h[?25l[18;36r[18;1H[2M[1;37r[35;5Htorch.cuda.manual_seed_all(manualseed)[37;1H[K[37;299H69,5[10C31%[18;5H[?12l[?25h[?25l[37;299H[K[37;1H/[?12l[?25hp[?25l[?12l[?25hd[?25l[?12l[?25hb[?25l[?12l[?25h[?25l[31msearch hit BOTTOM, continuing at TOP[0m[97m[41mE486: Pattern not found: pdb[0m[37;29H[K[37;299H69,5[10C31%[18;5H[?12l[?25h[?25l[37;1H[K[37;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"main.py" 198L, 6449C written
[?1l>[?12l[?25h[?1049l[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m c[Kvim model.py 
[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;37r[?12;25h[?12l[?25h[27m[24m[0m[H[2J[?25l[37;1H"model.py" 33L, 1068C[1;1H[35mimport[0m torch
[35mfrom[0m torchvision [35mimport[0m models
[35mimport[0m torch.nn [38;5;130mas[0m nn
[35mimport[0m torch.utils.model_zoo [38;5;130mas[0m model_zoo
[35mfrom[0m torchvision [35mimport[0m models
[35mimport[0m math

[38;5;130mclass[0m [36mnetwork[0m(nn.Module):[10;5H[38;5;130mdef[0m [36m__init__[0m(self):[11;9H[36msuper[0m(network,self).__init__()[12;9Hself.conv1 = nn.Conv2d([31m1[0m,[31m64[0m,kernel_size=([31m46[0m,[31m8[0m),stride=([31m1[0m,[31m1[0m),bias=[36mTrue[0m,padding=([31m0[0m,[31m0[0m))[13;9Hself.pool = nn.MaxPool2d(kernel_size=([31m1[0m,[31m3[0m),stride=([31m1[0m,[31m3[0m))[14;9Hself.conv2 = nn.Conv2d([31m64[0m,[31m64[0m,kernel_size=([31m18[0m,[31m4[0m),stride=([31m1[0m,[31m1[0m),bias=[36mTrue[0m,padding=([31m0[0m,[31m0[0m))[15;9Hself.lin1 = nn.Linear([31m64[0m,[31m32[0m)[16;9Hself.rel = nn.ReLU()[17;9Hself.dnn = nn.Sequential(nn.Linear([31m10656[0m, [31m10656[0m), nn.ReLU(inplace=[36mTrue[0m), nn.Linear([31m10656[0m, [31m5328[0m), nn.ReLU(inplace=[36mTrue[0m),[18;13Hnn.Linear([31m5328[0m, [31m2664[0m), nn.ReLU(inplace=[36mTrue[0m), nn.Linear([31m2664[0m, [31m1[0m))[20;9H[38;5;130mfor[0m m [38;5;130min[0m self.modules():[21;13H[38;5;130mif[0m [36misinstance[0m(m, nn.Conv2d):[22;17Hn = m.kernel_size[[31m0[0m] * m.kernel_size[[31m1[0m] * m.out_channels[23;17Hm.weight.data.normal_([31m0[0m, math.sqrt([31m2.[0m / n))[25;5H[38;5;130mdef[0m [36mforward[0m(self,x):[26;9Hx = self.pool(self.conv1(x))[27;9Hx = self.conv2(x)[28;9Hx = x.permute([31m0[0m,[31m2[0m,[31m3[0m,[31m1[0m)[29;9Hx = self.rel(self.lin1(x))[30;9Hx = x.view(x.size([31m0[0m),-[31m1[0m)[31;9Hx = self.dnn(x)[32;9H[38;5;130mreturn[0m x

[94m~                                                                                                                                                                                                                                                                                                                           [35;1H~                                                                                                                                                                                                                                                                                                                           [36;1H~                                                                                                                                                                                                                                                                                                                           [0m[37;299H1,1[11CAll[1;1H[?12l[?25h[?25l[37;299H2[2;1H[?12l[?25h[?25l[37;299H3[3;1H[?12l[?25h[?25l[37;299H4[4;1H[?12l[?25h[?25l[37;299H5[5;1H[?12l[?25h[?25l[37;299H6[6;1H[?12l[?25h[?25l[37;299H7,0-1[7;1H[?12l[?25h[?25l[37;299H8,1  [8;1H[?12l[?25h[?25l[37;299H9,0-1[9;1H[?12l[?25h[?25l[37;299H10,1-4[10;4H[?12l[?25h[?25l[37;300H1[11;4H[?12l[?25h[?25l[37;300H2[12;4H[?12l[?25h[?25l[37;300H3[13;4H[?12l[?25h[?25l[37;300H4[14;4H[?12l[?25h[?25l[37;300H5[15;4H[?12l[?25h[?25l[37;300H6[16;4H[?12l[?25h[?25l[37;300H7[17;4H[?12l[?25h[?25l[37;300H8[18;4H[?12l[?25h[?25l[37;300H9,0-1[19;1H[?12l[?25h[?25l[37;299H20,1-4[20;4H[?12l[?25h[?25l[37;300H1[21;4H[?12l[?25h[?25l[37;300H2[22;4H[?12l[?25h[?25l[37;300H3[23;4H[?12l[?25h[?25l[37;300H4,0-1[24;1H[?12l[?25h[?25l[37;300H5,1-4[25;4H[?12l[?25h[?25l[37;300H6[26;4H[?12l[?25h[?25l[37;300H7[27;4H[?12l[?25h[?25l[37;300H8[28;4H[?12l[?25h[?25l[37;300H9[29;4H[?12l[?25h[?25l[37;299H30[30;4H[?12l[?25h[?25l[37;300H1[31;4H[?12l[?25h[?25l[37;300H2[32;4H[?12l[?25h[?25l[37;300H3,0-1[33;1H[?12l[?25h[?25l[37;300H2,1-4[32;4H[?12l[?25h[?25l[37;300H1[31;4H[?12l[?25h[?25l[37;300H0[30;4H[?12l[?25h[?25l[37;299H29[29;4H[?12l[?25h[?25l[37;300H8[28;4H[?12l[?25h[?25l[37;300H7[27;4H[?12l[?25h[?25l[37;300H6[26;4H[?12l[?25h[?25l[37;300H5[25;4H[?12l[?25h[?25l[37;1H[1m-- INSERT --[0m[37;13H[K[37;299H25,1[10CAll[25;1H[?12l[?25h[?25l[37;300H6[26;1H[?12l[?25h[?25l[37;302H2-5[26;5H[?12l[?25h[?25l[37;302H3-9[26;9H[?12l[?25h[?25l[37;302H4-10[26;10H[?12l[?25h[?25l[37;302H3-9 [26;9H[?12l[?25h[?25lix = self.pool(self.conv1(x))[37;302H4-10[26;10H[?12l[?25h[?25lmx = self.pool(self.conv1(x))[37;302H5-11[26;11H[?12l[?25h[?25lpx = self.pool(self.conv1(x))[37;302H6-12[26;12H[?12l[?25h[?25lox = self.pool(self.conv1(x))[37;302H7-13[26;13H[?12l[?25h[?25lrx = self.pool(self.conv1(x))[37;302H8-14[26;14H[?12l[?25h[?25ltx = self.pool(self.conv1(x))[37;302H9-15[26;15H[?12l[?25h[?25l[35mimport[0m x = self.pool(self.conv1(x))[37;302H10-16[26;16H[?12l[?25h[?25lpx = self.pool(self.conv1(x))[37;303H1-17[26;17H[?12l[?25h[?25ldx = self.pool(self.conv1(x))[37;303H2-18[26;18H[?12l[?25h[?25lbx = self.pool(self.conv1(x))[37;303H3-19[26;19H[?12l[?25h[?25l[27;36r[27;1H[L[1;37r[26;19H[K[27;1Hx = self.pool(self.conv1(x))[37;299H[K[37;299H27,1[10CAll[27;1H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H2[27;2H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H3[27;3H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H4[27;4H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H5[27;5H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H6[27;6H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H7[27;7H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H8[27;8H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H9[27;9H[?12l[?25h[?25lpx = self.pool(self.conv1(x))[37;302H10[27;10H[?12l[?25h[?25lsx = self.pool(self.conv1(x))[37;303H1[27;11H[?12l[?25h[?25lx = self.pool(self.conv1(x)[27;38H[K[37;303H0[27;10H[?12l[?25h[?25ldx = self.pool(self.conv1(x))[37;303H1[27;11H[?12l[?25h[?25lbx = self.pool(self.conv1(x))[37;303H2[27;12H[?12l[?25h[?25l.x = self.pool(self.conv1(x))[37;303H3[27;13H[?12l[?25h[?25lsx = self.pool(self.conv1(x))[37;303H4[27;14H[?12l[?25h[?25lex = self.pool(self.conv1(x))[37;303H5[27;15H[?12l[?25h[?25ltx = self.pool(self.conv1(x))[37;303H6[27;16H[?12l[?25h[?25l_x = self.pool(self.conv1(x))[37;303H7[27;17H[?12l[?25h[?25ltx = self.pool(self.conv1(x))[37;303H8[27;18H[?12l[?25h[?25lax = self.pool(self.conv1(x))[37;303H9[27;19H[?12l[?25h[?25lrx = self.pool(self.conv1(x))[37;302H20[27;20H[?12l[?25h[?25lx = self.pool(self.conv1(x)[27;47H[K[37;302H19[27;19H[?12l[?25h[?25lx = self.pool(self.conv1(x)[27;46H[K[37;303H8[27;18H[?12l[?25h[?25lrx = self.pool(self.conv1(x))[37;303H9[27;19H[?12l[?25h[?25lax = self.pool(self.conv1(x))[37;302H20[27;20H[?12l[?25h[?25lcx = self.pool(self.conv1(x))[37;303H1[27;21H[?12l[?25h[?25lex = self.pool(self.conv1(x))[37;303H2[27;22H[?12l[?25h[?25l(x = self.pool(self.conv1(x))[37;303H3[27;23H[?12l[?25h[?25l)x = self.pool(self.conv1(x))[27;22H[106m()[0m[37;303H4[27;24H[?12l[?25h[?25l[28;36r[28;1H[L[1;37r[27;24H[K[28;1Hx = self.pool(self.conv1(x))[37;299H[K[37;299H28,1[10CAll[27;22H()
[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H2[28;2H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H3[28;3H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H4[28;4H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H5[28;5H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H6[28;6H[?12l[?25h[?25l  x = self.pool(self.conv1(x))[37;302H8[28;8H[?12l[?25h[?25l x = self.pool(self.conv1(x))[37;302H9[28;9H[?12l[?25h[37;1H[K[28;8H[?25l[37;299H28,8[10CAll[28;8H[?12l[?25h[?25l[37;299H[K[37;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"model.py" 35L, 1111C written
[?1l>[?12l[?25h[?1049l[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m .spr[Ke[K[K[K/speech_job.sh 
Traceback (most recent call last):
  File "main.py", line 6, in <module>
    from model import network
  File "/home/devansh/Documents/Speech_Recognition/model.py", line 27
    pdb.set_trace()
                  ^
TabError: inconsistent use of tabs and spaces in indentation
[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m vim mode.[Kl.py 
[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;37r[?12;25h[?12l[?25h[27m[24m[0m[H[2J[?25l[37;1H"model.py" 35L, 1111C[1;1H[35mimport[0m torch
[35mfrom[0m torchvision [35mimport[0m models
[35mimport[0m torch.nn [38;5;130mas[0m nn
[35mimport[0m torch.utils.model_zoo [38;5;130mas[0m model_zoo
[35mfrom[0m torchvision [35mimport[0m models
[35mimport[0m math

[38;5;130mclass[0m [36mnetwork[0m(nn.Module):[10;5H[38;5;130mdef[0m [36m__init__[0m(self):[11;9H[36msuper[0m(network,self).__init__()[12;9Hself.conv1 = nn.Conv2d([31m1[0m,[31m64[0m,kernel_size=([31m46[0m,[31m8[0m),stride=([31m1[0m,[31m1[0m),bias=[36mTrue[0m,padding=([31m0[0m,[31m0[0m))[13;9Hself.pool = nn.MaxPool2d(kernel_size=([31m1[0m,[31m3[0m),stride=([31m1[0m,[31m3[0m))[14;9Hself.conv2 = nn.Conv2d([31m64[0m,[31m64[0m,kernel_size=([31m18[0m,[31m4[0m),stride=([31m1[0m,[31m1[0m),bias=[36mTrue[0m,padding=([31m0[0m,[31m0[0m))[15;9Hself.lin1 = nn.Linear([31m64[0m,[31m32[0m)[16;9Hself.rel = nn.ReLU()[17;9Hself.dnn = nn.Sequential(nn.Linear([31m10656[0m, [31m10656[0m), nn.ReLU(inplace=[36mTrue[0m), nn.Linear([31m10656[0m, [31m5328[0m), nn.ReLU(inplace=[36mTrue[0m),[18;13Hnn.Linear([31m5328[0m, [31m2664[0m), nn.ReLU(inplace=[36mTrue[0m), nn.Linear([31m2664[0m, [31m1[0m))[20;9H[38;5;130mfor[0m m [38;5;130min[0m self.modules():[21;13H[38;5;130mif[0m [36misinstance[0m(m, nn.Conv2d):[22;17Hn = m.kernel_size[[31m0[0m] * m.kernel_size[[31m1[0m] * m.out_channels[23;17Hm.weight.data.normal_([31m0[0m, math.sqrt([31m2.[0m / n))[25;5H[38;5;130mdef[0m [36mforward[0m(self,x):[26;9H[35mimport[0m pdb[27;9Hpdb.set_trace()[28;9Hx = self.pool(self.conv1(x))[29;9Hx = self.conv2(x)[30;9Hx = x.permute([31m0[0m,[31m2[0m,[31m3[0m,[31m1[0m)[31;9Hx = self.rel(self.lin1(x))[32;9Hx = x.view(x.size([31m0[0m),-[31m1[0m)[33;9Hx = self.dnn(x)[34;9H[38;5;130mreturn[0m x

[94m~                                                                                                                                                                                                                                                                                                                           [0m[37;299H1,1[11CAll[1;1H[?12l[?25h[?25l[37;299H2[2;1H[?12l[?25h[?25l[37;299H3[3;1H[?12l[?25h[?25l[37;299H4[4;1H[?12l[?25h[?25l[37;299H5[5;1H[?12l[?25h[?25l[37;299H6[6;1H[?12l[?25h[?25l[37;299H7,0-1[7;1H[?12l[?25h[?25l[37;299H8,1  [8;1H[?12l[?25h[?25l[37;299H9,0-1[9;1H[?12l[?25h[?25l[37;299H10,1-4[10;4H[?12l[?25h[?25l[37;300H1[11;4H[?12l[?25h[?25l[37;300H2[12;4H[?12l[?25h[?25l[37;300H3[13;4H[?12l[?25h[?25l[37;300H4[14;4H[?12l[?25h[?25l[37;300H5[15;4H[?12l[?25h[?25l[37;300H6[16;4H[?12l[?25h[?25l[37;300H7[17;4H[?12l[?25h[?25l[37;300H8[18;4H[?12l[?25h[?25l[37;300H9,0-1[19;1H[?12l[?25h[?25l[37;299H20,1-4[20;4H[?12l[?25h[?25l[37;300H1[21;4H[?12l[?25h[?25l[37;300H2[22;4H[?12l[?25h[?25l[37;300H3[23;4H[?12l[?25h[?25l[37;300H4,0-1[24;1H[?12l[?25h[?25l[37;300H5,1-4[25;4H[?12l[?25h[?25l[37;300H6[26;4H[?12l[?25h[?25l[37;302H2-8[26;8H[?12l[?25h[?25l[37;302H3-9[26;9H[?12l[?25h[?25l[37;300H7,9  [27;9H[?12l[?25h[?25l[37;300H8[28;9H[?12l[?25h[?25l[37;300H9,3-9[29;9H[?12l[?25h[?25l[37;302H2-8[29;8H[?12l[?25h[?25l[37;302H1-4[29;4H[?12l[?25h[?25l[37;1H[1m-- INSERT --[0m[37;13H[K[37;299H29,1[10CAll[29;1H[?12l[?25h[?25l[37;302H2-5[29;5H[?12l[?25h[?25l[37;302H3-9[29;9H[?12l[?25h[?25l[37;302H4-10[29;10H[?12l[?25h[?25l[37;299H30[30;10H[?12l[?25h[?25l[37;302H3-9 [30;9H[?12l[?25h[?25l[37;302H2-5[30;5H[?12l[?25h[?25l[37;302H1  [30;1H[?12l[?25h[?25l[37;299H29[29;1H[?12l[?25h[?25l[37;300H8[28;1H[?12l[?25h[?25l[37;300H7[27;1H[?12l[?25h[?25l[7Cpdb.set_trace()[27;23H[K[27;1H[?12l[?25h[?25l      pdb.set_trace()[27;22H[K[27;1H[?12l[?25h[?25l     pdb.set_trace()[27;21H[K[27;1H[?12l[?25h[?25l    pdb.set_trace()[27;20H[K[27;1H[?12l[?25h[?25l   pdb.set_trace()[27;19H[K[27;1H[?12l[?25h[?25l  pdb.set_trace()[27;18H[K[27;1H[?12l[?25h[?25l pdb.set_trace()[27;17H[K[27;1H[?12l[?25h[?25lpdb.set_trace()[27;16H[K[27;1H[?12l[?25h[?25l[26;36r[36;1H
[1;37r[26;1H        [35mimport[0m pdbpdb.set_trace()[36;1H[94m~                                                                                                                                                                                                                                                                                                                           [0m[37;299H[K[37;299H26,13-19      All[26;19H[?12l[?25h[?25l[27;36r[27;1H[L[1;37r[26;19H[K[27;1Hpdb.set_trace()[37;299H[K[37;299H27,1[10CAll[27;1H[?12l[?25h[?25l    pdb.set_trace()[37;302H2-5[27;5H[?12l[?25h[?25l    pdb.set_trace()[37;302H3-9[27;9H[?12l[?25h[?25l[37;300H6[26;9H[?12l[?25h[?25l[35mimport[0m pdb[26;16H[K[37;302H2-5[26;5H[?12l[?25h[?25l[35mimport[0m pdb[26;12H[K[37;302H1  [26;1H[?12l[?25h[?25l[25;36r[36;1H
[1;37r[25;1H    [38;5;130mdef[0m [36mforward[0m(self,x):[35mimport[0m pdb[36;1H[94m~                                                                                                                                                                                                                                                                                                                           [0m[37;299H[K[37;299H25,22-25      All[25;25H[?12l[?25h[?25l[26;36r[26;1H[L[1;37r[25;25H[K[26;1H[35mimport[0m pdb[37;299H[K[37;299H26,1[10CAll[26;1H[?12l[?25h[?25l    [35mimport[0m pdb[37;302H2-5[26;5H[?12l[?25h[?25l    [35mimport[0m pdb[37;302H3-9[26;9H[?12l[?25h[37;1H[K[26;8H[?25l[37;299H26,2-8[8CAll[26;8H[?12l[?25h[?25l[37;299H[K[37;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"model.py" 35L, 1105C written
[?1l>[?12l[?25h[?1049l[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m ./speech_job.sh 
Traceback (most recent call last):
  File "main.py", line 6, in <module>
    from model import network
  File "/home/devansh/Documents/Speech_Recognition/model.py", line 28
    x = self.pool(self.conv1(x))
                               ^
TabError: inconsistent use of tabs and spaces in indentation
[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m vim model.py 
[?1049h[?1h=[2;1H▽[6n[2;1H  [1;1H[1;37r[?12;25h[?12l[?25h[27m[24m[0m[H[2J[?25l[37;1H"model.py" 35L, 1105C[1;1H[35mimport[0m torch
[35mfrom[0m torchvision [35mimport[0m models
[35mimport[0m torch.nn [38;5;130mas[0m nn
[35mimport[0m torch.utils.model_zoo [38;5;130mas[0m model_zoo
[35mfrom[0m torchvision [35mimport[0m models
[35mimport[0m math

[38;5;130mclass[0m [36mnetwork[0m(nn.Module):[10;5H[38;5;130mdef[0m [36m__init__[0m(self):[11;9H[36msuper[0m(network,self).__init__()[12;9Hself.conv1 = nn.Conv2d([31m1[0m,[31m64[0m,kernel_size=([31m46[0m,[31m8[0m),stride=([31m1[0m,[31m1[0m),bias=[36mTrue[0m,padding=([31m0[0m,[31m0[0m))[13;9Hself.pool = nn.MaxPool2d(kernel_size=([31m1[0m,[31m3[0m),stride=([31m1[0m,[31m3[0m))[14;9Hself.conv2 = nn.Conv2d([31m64[0m,[31m64[0m,kernel_size=([31m18[0m,[31m4[0m),stride=([31m1[0m,[31m1[0m),bias=[36mTrue[0m,padding=([31m0[0m,[31m0[0m))[15;9Hself.lin1 = nn.Linear([31m64[0m,[31m32[0m)[16;9Hself.rel = nn.ReLU()[17;9Hself.dnn = nn.Sequential(nn.Linear([31m10656[0m, [31m10656[0m), nn.ReLU(inplace=[36mTrue[0m), nn.Linear([31m10656[0m, [31m5328[0m), nn.ReLU(inplace=[36mTrue[0m),[18;13Hnn.Linear([31m5328[0m, [31m2664[0m), nn.ReLU(inplace=[36mTrue[0m), nn.Linear([31m2664[0m, [31m1[0m))[20;9H[38;5;130mfor[0m m [38;5;130min[0m self.modules():[21;13H[38;5;130mif[0m [36misinstance[0m(m, nn.Conv2d):[22;17Hn = m.kernel_size[[31m0[0m] * m.kernel_size[[31m1[0m] * m.out_channels[23;17Hm.weight.data.normal_([31m0[0m, math.sqrt([31m2.[0m / n))[25;5H[38;5;130mdef[0m [36mforward[0m(self,x):[26;9H[35mimport[0m pdb[27;9Hpdb.set_trace()[28;9Hx = self.pool(self.conv1(x))[29;9Hx = self.conv2(x)[30;9Hx = x.permute([31m0[0m,[31m2[0m,[31m3[0m,[31m1[0m)[31;9Hx = self.rel(self.lin1(x))[32;9Hx = x.view(x.size([31m0[0m),-[31m1[0m)[33;9Hx = self.dnn(x)[34;9H[38;5;130mreturn[0m x

[94m~                                                                                                                                                                                                                                                                                                                           [0m[37;299H1,1[11CAll[1;1H[?12l[?25h[?25l[37;299H2[2;1H[?12l[?25h[?25l[37;299H3[3;1H[?12l[?25h[?25l[37;299H4[4;1H[?12l[?25h[?25l[37;299H5[5;1H[?12l[?25h[?25l[37;299H6[6;1H[?12l[?25h[?25l[37;299H7,0-1[7;1H[?12l[?25h[?25l[37;299H8,1  [8;1H[?12l[?25h[?25l[37;299H9,0-1[9;1H[?12l[?25h[?25l[37;299H10,1-4[10;4H[?12l[?25h[?25l[37;300H1[11;4H[?12l[?25h[?25l[37;300H2[12;4H[?12l[?25h[?25l[37;300H3[13;4H[?12l[?25h[?25l[37;300H4[14;4H[?12l[?25h[?25l[37;300H5[15;4H[?12l[?25h[?25l[37;300H6[16;4H[?12l[?25h[?25l[37;300H7[17;4H[?12l[?25h[?25l[37;300H8[18;4H[?12l[?25h[?25l[37;300H9,0-1[19;1H[?12l[?25h[?25l[37;299H20,1-4[20;4H[?12l[?25h[?25l[37;300H1[21;4H[?12l[?25h[?25l[37;300H2[22;4H[?12l[?25h[?25l[37;300H3[23;4H[?12l[?25h[?25l[37;300H4,0-1[24;1H[?12l[?25h[?25l[37;300H5,1-4[25;4H[?12l[?25h[?25l[37;300H6[26;4H[?12l[?25h[?25l[37;300H7[27;4H[?12l[?25h[?25l[37;300H8,1  [28;1H[?12l[?25h[?25l[37;300H9,1-4[29;4H[?12l[?25h[?25l[37;299H30[30;4H[?12l[?25h[?25l[37;300H1[31;4H[?12l[?25h[?25l[37;300H2[32;4H[?12l[?25h[?25l[37;300H3[33;4H[?12l[?25h[?25l[37;1H[1m-- INSERT --[0m[37;13H[K[37;299H33,1[10CAll[33;1H[?12l[?25h[?25l[37;302H2-5[33;5H[?12l[?25h[?25l[37;302H3-9[33;9H[?12l[?25h[?25l[37;300H2[32;9H[?12l[?25h[?25l[37;300H1[31;9H[?12l[?25h[?25l[37;300H0[30;9H[?12l[?25h[?25l[37;299H29[29;9H[?12l[?25h[?25l[37;300H8,9  [28;9H[?12l[?25h[?25l[37;300H7,3-9[27;9H[?12l[?25h[?25l[37;302H2-5[27;5H[?12l[?25h[?25l[37;302H1  [27;1H[?12l[?25h[?25l[26;36r[36;1H
[1;37r[26;9H[35mimport[0m pdb      pdb.set_trace()[36;1H[94m~                                                                                                                                                                                                                                                                                                                           [0m[37;299H[K[37;299H26,13-19      All[26;19H[?12l[?25h[?25l  pdb.set_trace()[26;36H[K[26;19H[?12l[?25h[?25lpdb.set_trace()[26;34H[K[26;19H[?12l[?25h[?25l[27;36r[27;1H[L[1;37r[26;19H[K[27;1Hpdb.set_trace()[37;299H[K[37;299H27,1[10CAll[27;1H[?12l[?25h[?25l    pdb.set_trace()[37;302H2-5[27;5H[?12l[?25h[?25l    pdb.set_trace()[37;302H3-9[27;9H[?12l[?25h[?25l[37;300H6[26;9H[?12l[?25h[?25l[35mimport[0m pdb[26;16H[K[37;302H2-5[26;5H[?12l[?25h[?25l[35mimport[0m pdb[26;12H[K[37;302H1  [26;1H[?12l[?25h[?25l[25;36r[36;1H
[1;37r[25;1H    [38;5;130mdef[0m [36mforward[0m(self,x):[35mimport[0m pdb[36;1H[94m~                                                                                                                                                                                                                                                                                                                           [0m[37;299H[K[37;299H25,22-25      All[25;25H[?12l[?25h[?25l[26;36r[26;1H[L[1;37r[25;25H[K[26;1H[35mimport[0m pdb[37;299H[K[37;299H26,1[10CAll[26;1H[?12l[?25h[?25l    [35mimport[0m pdb[37;302H2-5[26;5H[?12l[?25h[?25l    [35mimport[0m pdb[37;302H3-9[26;9H[?12l[?25h[37;1H[K[26;8H[?25l[37;299H26,2-8[8CAll[26;8H[?12l[?25h[?25l[37;299H[K[37;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"model.py" 35L, 1105C written
[?1l>[?12l[?25h[?1049l[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m ./speech_job.sh 
Traceback (most recent call last):
  File "main.py", line 6, in <module>
    from model import network
  File "/home/devansh/Documents/Speech_Recognition/model.py", line 28
    x = self.pool(self.conv1(x))
                               ^
TabError: inconsistent use of tabs and spaces in indentation
[1;36mdevansh[1;31m@[1;32manna-devbox02:[1;35m~/Documents/Speech_Recognition[1;31m$[0m exit
exit
